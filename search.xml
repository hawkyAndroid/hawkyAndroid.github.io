<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[日本之旅]]></title>
    <url>%2F2018%2F04%2F20%2Fsummary-japan-trip-4_13%2F</url>
    <content type="text"><![CDATA[– 其实2月初就开始准备签证资料了。只是那时快放假了，有些资料不充分，所以就拖到年后上班才接着备齐资料证明。从提交材料才拿到签证(签证+保险花了596，妹的第一次因为没办金卡还好有流水。个人感觉偏贵，朋友用金卡和居住证办的签证才花了300多)，花了近半个月的时间。然后开始买机票(花了1555，如果年前买的话可能更便宜，朋友比我提前几分钟买的票，尽然比我少花了300多，汗！)、订酒店(都是朋友搞定的，5个晚上平摊940)。接着朋友推荐买了大阪周游卡185、交通卡ICOCA138、随身wifi6*8、到银行换了点日元15000円(妹的，去了日本才知道取的现金不够，日本消费不是一般的贵，还好后来办了信用卡)。一切准备就绪后，最后就是用APP搜索计划要景点、路线规划及准备行李了。4月13号出发，6天的行程(计划旅游城市：大阪-Osaka 2~3天、京都-The Kyoto 2天)就这样开始了。 第一天从深圳口岸(还好朋友带了300RMB换了点港币)出发、经过人工通道”一地两检”，然后坐大巴到了香港，接着坐地铁(不是一般的贵，还好充了100)到了机场(香港机场不是一般的大，先是值机取票，然后坐个摆渡车 找个闸口找半天，汗！)，飞到大阪大概是晚上8~9点的样子，不太记得了。一下飞机就给ICOCA卡充值(买的卡里面只有1500円，想想肯定不够的，于是就充了3000円)，接着就是找住的地方了(民宿，很小，大概只有5~6平米的样子吧)。说实话，日本的地铁比较复杂绕来绕去，一开始我们都蒙了，找个公共地跌路线都走来走去饶了很久，朋友说要要坐普通公共地跌的那种比较便宜(像JR、阪急、阪神、特急、急行都比较贵)。就这样下了地铁后跟着google地图导航找到了住的地方(说话了一路上感觉这边的环境真的挺干净的)。很神奇，房东压根不在这，你只要一个大门和住的房子密码就可以拎包入住了。那时已经是晚上10点半了，肚子已经饿的步行了，于是就在街上逛了逛这边的夜市，吃了点小吃(这边的吃的贼贵，几个丸子花了500円，汗!)，一路上都能看到很多写着”居酒屋”的店(其实就相当于一个小型的KTV或者酒吧，可以边喝酒边唱歌)。接着找了个超市买了点早餐和零食然后就回家睡觉去了。 第二天准确的说，这天应该算是游玩的第一天了。这天起的还算早，一吃完早餐就直奔大阪城了，蹭别人的导游的解说(主要讲了讲丰臣秀吉的平生)顺便便拍了点风景照，嘿嘿！紧接着参观了一下天守阁、西之丸庭园和大阪历史博物馆。中午肚子已经饿得不行了(但还是赶着去下午的目的地)，本来想找家便宜点的地方吃饭，没想到附近吃的都那么贵，最后去麦当劳吃了一顿(话说还算相对便宜的)，吃完饭后紧接着下午去了道顿崛(坐船观光)、日本桥(电子产品、动漫、光碟特别多)、心斋桥(购物的天堂)，晚上坐了下HEP FIVE摩天轮、玩了下Wile River、还去了梅田蓝天大厦(在楼顶上看大阪的夜景还是挺不错的)。因为要去的景点比较多，所以玩得比较赶，不想浪费时间，毕竟是请假来旅游的，我和同事的想法是一致的，尽可能的多玩一些景点。还好有周游券，省了不少钱。回去大概已经是晚上10点多了，到了超市买了点早餐、零食，回去喝了点小酒就休息了。 第三天这天起得比较晚，将近10点才动身。早上先去动物园看了看，话说这里的动物确实挺多的，很多没见过。本来还想看看大象的，没想到大象已经永眠了，汗！接着去了四天王寺，由于起得比较晚，所以没去几个景点。下午就按原计划去去了海游馆(说实话，这是我见过海洋生物最多、面积最大的地方)，花了129RMB值了。然后就去坐船观赏，顺便去环球影城看了一下(没进去，门票太贵了)，就在周围瞎逛了逛，顺便买了个便当，把晚饭也给解决了。大概晚上6点半的样子坐上了返回的游船。快上岸的时候发现那个天保山摩天轮很大、而且五颜六色的很漂亮，然后就跟朋友商量去玩了一下，摩天轮上观赏夜景真的很美。由于要去京都，行程比较紧，所以晚上我们就坐地铁到大阪JR站，然后换乘JR京都线到了京都站，接着坐公交到了我们定好的酒店，顺便找了便利店买了早点、零食和两张公交劵(公交太TMD贵了，230円一次，所以就弄了两张公交劵，比刷ICOCA卡更划算)，到酒店已经很晚了，又是30000多步，累趴了。 第四天妹的，今天起得更晚了，睡到下午1点多一点反应去没有，闹钟都没叫醒，晕！起床随便吃了点，下午2点才出的门。话说京都的寺庙不是一般的多，空气也很好，非常适合旅游。游玩的景点有伏见稻荷大社(需要爬山)、三十三间堂(错过了)、清水寺(没进去)、清水坂、八坂神社、衹园、花见小路、鸭川、锦市场。由于去的比较晚，好多景点都关门或者一眼带过了。晚上回到酒店已经是10点多了。 第五天今天起得还算比较早。跟前几天一样，吃了前一天晚上买的零食早点就出发了。上午逛了下二条城、金阁寺。妹的，一个那个小的景点都是世界文化遗产也是醉了，汗！中午还是吃的麦当劳(算是便宜的，别的真的挺贵的)。下午继续做公交，去了天龙寺、岚山，话说人真的很多，由于有些项目收费比较高，所以就没怎么玩了，就沿途看看风景(据说这里是赏樱圣地，可以已经4月樱花已经没了，如果是3个月来的话就好了)、拍了些照片。由于买的是香港至大阪的往返机票，所以我们就买了点特产，晚上赶回了大阪。 第六天这天是日本旅游的最后一天。由于大阪的所以景点(除了环球影城)基本都玩过了，所以最后一天我们选择了逛逛逛。来到日本桥，这边的动漫、电子产品、游戏、还有成人(GD) 比较多。相比之下，大阪更适合购物、京都更适合游玩观光。由于下午的时间比较紧，所以我们随便找了家吃饭的地方把午餐解决了，然后买了蓝牙音箱(好像是双向连接，充满电可以用很久、挺好用的)、还有一根数据线就赶到机场准备回去了。 –下次有机会再去的话，可以会去东京、北海道。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[4月份计划]]></title>
    <url>%2F2018%2F04%2F10%2Fsummary-2018-4-10%2F</url>
    <content type="text"><![CDATA[– 惭愧，对着2018年度计划来看，还有很多事情要做。 3月份总结 通过科三、科三考试，拿到驾照。 偶尔跑步、爬山、游玩。 接触过几个女生。可能是我性格(偏内)的原因，还是感觉有种词穷的感觉，让女生也感觉尴尬。 花钱有点大手大脚、大冰的书没坚持看下去， 生活懒散，不愿做饭、吃药。 4月份安排工作方面 试着多与女同事沟通、与男同事交流技术。 容易发脾气的时候试着仍住，想想值不值得? 多与经理交流想法和方案、适当学习其为人处世及管理之道(月底要总结)。 月底更新一次简历。若简历没有新东西则要产生危机感(新技术没跟上? 待遇上不去? 未来何去何从?)。 学习方面 看完自学炒股这本书。 读大冰的书里面的故事。 生活方面 硬着头皮吃药。 跑步、学习游泳。 少玩王者荣耀，不上瘾、不以段位论英雄。多花时间与妹纸用心交流(要认真对待，不能再无所谓了)。 旅游：4月中旬去日本、多了解一些文化、景点，回来记录旅游心得并发表至微信公众号上。 – 世上无难事，只要肯用心。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018年度计划]]></title>
    <url>%2F2018%2F03%2F16%2Ftask-and-dream-for-2018%2F</url>
    <content type="text"><![CDATA[2018年度计划工作方面 工作环境：尽管现在所在的公司不怎么加班，但感觉待遇和技术很难上去，平常接触的大多是协议(HTTP、MQTT、TCP/UDP)及通信层的封装、数据管理层的封装; 对新的技术接触的很少、晋升至管理级别的可能性几乎为0。所以如果有好的工作机会的话会考虑换个环境，毕竟年纪也不小了，不想再这么耗下去。 业务交流：感觉搞技术这一行的人都有点内向，都不怎么爱说话，见识的世面太少。有时候跟业务人员交流起来比较费劲，程序员总是习惯按照自己思维去解释一下东西，但实际上很多时候这并不是业务人员想要的答案，毕竟他们的需求是推销产品或服务给客户而不是程序员的逻辑。所以思考怎么更合理的站在业务角度去阐述和解释是需要花时间学习的。当国外客户需要一个SDK给他们用时，英语不怎么好的程序员身边可能需要一个业务员帮忙翻译那些接口文档了。 解决方案：当公司或客户提出新需求、软件出现漏洞、开会讨论产生问题，如何快速思考、整合资源、得出单个或多个有效的解决方案是程序员生涯必须要学会的一样技能。 学习方面 专业技术：学习Android插件化、继续学习自定义View。 自学炒股：掌握股票基础知识、买几只股票、学习如何投资。 拿驾照：争取今年3、4月份通过科三、科四考试、拿到驾驶证。 微信公众号：写故事、文章，并同步至hawky.me托管网站上。 生活方面 看病：尽可能多做轻运动（跑步、游泳、爬山） 女票：解决单身问题。多与女生接触交流(不要频繁问问题、查户口，用曲解法、冷读法)、适当学习沟通技巧及话术、与女生沟通时尽量”减少理性思考，多用感性表达”。 买房：今年要攒够钱付首付、不要乱花钱、理财。 旅游：4月份计划去日本旅游，做好攻略安排、记录旅游心得。 多看些技术以外的书籍并记录感悟、丰富知识面。 未来计划1. 拍一部爱情、人性方面的微电影。2. 写一本关于记录人生成长故事、情感方面的书。]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JNI系列(一)AS gradle3.0+ so库的生成及使用]]></title>
    <url>%2F2018%2F01%2F15%2Fjni-001%2F</url>
    <content type="text"><![CDATA[前言NDK(Native Developerment Kit)提供了一系列的工具，咱们可以用它来将c/c++代码打包成so(c/c++函数库)文件。这样做的好处是保护代码(反编译难度大)，提供程序的执行效率(c代码)，并且能够移植到其它平台上。 JNI(Java Native Interface)提供了一些API实现了Java与其它语言(如: c/c++)的通信，咱们可以通过这些API使java方法能够调用c/c++函数。 一）环境搭建下载NDK：打开File-&gt;Settings-&gt;Android SDK-&gt;SDK Tools选中CMake、LLDB及NDK后，点击Apply，软件会自动安装NDK。 二）生成so库1.创建项目JNIApis (勾选Include C++ support) 2. 新建一个JNI API文件，内容如下：123456789package com.hawky.jni;/** * @author [*昨日重现*] lhy_ycu@163.com * @since version 1.0 */public class JNIApi &#123; public static native String getStringFromC();&#125; 3. 生成.h文件： 执行命令后，可以看到生成了com_hawky_jni_JNIApi.h(接口函数)文件（目的是为了写C代码），内容如下： 4. 接下来就是实现该接口函数： 5. 修改CMakeLists.txt文件，将默认的native-lib替换成JNIApi, c源文件路径替换成src/main/jni/JNIApi.c ，然后sync一下即可。 6. rebuild一下，生成so库文件： 三）使用so库1. 新建项目JNIApiSample（为了区分so库的生成过程） 2. 在src/main 目录下新建jniLibs文件夹，并将之前生成的那些so库文件拷贝至jniLibs文件夹中，然后在build.gradle(app目录下)配置： sourceSets { main { jni.srcDirs = [] } } 3. 编写Native接口文件：1234567891011121314151617package com.hawky.jni;/** * @author [*昨日重现*] lhy_ycu@163.com * @since version 1.0 */public class JNIApi &#123; public static native String getStringFromC(); static &#123; try &#123; System.loadLibrary(&amp;quot;JNIApi&amp;quot;); &#125; catch (UnsatisfiedLinkError ule) &#123; System.out.println(&amp;quot;loadLibrary(JNIApi),&amp;quot; + ule.getMessage()); &#125; &#125;&#125; 4. 测试JNI接口：123456789public class MainActivity extends AppCompatActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Toast.makeText(this, &amp;quot;Java调用C代码：&amp;quot; + JNIApi.getStringFromC(), Toast.LENGTH_SHORT).show(); &#125;&#125; rebuild后运行一下可以看到手机界面弹出了“Java调用C代码：I’m String from C!”。OK，大功告成。 总结AS越来越人性化了，gradle3.0之后编写JNI代码也没那么麻烦了，咱们只需要关心具体的核心业务逻辑,专注写C，so库配置一下便会自动生成，然后供Java开发者调用。需要注意的是：JNI接口的包名要与C代码里面的包名一致。]]></content>
      <categories>
        <category>JNI系列</category>
      </categories>
      <tags>
        <tag>JNI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android插件化系列(一)插件化概述]]></title>
    <url>%2F2017%2F08%2F26%2Fpluggable-001%2F</url>
    <content type="text"><![CDATA[Android插件化概述]]></content>
      <categories>
        <category>Android插件化系列</category>
      </categories>
      <tags>
        <tag>Android插件化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自定义View系列(一)自定义View概述]]></title>
    <url>%2F2017%2F06%2F26%2Fview-001%2F</url>
    <content type="text"><![CDATA[自定义View系列[1]自定义View概述]]></content>
      <categories>
        <category>自定义View系列</category>
      </categories>
      <tags>
        <tag>View</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RxJava系列(一)RxJava概述]]></title>
    <url>%2F2017%2F05%2F26%2Frxjava-001%2F</url>
    <content type="text"><![CDATA[参考rxpalhttps://github.com/hawkyAndroid/rxpal]]></content>
      <categories>
        <category>RxJava系列</category>
      </categories>
      <tags>
        <tag>RxJava</tag>
      </tags>
  </entry>
</search>
