<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hawky的博客</title>
  
  <subtitle>行到水穷处，坐看云起时</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hawkyAndroid.github.io/"/>
  <updated>2019-06-11T14:54:57.201Z</updated>
  <id>http://hawkyAndroid.github.io/</id>
  
  <author>
    <name>Hawky</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Z-Wave系列之术语篇</title>
    <link href="http://hawkyAndroid.github.io/2019/06/10/summary-zwave-term-01/"/>
    <id>http://hawkyAndroid.github.io/2019/06/10/summary-zwave-term-01/</id>
    <published>2019-06-10T13:40:07.000Z</published>
    <updated>2019-06-11T14:54:57.201Z</updated>
    
    <content type="html"><![CDATA[<p>Z-Wave使用低于1Ghz的频率，避免了2.4 GHz和5 GHz频段的拥挤。</p><h3 id="串口工具"><a href="#串口工具" class="headerlink" title="串口工具"></a>串口工具</h3><p>PC Controller：设备(控制)操作工具 类似网关<br>USB转串口(二进制数据)-&gt; Z-Wave无线模组-&gt;RF(广播、多播、单播)</p><p>Zniffer：抓包工具<br>RF(广播、多播、单播)-&gt;Z-Wave无线模组-&gt; 串口转USB(二进制数据)</p><h3 id="专业术语"><a href="#专业术语" class="headerlink" title="专业术语"></a>专业术语</h3><p>射频：用来收发无线(空中)数据包。</p><p>串口：用来收发有线数据包。是指数据一位一位地顺序传送，<br>其特点是通信线路简单，只要一对传输线就可以实现双向通信。</p><p>USB：Universal Serial Bus 通用串行总线。</p><p>COM口：电脑上的异步串行通信接口(已被USB取代)。</p><p>UART：Universal Asynchronous Receiver/Transmitter 通用异步收发传输器。</p><p>USART：Universal Synchronous/Asynchronous Receiver/Transmitter 通用同步异步收发传输器。<br>（同步通信和异步通信的区别是：时钟线的有无。同步通信有时钟线，收发双方通过统一的时钟来确定何时进行数据的传输，如I2C和SPI。<br>异步通信没有时钟线，只能在数据的头和尾加入标志位来区分不同的数据帧，接收数据之前也要预先知道波特率的大小，传输效率比同步通信要低）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Z-Wave使用低于1Ghz的频率，避免了2.4 GHz和5 GHz频段的拥挤。&lt;/p&gt;
&lt;h3 id=&quot;串口工具&quot;&gt;&lt;a href=&quot;#串口工具&quot; class=&quot;headerlink&quot; title=&quot;串口工具&quot;&gt;&lt;/a&gt;串口工具&lt;/h3&gt;&lt;p&gt;PC Controller：
      
    
    </summary>
    
      <category term="ZWave" scheme="http://hawkyAndroid.github.io/categories/ZWave/"/>
    
    
      <category term="ZWave" scheme="http://hawkyAndroid.github.io/tags/ZWave/"/>
    
  </entry>
  
  <entry>
    <title>WebView与JS相互调用</title>
    <link href="http://hawkyAndroid.github.io/2019/06/04/summary-webview-js-01/"/>
    <id>http://hawkyAndroid.github.io/2019/06/04/summary-webview-js-01/</id>
    <published>2019-06-04T14:23:26.000Z</published>
    <updated>2019-06-04T14:53:03.799Z</updated>
    
    <content type="html"><![CDATA[<h3 id="WebSettings配置"><a href="#WebSettings配置" class="headerlink" title="WebSettings配置"></a>WebSettings配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressLint</span>(<span class="string">"SetJavaScriptEnabled"</span>)</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initWebSettings</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    WebSettings webSettings = mWebView.getSettings();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支持JS，开启 H5 网页的交互功能</span></span><br><span class="line">    webSettings.setJavaScriptEnabled(<span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// 支持通过JS打开新窗口</span></span><br><span class="line">    webSettings.setJavaScriptCanOpenWindowsAutomatically(<span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// 支持插件 android 18+</span></span><br><span class="line">    webSettings.setPluginState(WebSettings.PluginState.ON);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置自适应屏幕，两者合用</span></span><br><span class="line">    webSettings.setUseWideViewPort(<span class="keyword">true</span>);  <span class="comment">// 将图片调整到适合webview的大小</span></span><br><span class="line">    webSettings.setLoadWithOverviewMode(<span class="keyword">true</span>); <span class="comment">// 缩放至屏幕的大小</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭密码保存提醒</span></span><br><span class="line">    webSettings.setSavePassword(<span class="keyword">false</span>);</span><br><span class="line">    <span class="comment">// 缩放操作</span></span><br><span class="line">    webSettings.setSupportZoom(<span class="keyword">true</span>);  <span class="comment">//支持缩放，默认为true。是下面那个的前提。</span></span><br><span class="line">    webSettings.setBuiltInZoomControls(<span class="keyword">true</span>); <span class="comment">//设置可以缩放</span></span><br><span class="line">    webSettings.setDisplayZoomControls(<span class="keyword">false</span>); <span class="comment">//隐藏原生的缩放控件</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提高渲染的优先级</span></span><br><span class="line">    webSettings.setRenderPriority(WebSettings.RenderPriority.HIGH);</span><br><span class="line">    webSettings.setTextZoom(<span class="number">80</span>);<span class="comment">//设置文本的缩放倍数，默认为 100</span></span><br><span class="line">    webSettings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN); <span class="comment">//支持内容重新布局</span></span><br><span class="line">    webSettings.supportMultipleWindows();  <span class="comment">//多窗口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他细节操作</span></span><br><span class="line">    webSettings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK); <span class="comment">// 优先使用缓存  ~LOAD_DEFAULT</span></span><br><span class="line">    webSettings.setAllowFileAccess(<span class="keyword">false</span>); <span class="comment">// 设置不可以访问文件</span></span><br><span class="line">    webSettings.setAllowFileAccessFromFileURLs(<span class="keyword">false</span>);</span><br><span class="line">    webSettings.setAllowUniversalAccessFromFileURLs(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">        webSettings.setLoadsImagesAutomatically(<span class="keyword">true</span>); <span class="comment">//支持自动加载图片</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        webSettings.setLoadsImagesAutomatically(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    webSettings.setDomStorageEnabled(<span class="keyword">true</span>); <span class="comment">// 开启 DOM storage API 功能</span></span><br><span class="line">    webSettings.setDatabaseEnabled(<span class="keyword">true</span>);   <span class="comment">//开启 database storage API 功能</span></span><br><span class="line">    webSettings.setAppCacheEnabled(<span class="keyword">true</span>);<span class="comment">//开启 Application Caches 功能</span></span><br><span class="line"></span><br><span class="line">    webSettings.setDefaultTextEncodingName(<span class="string">"utf-8"</span>);<span class="comment">// 设置编码格式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 允许Http、Https混合</span></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</span><br><span class="line">        webSettings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);</span><br><span class="line"><span class="comment">//            webSettings.setMixedContentMode(webSettings.getMixedContentMode());</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WebView配置"><a href="#WebView配置" class="headerlink" title="WebView配置"></a>WebView配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initWebView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 通过addJavascriptInterface()将Java对象映射到JS对象，进而供JS调用Java方法。</span></span><br><span class="line">    <span class="comment">// 参数1： Java对象名</span></span><br><span class="line">    <span class="comment">// 参数2： Javascript对象名</span></span><br><span class="line">    mWebView.addJavascriptInterface(<span class="keyword">new</span> SwitchOnOff(), <span class="string">"test_switch"</span>);</span><br><span class="line">    mWebView.addJavascriptInterface(<span class="keyword">new</span> UpdateDevName(), <span class="string">"test_dev"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载本地html</span></span><br><span class="line"><span class="comment">//        mWebView.loadUrl("file:///android_asset/test_switch.html");</span></span><br><span class="line">    <span class="comment">// 加载远程网页</span></span><br><span class="line">    mWebView.loadUrl(<span class="string">"http://192.168.xxx.xxx:xxxx/test_switch.html"</span>);</span><br><span class="line"></span><br><span class="line">    mWebView.setWebViewClient(<span class="keyword">new</span> WebViewClient() &#123;</span><br><span class="line">        <span class="comment">// 网页用WebView打开（拦截 url）</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> </span>&#123;</span><br><span class="line">            DebugLog.e(<span class="string">"url："</span> + url);</span><br><span class="line">            view.loadUrl(url);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageStarted</span><span class="params">(WebView view, String url, Bitmap favicon)</span> </span>&#123;</span><br><span class="line">            DebugLog.e(<span class="string">"onPageStarted"</span>);</span><br><span class="line">            <span class="keyword">super</span>.onPageStarted(view, url, favicon);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageFinished</span><span class="params">(WebView view, String url)</span> </span>&#123;</span><br><span class="line">            DebugLog.e(<span class="string">"onPageFinished"</span>);</span><br><span class="line">            <span class="comment">// Android 调用js方法</span></span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">                <span class="comment">// 无需刷新页面 （效率高，需要android 4.4+）</span></span><br><span class="line">                mWebView.evaluateJavascript(<span class="string">"javascript:fillName('"</span> + devName + <span class="string">"')"</span>, <span class="keyword">new</span> ValueCallback&lt;String&gt;() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceiveValue</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">                        <span class="comment">//此处为 js 返回的结果 null</span></span><br><span class="line">                        DebugLog.e(<span class="string">"value："</span> + value);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 需要刷新页面</span></span><br><span class="line">                mWebView.loadUrl(<span class="string">"javascript:fillName('"</span> + devName + <span class="string">"')"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!mWebView.getSettings().getLoadsImagesAutomatically()) &#123;</span><br><span class="line">                mWebView.getSettings().setLoadsImagesAutomatically(<span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">super</span>.onPageFinished(view, url);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedSslError</span><span class="params">(WebView view, SslErrorHandler handler, SslError error)</span> </span>&#123;</span><br><span class="line">            handler.proceed();    <span class="comment">//表示等待证书响应</span></span><br><span class="line">            <span class="comment">// handler.cancel();      //表示挂起连接，为默认方式</span></span><br><span class="line">            <span class="comment">// handler.handleMessage(null);    //可做其他处理</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedError</span><span class="params">(WebView view, WebResourceRequest request, WebResourceError error)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onReceivedError(view, request, error);</span><br><span class="line">            <span class="comment">// 清除掉默认错误页内容</span></span><br><span class="line">            mWebView.loadDataWithBaseURL(<span class="keyword">null</span>, <span class="string">""</span>, <span class="string">"text/html"</span>, <span class="string">"utf-8"</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">// 自定义错误显示...</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    mWebView.setWebChromeClient(<span class="keyword">new</span> WebChromeClient() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//处理alert弹出框，html 弹框的一种方式</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsAlert</span><span class="params">(WebView view, String url, String message, <span class="keyword">final</span> JsResult result)</span> </span>&#123;</span><br><span class="line">            DebugLog.e(<span class="string">"url:"</span> + url + <span class="string">",message:"</span> + message);</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="keyword">new</span> AlertDialog.Builder(WebViewSwitchActivity.<span class="keyword">this</span>)</span><br><span class="line">                    .setTitle(<span class="string">"提示"</span>)</span><br><span class="line">                    .setMessage(message)</span><br><span class="line">                    .setPositiveButton(<span class="string">"知道了"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                            result.confirm();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .create().show();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedTitle</span><span class="params">(WebView view, String title)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onReceivedTitle(view, title);</span><br><span class="line">            <span class="keyword">if</span> (!TextUtils.isEmpty(title)) &#123;</span><br><span class="line">                mTitleBar.setTitle(title);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgressChanged</span><span class="params">(WebView view, <span class="keyword">int</span> newProgress)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 网页加载进度</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">super</span>.onProgressChanged(view, newProgress);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WebView为JS提供接口"><a href="#WebView为JS提供接口" class="headerlink" title="WebView为JS提供接口"></a>WebView为JS提供接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开关</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwitchOnOff</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@JavascriptInterface</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">switchON</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@JavascriptInterface</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">switchOFF</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更名</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateDevName</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@JavascriptInterface</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"name:"</span> + name);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JS代码实现"><a href="#JS代码实现" class="headerlink" title="JS代码实现"></a>JS代码实现</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test-开关控制<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--开关--&gt;</span></span></span><br><span class="line"><span class="undefined">            function switch_on()&#123;</span></span><br><span class="line"><span class="undefined">                test_switch.switchON()</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            function switch_off()&#123;</span></span><br><span class="line"><span class="undefined">                test_switch.switchOFF()</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--js向input赋值--&gt;</span></span></span><br><span class="line"><span class="undefined">            function fillName(name)&#123;</span></span><br><span class="line"><span class="undefined">                document.getElementById("dev_name").value = name</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--更名--&gt;</span></span></span><br><span class="line"><span class="undefined">            function updateName()&#123;</span></span><br><span class="line"><span class="undefined">                var val = document.getElementById("dev_name").value;</span></span><br><span class="line"><span class="undefined">                if(val.length==0)&#123;</span></span><br><span class="line"><span class="undefined">                    alert("JS提示：名称不能为空");</span></span><br><span class="line"><span class="undefined">                &#125; else&#123;</span></span><br><span class="line"><span class="undefined">                    test_dev.updateName(val);</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"switch_on()"</span> <span class="attr">style</span>=<span class="string">"width:100px;height:100px;"</span>&gt;</span>ON<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"switch_off()"</span> <span class="attr">style</span>=<span class="string">"width:100px;height:100px;"</span>&gt;</span>OFF<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">onsubmit</span>=<span class="string">"return updateName()"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"dev_name"</span> <span class="attr">style</span>=<span class="string">"width:150px;height:50px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">id</span>=<span class="string">"submit"</span> <span class="attr">style</span>=<span class="string">"width:50px;height:40px;"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;WebSettings配置&quot;&gt;&lt;a href=&quot;#WebSettings配置&quot; class=&quot;headerlink&quot; title=&quot;WebSettings配置&quot;&gt;&lt;/a&gt;WebSettings配置&lt;/h3&gt;&lt;figure class=&quot;highlight java
      
    
    </summary>
    
      <category term="Android开发" scheme="http://hawkyAndroid.github.io/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android开发" scheme="http://hawkyAndroid.github.io/tags/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>BLE协议总结</title>
    <link href="http://hawkyAndroid.github.io/2019/06/02/summary-ble-protocol/"/>
    <id>http://hawkyAndroid.github.io/2019/06/02/summary-ble-protocol/</id>
    <published>2019-06-02T07:01:07.000Z</published>
    <updated>2019-06-03T14:24:08.957Z</updated>
    
    <content type="html"><![CDATA[<p>蓝牙：基于2.4GHz ISM频段的无线通信协议，其市场定位是个体和民用。</p><p>BLE Hopping跳频技术：为了增加容量，增大抗干扰能力，连接不会长期使用一个<br>固定的Physical Channel，而是在多个Channel（如37个）之间随机但有规律的切换。</p><h3 id="一-BLE的协议框架"><a href="#一-BLE的协议框架" class="headerlink" title="(一) BLE的协议框架"></a>(一) BLE的协议框架</h3><pre><code>注意：至下而上【BLE Application(Profiles)】 &gt;&gt;Thermomter、Battery、Promixity、Heart Rate...【BLE Host】&gt;GATT(Generic attribute profile)：GATT用来规范attribute中的数据内容，定义数据的类型和分组。ATT(Attribute protocol)：ATT层用来定义用户通信指令及指令操作的数据，比如读/写/notify/indicate等。SMP(Secure manager protocol)：SMP用来管理BLE连接的加密和安全的。GAP(Generic access profile)：GAP用于对链路层payload（有效数据包）进行解析，GAP目前主要用来进行广播、扫描和发起连接等。L2CAP(Logical Link Control and Adaptation Protocol)：协议/通道的多路复用、上层应用数据分割、生成协议数据单元(PDUs)、错误控制和重传机制、支持流式传输（如音频、视频等，不需要重传或者只需要有限重传）【BLE Controller】 &gt;&gt;HCI：host control interface，实现hci的协议，并连接stack层与底层通信的实现。Link Layer：链路层是整个BLE协议栈的核心。提供校验、重传等机制，确保数据传输的可靠性以及如何对链路进行管理和控制等。Physical Layer：物理层用来指定BLE所用的无线频段，调制解调方式和方法等。该层会影响整个BLE芯片的功耗、灵敏度等。</code></pre><p>  –LTV模型：Length、Type、Value。</p><p>  <a href="https://blog.csdn.net/shunfa888/article/details/80140475" target="_blank" rel="noopener">参考</a></p><h3 id="二-蓝牙5新特性"><a href="#二-蓝牙5新特性" class="headerlink" title="(二) 蓝牙5新特性"></a>(二) 蓝牙5新特性</h3><pre><code>1. 远距离蓝牙数据在传输过程中，RX端对整个payload数据包解码纠错能力有不同提升(简单说即为提高RX端接收灵敏度)。2. 长广播包（大数据）蓝牙4.0的广播使用的都是主广播信道，工作在37,38,39三个信道中。蓝牙5.0把广播信道抽象为两类：一种叫主广播信道(primary advertisement channels)，工作在37,38,39三个信道中;另一种叫第二广播信道（Secondary Advertising Packets），工作在0–36信道中(可发送长度介于0-255字节的数据)。3. 高速传输蓝牙5也支持单包255字节的数据传输，而且速率比起4.2提升了一倍。</code></pre><p>  –广播: 1对All； 多播: 1对多； 单播: 1对1。</p><h3 id="三-BLE开发流程"><a href="#三-BLE开发流程" class="headerlink" title="(三) BLE开发流程"></a>(三) BLE开发流程</h3><h4 id="1-添加权限"><a href="#1-添加权限" class="headerlink" title="1) 添加权限"></a>1) 添加权限</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_ADMIN"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Android 6.0+ 需要动态申请以下权限 --&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-feature</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"android.hardware.bluetooth_le"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:required</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-检查是否支持BLE"><a href="#2-检查是否支持BLE" class="headerlink" title="2) 检查是否支持BLE"></a>2) 检查是否支持BLE</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_BLUETOOTH_LE);</span><br></pre></td></tr></table></figure><h4 id="3-开启蓝牙"><a href="#3-开启蓝牙" class="headerlink" title="3) 开启蓝牙"></a>3) 开启蓝牙</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">BluetoothManager  mBluetoothManager = (BluetoothManager) context.getSystemService(Context.BLUETOOTH_SERVICE);</span><br><span class="line">BluetoothAdapter mBluetoothAdapter = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">if</span> (mBluetoothManager != <span class="keyword">null</span>) &#123;</span><br><span class="line">      mBluetoothAdapter = mBluetoothManager.getAdapter();</span><br><span class="line">      <span class="comment">// 提示：如果当前蓝牙设备没启用, 应弹出对话框向用户要求授予权限来启用</span></span><br><span class="line">      <span class="keyword">if</span>(!mBluetoothAdapter.isEnabled())&#123;</span><br><span class="line">         mBluetoothAdapter.enable();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 蓝牙ON/OFF 广播监听</span></span><br><span class="line"><span class="keyword">private</span> BroadcastReceiver mBleStateListener = <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> String action = intent.getAction();</span><br><span class="line">        <span class="keyword">if</span> (BluetoothAdapter.ACTION_STATE_CHANGED.equals(action)) &#123;</span><br><span class="line">            <span class="keyword">int</span> state = intent.getIntExtra(BluetoothAdapter.EXTRA_STATE, -<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (state == BluetoothAdapter.STATE_OFF) &#123;</span><br><span class="line">                <span class="comment">// onBluetoothStateChange(false);</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == BluetoothAdapter.STATE_ON) &#123;</span><br><span class="line">                <span class="comment">// onBluetoothStateChange(true);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="4-搜索设备"><a href="#4-搜索设备" class="headerlink" title="4) 搜索设备"></a>4) 搜索设备</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> BluetoothLeScannerCompat scanner = BluetoothLeScannerCompat.getScanner();</span><br><span class="line"><span class="keyword">final</span> ScanSettings settings = <span class="keyword">new</span> ScanSettings.Builder()</span><br><span class="line">        .setScanMode(ScanSettings.SCAN_MODE_LOW_LATENCY)</span><br><span class="line">        .setReportDelay(<span class="number">1000</span>)</span><br><span class="line">        .setUseHardwareBatchingIfSupported(<span class="keyword">false</span>)</span><br><span class="line">        .build();</span><br><span class="line"><span class="keyword">final</span> List&lt;ScanFilter&gt; filters = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">filters.add(<span class="keyword">new</span> ScanFilter.Builder().setServiceUuid(<span class="keyword">null</span>).build());</span><br><span class="line">scanner.stopScan(scanCallback);</span><br><span class="line">scanner.startScan(filters, settings, mScanCallback);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 搜索回调</span></span><br><span class="line"><span class="keyword">private</span> ScanCallback mScanCallback = <span class="keyword">new</span> ScanCallback() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScanResult</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> callbackType, <span class="keyword">final</span> ScanResult result)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//do nothing</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBatchScanResults</span><span class="params">(<span class="keyword">final</span> List&lt;ScanResult&gt; results)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (ScanResult scanResult : results) &#123;</span><br><span class="line">            <span class="comment">// 过滤出自定义广播等...</span></span><br><span class="line">            <span class="keyword">if</span> () &#123;</span><br><span class="line">               <span class="comment">//  更新UI（蓝牙设备列表-排序）</span></span><br><span class="line">               onFindDeviceBroadcast(scanResult);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScanFailed</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> errorCode)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="5-连接设备及GATT服务"><a href="#5-连接设备及GATT服务" class="headerlink" title="5. 连接设备及GATT服务"></a>5. 连接设备及GATT服务</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 连接蓝牙设备</span></span><br><span class="line"><span class="comment">// BluetoothManager -&gt;mBluetoothAdapter -&gt;BluetoothDevice -&gt;BluetoothGatt</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">connect</span><span class="params">(<span class="keyword">final</span> String address)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mBluetoothAdapter == <span class="keyword">null</span> || address == <span class="keyword">null</span>) &#123;</span><br><span class="line">        DebugLog.e(<span class="string">"BluetoothAdapter not initialized or unspecified address."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!BluetoothAdapter.checkBluetoothAddress(address)) &#123; <span class="comment">// 校验mac地址有效性</span></span><br><span class="line">        DebugLog.e(<span class="string">"it's not a bluetooth address."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mBluetoothGatt != <span class="keyword">null</span>) &#123;</span><br><span class="line">        refreshGattCache(mBluetoothGatt);</span><br><span class="line">        mBluetoothGatt.close();</span><br><span class="line">        DebugLog.e(<span class="string">"gatt.close()"</span>);</span><br><span class="line">        mBluetoothGatt = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mHandler.postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// Previously connected device.  Try to reconnect.</span></span><br><span class="line">            <span class="keyword">if</span> (mBluetoothDeviceAddress != <span class="keyword">null</span> &amp;&amp; address.equals(mBluetoothDeviceAddress) &amp;&amp; mBluetoothGatt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                DebugLog.e(<span class="string">"Trying to use an existing mBluetoothGatt for connection."</span>);</span><br><span class="line">                mBluetoothGatt.connect();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">final</span> BluetoothDevice device = mBluetoothAdapter.getRemoteDevice(address);</span><br><span class="line">                <span class="keyword">if</span> (device == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    DebugLog.e(<span class="string">"Device not found.  Unable to connect."</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// We want to directly connect to the device, so we are setting the autoConnect</span></span><br><span class="line">                    <span class="comment">// parameter to false.</span></span><br><span class="line">                    mBluetoothGatt = device.connectGatt(BluetoothLeService.<span class="keyword">this</span>, <span class="keyword">false</span>, mGattCallback);</span><br><span class="line">                    DebugLog.e(<span class="string">"Trying to create a new connection."</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            mBluetoothDeviceAddress = address;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GATT服务器（回调）</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> BluetoothGattCallback mGattCallback = <span class="keyword">new</span> BluetoothGattCallback() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConnectionStateChange</span><span class="params">(BluetoothGatt gatt, <span class="keyword">int</span> status, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">        DebugLog.e(<span class="string">"onConnectionStateChange["</span> + status + <span class="string">"-&gt;"</span> + newState + <span class="string">"]"</span>);</span><br><span class="line">        <span class="keyword">if</span> (newState == BluetoothProfile.STATE_CONNECTED) &#123; <span class="comment">// 连接成功后发现服务</span></span><br><span class="line">            DebugLog.e(<span class="string">"Connected to GATT server."</span>);</span><br><span class="line">            broadcastUpdate(ACTION_GATT_CONNECTED, gatt.getDevice());</span><br><span class="line">            <span class="keyword">if</span> (mBluetoothGatt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">boolean</span> discovered = mBluetoothGatt.discoverServices();</span><br><span class="line">                DebugLog.e(<span class="string">"Attempting to start service discovery:"</span> + discovered);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (newState == BluetoothProfile.STATE_DISCONNECTED) &#123; <span class="comment">// 连接失败</span></span><br><span class="line">            DebugLog.e(<span class="string">"Disconnected from GATT server."</span> + gatt.getDevice().getAddress());</span><br><span class="line">            <span class="keyword">if</span> (mBluetoothGatt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                refreshDeviceCache(mBluetoothGatt);<span class="comment">// 刷新蓝牙缓存</span></span><br><span class="line">            &#125;</span><br><span class="line">            broadcastUpdate(ACTION_GATT_DISCONNECTED, gatt.getDevice());<span class="comment">// 若非手动断开，则可设置重连(如：3~5次)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServicesDiscovered</span><span class="params">(BluetoothGatt gatt, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        DebugLog.e(<span class="string">"onServicesDiscovered : "</span> + (status == BluetoothGatt.GATT_SUCCESS));</span><br><span class="line">        <span class="keyword">if</span> (status == BluetoothGatt.GATT_SUCCESS) &#123;</span><br><span class="line">            broadcastUpdate(ACTION_GATT_SERVICES_DISCOVERED, gatt.getDevice());<span class="comment">// 更新为连接成功状态</span></span><br><span class="line">            <span class="comment">// 此时就可以发送指令了。若还需接收指令功能，则需开启使能通知。</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicWrite</span><span class="params">(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCharacteristicWrite(gatt, characteristic, status);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] data = characteristic.getValue();</span><br><span class="line">        <span class="keyword">if</span> (status == BluetoothGatt.GATT_SUCCESS) &#123;</span><br><span class="line">           <span class="comment">// 表示指令发送成功了</span></span><br><span class="line">            DebugLog.e(<span class="string">"发送：write &gt; "</span> + gatt.getDevice().getAddress() + <span class="string">"["</span> + ByteUtils.bytesToHexString(data) + <span class="string">"]"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicRead</span><span class="params">(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (status == BluetoothGatt.GATT_SUCCESS) &#123;</span><br><span class="line">        <span class="comment">// 表示指令读取成功了。如：读取到了固件版本号</span></span><br><span class="line">            <span class="keyword">if</span> (READ_FIRMWARE_VERSION_UUID.equals(characteristic.getUuid())) &#123; <span class="comment">//</span></span><br><span class="line">                broadcastUpdate(ACTION_FIRMWARE_VERSION_AVAILABLE, characteristic.getValue());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// ...</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接收数据上报（ACK）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicChanged</span><span class="params">(<span class="keyword">final</span> BluetoothGatt gatt, BluetoothGattCharacteristic characteristic)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] data = characteristic.getValue();</span><br><span class="line">        DebugLog.e(<span class="string">"接收：receive &gt; ["</span> + ByteUtils.bytesToHexString(data) + <span class="string">"]"</span>);</span><br><span class="line">        broadcastUpdate(ACTION_DATA_AVAILABLE, data);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 连接蓝牙之前或断开后，刷新一下缓存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshGattCache</span><span class="params">(<span class="keyword">final</span> BluetoothGatt gatt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> Method refresh = gatt.getClass().getMethod(<span class="string">"refresh"</span>);</span><br><span class="line">        <span class="keyword">if</span> (refresh != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">boolean</span> success = (Boolean) refresh.invoke(gatt);</span><br><span class="line">            DebugLog.e(<span class="string">"Refresh cache result: "</span> + success);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        DebugLog.e(<span class="string">"An exception occurred while refreshing device"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-开启使能通知"><a href="#6-开启使能通知" class="headerlink" title="6. 开启使能通知"></a>6. 开启使能通知</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开启或关闭使能通知</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> enable true开启 false关闭</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true开启成功 false 开启失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">enableNotify</span><span class="params">(<span class="keyword">boolean</span> enable)</span> </span>&#123;</span><br><span class="line">    DebugLog.e(enable ? <span class="string">"Enable Notify"</span> : <span class="string">"Disable Notify"</span>);</span><br><span class="line">    <span class="keyword">if</span> (mBluetoothAdapter == <span class="keyword">null</span> || mBluetoothGatt == <span class="keyword">null</span>) &#123;</span><br><span class="line">        DebugLog.e(<span class="string">"BluetoothAdapter not initialized"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拿到主服务</span></span><br><span class="line">    BluetoothGattService mGattService = mBluetoothGatt.getService(UUID.fromString(SampleGattAttributes.Nordic.SERVICE));</span><br><span class="line">    <span class="keyword">if</span> (mGattService == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于接收数据</span></span><br><span class="line">    BluetoothGattCharacteristic characteristic = mGattService.getCharacteristic(UUID.fromString(SampleGattAttributes.Nordic.NOTIFY));</span><br><span class="line">    <span class="keyword">if</span> (characteristic == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    mBluetoothGatt.setCharacteristicNotification(characteristic, enable);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Descriptor</span></span><br><span class="line">    BluetoothGattDescriptor descriptor = characteristic.getDescriptor(UUID.fromString(SampleGattAttributes.Nordic.CLIENT_CHARACTERISTIC_CONFIG));</span><br><span class="line">    <span class="keyword">if</span> (descriptor == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    descriptor.setValue(enable ? BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE : BluetoothGattDescriptor.DISABLE_NOTIFICATION_VALUE);</span><br><span class="line">    <span class="keyword">return</span> mBluetoothGatt.writeDescriptor(descriptor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-读取数据"><a href="#7-读取数据" class="headerlink" title="7. 读取数据"></a>7. 读取数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">BluetoothGattService mGattService = mBluetoothGatt.getService(DEVICE_INFO_SERVICE_UUID);</span><br><span class="line"><span class="keyword">if</span> (mGattService == <span class="keyword">null</span>)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> BluetoothGattCharacteristic firmwareCharacteristic = mGattService.getCharacteristic(READ_FIRMWARE_VERSION_UUID);</span><br><span class="line"><span class="keyword">if</span> (firmwareCharacteristic != <span class="keyword">null</span>) &#123;</span><br><span class="line">  <span class="comment">// 读取固件版本号</span></span><br><span class="line">mBluetoothGatt.readCharacteristic(firmwareCharacteristic);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-写入数据"><a href="#8-写入数据" class="headerlink" title="8. 写入数据"></a>8. 写入数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeData</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (mBluetoothAdapter == <span class="keyword">null</span>) &#123;</span><br><span class="line">    DebugLog.e(<span class="string">"mBluetoothAdapter == null BluetoothAdapter not initialized"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (mBluetoothGatt == <span class="keyword">null</span>) &#123;</span><br><span class="line">    DebugLog.e(<span class="string">"mBluetoothGatt == null BluetoothAdapter not initialized"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拿到主服务</span></span><br><span class="line">BluetoothGattService mGattService = mBluetoothGatt.getService(UUID.fromString(SampleGattAttributes.Nordic.SERVICE));</span><br><span class="line"><span class="keyword">if</span> (mGattService == <span class="keyword">null</span>)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于发送数据</span></span><br><span class="line">BluetoothGattCharacteristic characteristic = mGattService.getCharacteristic(UUID.fromString(SampleGattAttributes.Nordic.WRITE));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (characteristic == <span class="keyword">null</span>) &#123;</span><br><span class="line">    DebugLog.e(<span class="string">"characteristic == null BluetoothAdapter not initialized"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">characteristic.setValue(data);</span><br><span class="line">characteristic.setWriteType(BluetoothGattCharacteristic.WRITE_TYPE_NO_RESPONSE);</span><br><span class="line">mBluetoothGatt.writeCharacteristic(characteristic);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-断开连接"><a href="#9-断开连接" class="headerlink" title="9. 断开连接"></a>9. 断开连接</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Disconnects an existing connection or cancel a pending connection. The disconnection result</span></span><br><span class="line"><span class="comment"> * is reported asynchronously through the</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> BluetoothGattCallback#onConnectionStateChange(android.bluetooth.BluetoothGatt, int, int)&#125;</span></span><br><span class="line"><span class="comment"> * callback.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">disconnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (mBluetoothGatt == <span class="keyword">null</span>) &#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   mBluetoothGatt.disconnect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-关闭GATT服务"><a href="#10-关闭GATT服务" class="headerlink" title="10. 关闭GATT服务"></a>10. 关闭GATT服务</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * After using a given BLE device, the app must call this method to ensure resources are</span></span><br><span class="line"><span class="comment"> * released properly.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mBluetoothGatt == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mBluetoothGatt.close();</span><br><span class="line">    mBluetoothGatt = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;蓝牙：基于2.4GHz ISM频段的无线通信协议，其市场定位是个体和民用。&lt;/p&gt;
&lt;p&gt;BLE Hopping跳频技术：为了增加容量，增大抗干扰能力，连接不会长期使用一个&lt;br&gt;固定的Physical Channel，而是在多个Channel（如37个）之间随机但有规律的
      
    
    </summary>
    
      <category term="BLE" scheme="http://hawkyAndroid.github.io/categories/BLE/"/>
    
    
      <category term="BLE" scheme="http://hawkyAndroid.github.io/tags/BLE/"/>
    
  </entry>
  
  <entry>
    <title>网络安全之OSI七层模型</title>
    <link href="http://hawkyAndroid.github.io/2019/05/24/summary-network-security-01/"/>
    <id>http://hawkyAndroid.github.io/2019/05/24/summary-network-security-01/</id>
    <published>2019-05-24T14:43:07.000Z</published>
    <updated>2019-06-08T07:03:55.507Z</updated>
    
    <content type="html"><![CDATA[<h3 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h3><p>OSI：Open System Interconnection(开放系统互联)</p><pre><code>物理层：由传输在线缆上的电子信号组成，威胁是搭线窃听和监听，保护措施是加密、数据标签、流量填充等。如：HUB、水晶头、线缆。数据链路层：如：MAC。网络层：寻址和路由。如：IP、ICMP(ping)、ARP(IP-&gt;mac)、路由器。传输层：控制主机之间传输的数据流。如：TCP、UDP。    TCP：包头标记SYN、FIN、ACK。    UDP：面向不可靠链接，发送不管。    知名端口&lt;1024会话层：表示层：应用层：是最难保护的一层。如：SMTP(简单邮件传输协议)、FTP、TELNET、HTTP、SNMP。    SMTP：简单邮件传输协议，端口25。威胁是邮件炸弹、病毒、匿名邮件、木马，保护措施是认证、附件病毒扫描、用户安全意识教育。    FTP：文件传输协议，端口21。威胁是明文传输，黑客恶意传输非法使用等，保护措施是只允许匿名登录、单独的服务器分区、禁止执行程序。    TELNET：C/S模型，用于远程登录控制，端口23。威胁是恶意程序。    HTTP：超文本传输协议，端口80。威胁是明文传输。    SNMP：简单网络管理协议，主要提供网络状态信息，UDP端口161/162。威胁是明文传输、访问验证只需要交流名称，保护措施是使用防火墙过滤UDP端口161。    DNS：域名系统，TCP/UDP端口53。威胁是DNS欺骗/中毒、区域文件被盗，保护措施是防火墙过滤所有的区域文件传输、仅仅允许受新人的主机或者指定主机的区域文件传输。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;OSI七层模型&quot;&gt;&lt;a href=&quot;#OSI七层模型&quot; class=&quot;headerlink&quot; title=&quot;OSI七层模型&quot;&gt;&lt;/a&gt;OSI七层模型&lt;/h3&gt;&lt;p&gt;OSI：Open System Interconnection(开放系统互联)&lt;/p&gt;
&lt;pre&gt;&lt;
      
    
    </summary>
    
      <category term="Security" scheme="http://hawkyAndroid.github.io/categories/Security/"/>
    
    
      <category term="Security" scheme="http://hawkyAndroid.github.io/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>股票投资建议</title>
    <link href="http://hawkyAndroid.github.io/2019/05/21/summary-stock-investment/"/>
    <id>http://hawkyAndroid.github.io/2019/05/21/summary-stock-investment/</id>
    <published>2019-05-21T14:25:07.000Z</published>
    <updated>2019-05-21T14:48:07.419Z</updated>
    
    <content type="html"><![CDATA[<h3 id="投资要素"><a href="#投资要素" class="headerlink" title="投资要素"></a>投资要素</h3><p>投资者要在金融市场获利，有以下5个先决要素：</p><pre><code>知识：学以致用、不断总结。耐心：耐心等待入市良机和平仓机会。胆识：在适当的时间果断地做出买卖决定。健康：保持足够精力、头脑保持清醒、不带负面情绪。资本：不过度投机、注意止损。</code></pre><h3 id="炒股规则建议"><a href="#炒股规则建议" class="headerlink" title="炒股规则建议"></a>炒股规则建议</h3><p>1、每次入市买卖，应该设定止损，以不超过本钱的1/10为宜。止损一旦设置要坚决执行，不可随意撤消。</p><p>2、顺势而为。只在市场活跃时参与买卖，如果无法把握市场的趋势，就不要入市。</p><p>3、不要频繁交易，不要透支买股票。</p><p>4、只要对走势有怀疑，就应立即平仓出局。</p><p>5、买卖中获利颇丰时可将部分利润提取，已备不时之需，保持健康稳定的操作心态。</p><p>6、不轻言加码、切忌抱着只能赢不能输的心态。</p><p>7、不轻信他人言论、凡是先详细研究，不要盲目入市和平仓。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;投资要素&quot;&gt;&lt;a href=&quot;#投资要素&quot; class=&quot;headerlink&quot; title=&quot;投资要素&quot;&gt;&lt;/a&gt;投资要素&lt;/h3&gt;&lt;p&gt;投资者要在金融市场获利，有以下5个先决要素：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;知识：学以致用、不断总结。

耐心：耐心等待入市
      
    
    </summary>
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>拉萨之旅</title>
    <link href="http://hawkyAndroid.github.io/2019/04/12/summary-lasa-trip-4_5/"/>
    <id>http://hawkyAndroid.github.io/2019/04/12/summary-lasa-trip-4_5/</id>
    <published>2019-04-12T11:12:10.000Z</published>
    <updated>2019-04-12T15:44:16.036Z</updated>
    
    <content type="html"><![CDATA[<pre><code>时间：4.5-4.7路线：往返飞。深圳-&gt;重庆-&gt;拉萨，拉萨-&gt;西安-&gt;深圳。行李：冲锋衣、羽绒服、保暖内衣、登山鞋、太阳镜、遮阳帽、防晒霜。注意：进藏前最好提前一周喝红景天(泡水)；带上水杯，多喝热水、不要喝冷水。</code></pre><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><h4 id="拉萨"><a href="#拉萨" class="headerlink" title="拉萨"></a>拉萨</h4><p>拉萨，简称‘拉’，是西藏自治区的首府，位于其东南部。拉萨海拔3650米，是西藏政治、经济、文化和科教的中心，也是藏佛佛教的圣地(LA在藏语里是佛的意思，SA是地)。 拉萨全年日照时长达3000小时以上，所以也被称为“日光城”，为高原山地气候，市花为“格桑花”。</p><h4 id="1、布达拉宫"><a href="#1、布达拉宫" class="headerlink" title="1、布达拉宫"></a>1、布达拉宫</h4><p>布达拉宫最初为吐蕃(Tibet)王朝藏王赞普松赞干布为迎娶尺尊公主和文成公主而兴建，是藏传佛教(格鲁派)的圣地，也是世界上海拔最高，集宫殿、城堡和寺院于一体的宏伟建筑，更是西藏最庞大、最完整的古代宫堡建筑群。</p><p>佛教创始人瞿昙义成（今译释迦牟尼）就是迦毗罗卫国（在今尼泊尔境内）净饭王之子。所以佛教起源地也就是在尼泊尔。</p><h4 id="2、大昭寺"><a href="#2、大昭寺" class="headerlink" title="2、大昭寺"></a>2、大昭寺</h4><p>大昭寺位于拉萨老城区中心，是一座藏传佛教寺院，是藏王松赞干布于唐贞观21年建造，寺内主供的释迦牟尼12岁等身像(该佛像后从古印度流入中国，又经唐代文成公主带入西藏)。拉萨之所以有“圣地”之誉与这座佛像有关，寺庙最初称“惹萨”，后来惹萨又成为这座城市的名称，并演化成当下的“拉萨”。–所以是先有大昭寺后有拉萨城。大昭寺是西藏现存最辉煌的吐蕃时期的建筑，也是西藏最早的土木结构建筑。</p><p>转经：环大昭寺内中心的释迦牟尼佛殿一圈称为“囊廓”(内经)，环大昭寺外墙一圈称为“八廓”(中经)，大昭寺外辐射出的街道叫“八廓街”即八角街。以大昭寺为中心，将布达拉宫、药王山、小昭寺包括进来的一大圈称为“林廓”(外经)。这从内到外的3个环型，便是藏民们行转经仪式的路线。</p><h4 id="3、小昭寺"><a href="#3、小昭寺" class="headerlink" title="3、小昭寺"></a>3、小昭寺</h4><p>相传文成公主入藏时带了一尊释迦牟尼十二岁等身像，行至在小昭寺位置时，木车陷入沙地中。公主通过小昭寺历算，决定把释迦牟尼佛像安放此处供奉，遂建小昭寺。这座寺庙由文成公主主持修建，与大昭寺同时开工，同时告竣，同时开光；大门朝东，以寄托这位公主对家乡父母的思念。后以此为基建小昭寺。</p><p>传说：两位公主各自带来了一尊珍贵的释迦牟尼的佛像。作为最贵重的陪嫁，尼泊尔尺尊公主带来的是释迦牟尼八岁时的等身像；文成公主从内地的长安请来的是另一尊十二岁的释迦牟尼等身佛像。藏民公认这两尊佛像是最早进入雪域高原的佛像，然后为了供养这么神圣的佛像，松赞干布就开始修建了大昭寺(12岁等身像)和小昭寺(8岁等身像)。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;时间：4.5-4.7

路线：往返飞。深圳-&amp;gt;重庆-&amp;gt;拉萨，拉萨-&amp;gt;西安-&amp;gt;深圳。

行李：冲锋衣、羽绒服、保暖内衣、登山鞋、太阳镜、遮阳帽、防晒霜。

注意：进藏前最好提前一周喝红景天(泡水)；带上水杯，多喝热水、不要喝冷水。
&lt;/
      
    
    </summary>
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>如何修炼气质</title>
    <link href="http://hawkyAndroid.github.io/2019/01/30/summary-practice-temperament/"/>
    <id>http://hawkyAndroid.github.io/2019/01/30/summary-practice-temperament/</id>
    <published>2019-01-30T12:57:10.000Z</published>
    <updated>2019-01-30T13:47:33.606Z</updated>
    
    <content type="html"><![CDATA[<h3 id="沉稳"><a href="#沉稳" class="headerlink" title="沉稳"></a>沉稳</h3><p>1、不要随便显露你的情绪</p><p>2、不说脏话</p><p>3、说话语速适当，不要慌张、走路也一样</p><h3 id="大度"><a href="#大度" class="headerlink" title="大度"></a>大度</h3><p>1、金钱上要大方，但不能随意</p><p>2、对别人的小过失、小错误不要斤斤计较</p><p>3、不要有权利的傲慢和知识的偏见</p><h3 id="诚实"><a href="#诚实" class="headerlink" title="诚实"></a>诚实</h3><p>1、做不到的事情不要说</p><p>2、不要满嘴跑火车</p><p>3、答应朋友的事一定要兑现</p><h3 id="细心"><a href="#细心" class="headerlink" title="细心"></a>细心</h3><p>1、和小孩说话尽量弯腰和蹲下</p><p>2、点菜时尽量照顾到每个人的口味</p><p>3、做什么事情都要养成有条不紊的习惯</p><h3 id="胆识"><a href="#胆识" class="headerlink" title="胆识"></a>胆识</h3><p>1、不要经常使用缺乏自信的语言</p><p>2、不要常常反悔、秃露反帐</p><p>3、事件不顺时歇口气，重新寻找突破口，就算结束也要有始有终，干净利落。</p><h3 id="什么是自由？"><a href="#什么是自由？" class="headerlink" title="什么是自由？"></a>什么是自由？</h3><p>只有当你试着去发现、理解自己与他人之间的基本关系，并且诚心地去履行你的责任，而不管这个责任是否会让你感到舒适、轻松，你才有可能获得真正的自由。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;沉稳&quot;&gt;&lt;a href=&quot;#沉稳&quot; class=&quot;headerlink&quot; title=&quot;沉稳&quot;&gt;&lt;/a&gt;沉稳&lt;/h3&gt;&lt;p&gt;1、不要随便显露你的情绪&lt;/p&gt;
&lt;p&gt;2、不说脏话&lt;/p&gt;
&lt;p&gt;3、说话语速适当，不要慌张、走路也一样&lt;/p&gt;
&lt;h3 id=&quot;大度&quot;&gt;
      
    
    </summary>
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>Android View之Xfermode</title>
    <link href="http://hawkyAndroid.github.io/2019/01/04/summary-view-porterduffxfermode/"/>
    <id>http://hawkyAndroid.github.io/2019/01/04/summary-view-porterduffxfermode/</id>
    <published>2019-01-04T12:18:55.000Z</published>
    <updated>2019-01-16T14:04:09.413Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）-Xfermode-概述"><a href="#（一）-Xfermode-概述" class="headerlink" title="（一） Xfermode 概述"></a>（一） Xfermode 概述</h3><p>Xfermode图层混合模式：主要用于处理图形图像的绘制。最常用也是最核心的就是其子类PorterDuffXfermode，而PorterDuffXfermode使用的是 PorterDuff 模式创建一个图层混合模式，PorterDuff用于(2D)数字图像的合成。</p><h3 id="（二）-PorterDuff-Mode-枚举"><a href="#（二）-PorterDuff-Mode-枚举" class="headerlink" title="（二） PorterDuff.Mode 枚举"></a>（二） PorterDuff.Mode 枚举</h3><p><a href="https://developer.android.com/reference/android/graphics/PorterDuff.Mode" target="_blank" rel="noopener">PorterDuff.Mode</a> 定义了18种混合模式：</p><table><thead><tr><th>PorterDuff.Mode</th><th>Desc</th></tr></thead><tbody><tr><td>ADD</td><td>Saturate(S + D)</td></tr><tr><td>CLEAR</td><td>[0, 0]</td></tr><tr><td>DARKEN</td><td>[Sa + Da - Sa<em>Da, Sc</em>(1 - Da) + Dc*(1 - Sa) + min(Sc, Dc)]</td></tr><tr><td>DST</td><td>[Da, Dc]</td></tr><tr><td>DST_ATOP</td><td>[Sa, Sa <em> Dc + Sc </em> (1 - Da)]</td></tr><tr><td>DST_IN</td><td>[Sa <em> Da, Sa </em> Dc]</td></tr><tr><td>DST_OUT</td><td>[Da <em> (1 - Sa), Dc </em> (1 - Sa)]</td></tr><tr><td>DST_OVER</td><td>[Sa + (1 - Sa)<em>Da, Rc = Dc + (1 - Da)</em>Sc]</td></tr><tr><td>LIGHTEN</td><td>[Sa + Da - Sa<em>Da, Sc</em>(1 - Da) + Dc*(1 - Sa) + max(Sc, Dc)]</td></tr><tr><td>MULTIPLY</td><td>[Sa <em> Da, Sc </em> Dc]</td></tr><tr><td>OVERLAY</td><td></td></tr><tr><td>SCREEN</td><td>[Sa + Da - Sa <em> Da, Sc + Dc - Sc </em> Dc]</td></tr><tr><td>SRC</td><td>[Sa, Sc]</td></tr><tr><td>SRC_ATOP</td><td>[Da, Sc <em> Da + (1 - Sa) </em> Dc]</td></tr><tr><td>SRC_IN</td><td>[Sa <em> Da, Sc </em> Da]</td></tr><tr><td>SRC_OUT</td><td>[Sa <em> (1 - Da), Sc </em> (1 - Da)]</td></tr><tr><td>SRC_OVER</td><td>[Sa + (1 - Sa)<em>Da, Rc = Sc + (1 - Sa)</em>Dc]</td></tr><tr><td>XOR</td><td>[Sa + Da - 2 <em> Sa </em> Da, Sc <em> (1 - Da) + (1 - Sa) </em> Dc]</td></tr></tbody></table><p>其中： Sa 代表source alpha，Da 代表 Destination alpha ，Sc 代表 source color，Dc 代表 Destination color。</p><pre><code>1、 SRC       只保留源图像的 alpha 和 color2、 DST       只保留目标图像的 alpha 和 color3、 SRC_OVER  在目标图片顶部绘制源图像4、 DST_OVER  将目标图像绘制在上方5、 SRC_IN    在两者相交的地方绘制源图像，并且绘制的效果会受到目标图像对应地方透明度的影响；6、 DST_IN    在两者相交的地方绘制目标图像，并且绘制的效果会受到源图像对应地方透明度的影响；7、 SRC_OUT   在不相交的地方绘制源图像，相交处根据目标alpha进行过滤，目标色完全不透明时则完全过滤，完全透明则不过滤；8、 DST_OUT   在不相交的地方绘制目标图像，相交处根据源图像alpha进行过滤，完全不透明处则完全过滤，完全透明则不过滤；9、 SRC_ATOP  源图像和目标图像相交处绘制源图像，不相交的地方绘制目标图像，并且相交处的效果会受到源图像和目标图像alpha的影响；10、DST_ATOP  源图像和目标图像相交处绘制目标图像，不相交的地方绘制源图像，并且相交处的效果会受到源图像和目标图像alpha的影响；11、 XOR      在不相交的地方按原样绘制源图像和目标图像，相交的地方受到对应alpha和色值影响，按上面公式进行计算，如果都完全不透明则相交处完全不绘制；12、 DARKEN   该模式处理过后，会感觉效果变暗，即进行对应像素的比较，取较暗值，如果色值相同则进行混合；13、 LIGHTEN  如果在均完全不透明的情况下 ，色值取源色值和目标色值中的较大值，否则按上面算法进行计算；14、 MULTIPLY 正片叠底，即查看每个通道中的颜色信息，并将基色与混合色复合。结果色总是较暗的颜色。15、 SCREEN   滤色，滤色模式与我们所用的显示屏原理相同。16、 ADD     饱和度叠加17、 OVERLAY 像素是进行 Multiply （正片叠底）混合还是 Screen （屏幕）混合，取决于底层颜色，但底层颜色的高光与阴影部分的亮度细节会被保留；18、 CLEAR   所有点的像素的alpha 和color 都为 0。</code></pre><h4 id="图像合成效果图"><a href="#图像合成效果图" class="headerlink" title="图像合成效果图"></a>图像合成效果图</h4><p><img src="https://upload-images.jianshu.io/upload_images/2041548-d964105abf4be5d9.jpg?imageMogr2/auto-orient/" alt="图像合成效果图"></p><h3 id="（三）-PorterDuffXfermode-实例"><a href="#（三）-PorterDuffXfermode-实例" class="headerlink" title="（三） PorterDuffXfermode 实例"></a>（三） PorterDuffXfermode 实例</h3><p>1、基础效果<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   - Xfermode 图层混合模式的使用</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PorterDuffXfermodeView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图层混合模式</span></span><br><span class="line">    <span class="keyword">private</span> Xfermode mXfermode;</span><br><span class="line">    <span class="comment">// 控件大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mHeight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Bitmap mSourceBitmap;</span><br><span class="line">    <span class="keyword">private</span> Bitmap mDestBitmap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Rect mBottomSrcRect;</span><br><span class="line">    <span class="keyword">private</span> Rect mBottomDestRect;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Rect mTopSrcRect;</span><br><span class="line">    <span class="keyword">private</span> Rect mTopDestRect;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PorterDuffXfermodeView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PorterDuffXfermodeView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        mSourceBitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_src);</span><br><span class="line">        mDestBitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_dest);</span><br><span class="line"></span><br><span class="line">        mXfermode = <span class="keyword">new</span> PorterDuffXfermode(PorterDuff.Mode.SRC);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        mWidth = w;</span><br><span class="line">        mHeight = h;</span><br><span class="line">        mBottomSrcRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, mDestBitmap.getWidth(), mDestBitmap.getHeight());</span><br><span class="line">        mBottomDestRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, mWidth, mHeight / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        mTopSrcRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, mSourceBitmap.getWidth(), mSourceBitmap.getHeight());</span><br><span class="line">        mTopDestRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, mWidth, mHeight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        canvas.drawColor(Color.WHITE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里会生成了一个全新的bitmap，之后所有的绘图操作都是在这个bitmap上进行的</span></span><br><span class="line">        <span class="comment">// 目的是区分哪一步的图形,应该与合成模式的bitmap去合成 运算；</span></span><br><span class="line">        <span class="keyword">int</span> saveCount = canvas.saveLayer(<span class="number">0</span>, <span class="number">0</span>, mWidth, mHeight, mPaint, Canvas.ALL_SAVE_FLAG);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注意：先绘制目标图（底部）</span></span><br><span class="line">        canvas.drawBitmap(mDestBitmap, mBottomSrcRect, mBottomDestRect, mPaint);</span><br><span class="line">        <span class="comment">// 设置转换模式</span></span><br><span class="line">        mPaint.setXfermode(mXfermode);</span><br><span class="line">        <span class="comment">// 绘制源图 （顶部）</span></span><br><span class="line">        canvas.drawBitmap(mSourceBitmap, mTopSrcRect, mTopDestRect, mPaint);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清除转换模式</span></span><br><span class="line">        mPaint.setXfermode(<span class="keyword">null</span>);</span><br><span class="line">        canvas.restoreToCount(saveCount);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2、进度上色效果<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Xfermode 进度上色效果</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XfermodeLoadingColorView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="comment">// 控件大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mHeight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Xfermode mXfermode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 目标图</span></span><br><span class="line">    <span class="keyword">private</span> Bitmap mDestBitmap;</span><br><span class="line">    <span class="keyword">private</span> Rect mSrcRect;</span><br><span class="line">    <span class="keyword">private</span> Rect mDestRect;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 源图</span></span><br><span class="line">    <span class="keyword">private</span> Rect mDynamicRect;</span><br><span class="line">    <span class="comment">// 起点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mSrcStart;</span><br><span class="line">    <span class="comment">// 终点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mSrcEnd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XfermodeLoadingColorView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XfermodeLoadingColorView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);<span class="comment">// 去锯齿</span></span><br><span class="line">        mPaint.setDither(<span class="keyword">true</span>);<span class="comment">// 防抖动</span></span><br><span class="line">        mPaint.setFilterBitmap(<span class="keyword">true</span>);</span><br><span class="line">        mPaint.setColor(Color.RED);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化Bitmap</span></span><br><span class="line">        BitmapFactory.Options options = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        options.inSampleSize = <span class="number">2</span>;<span class="comment">// 缩小2倍</span></span><br><span class="line">        mDestBitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_xfermode_dest, options);</span><br><span class="line">        mSrcRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, mDestBitmap.getWidth(), mDestBitmap.getHeight());</span><br><span class="line">        mDestRect = <span class="keyword">new</span> Rect();</span><br><span class="line">        mDynamicRect = <span class="keyword">new</span> Rect();</span><br><span class="line"></span><br><span class="line">        mXfermode = <span class="keyword">new</span> PorterDuffXfermode(PorterDuff.Mode.SRC_IN);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        mWidth = w;</span><br><span class="line">        mHeight = h;</span><br><span class="line"></span><br><span class="line">        mDestRect.set((w - mDestBitmap.getWidth()) / <span class="number">2</span>, (h - mDestBitmap.getHeight()) / <span class="number">2</span>, (w + mDestBitmap.getWidth()) / <span class="number">2</span>, (h + mDestBitmap.getHeight()) / <span class="number">2</span>);</span><br><span class="line">        mDynamicRect.set((w - mDestBitmap.getWidth()) / <span class="number">2</span>, (h + mDestBitmap.getHeight()) / <span class="number">2</span>, (w + mDestBitmap.getWidth()) / <span class="number">2</span>, (h + mDestBitmap.getHeight()) / <span class="number">2</span>);</span><br><span class="line">        mSrcStart = (h + mDestBitmap.getHeight()) / <span class="number">2</span>;</span><br><span class="line">        mSrcEnd = (h - mDestBitmap.getHeight()) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        <span class="keyword">int</span> saveCount = canvas.saveLayer(<span class="number">0</span>, <span class="number">0</span>, mWidth, mHeight, mPaint, Canvas.ALL_SAVE_FLAG);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先绘制目标图</span></span><br><span class="line">        canvas.drawBitmap(mDestBitmap, mSrcRect, mDestRect, mPaint);</span><br><span class="line">        <span class="comment">// 设置混合模式</span></span><br><span class="line">        mPaint.setXfermode(mXfermode);</span><br><span class="line">        <span class="comment">// 绘制源图</span></span><br><span class="line">        canvas.drawRect(mDynamicRect, mPaint);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清除混合模式</span></span><br><span class="line">        mPaint.setXfermode(<span class="keyword">null</span>);</span><br><span class="line">        canvas.restoreToCount(saveCount);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ValueAnimator animator = ValueAnimator.ofInt(mSrcStart, mSrcEnd);</span><br><span class="line">        animator.setInterpolator(<span class="keyword">new</span> LinearInterpolator());</span><br><span class="line">        animator.setRepeatCount(-<span class="number">1</span>);</span><br><span class="line">        animator.setDuration(<span class="number">3000</span>);</span><br><span class="line">        animator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</span><br><span class="line">                mDynamicRect.top = (<span class="keyword">int</span>) animation.getAnimatedValue();</span><br><span class="line">                invalidate();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        animator.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3、橡皮檫效果<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Xfermode 橡皮擦效果</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EraserView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 背景图</span></span><br><span class="line">    <span class="keyword">private</span> Bitmap mBgBitmap;</span><br><span class="line">    <span class="comment">// 前景图（目标图）</span></span><br><span class="line">    <span class="keyword">private</span> Bitmap mDestBitmap;</span><br><span class="line">    <span class="comment">// 手指轨迹（源图）</span></span><br><span class="line">    <span class="keyword">private</span> Path mSrcPath;</span><br><span class="line">    <span class="comment">// 轨迹画布</span></span><br><span class="line">    <span class="keyword">private</span> Canvas mTrackCanvas;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录最后一个点的坐标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mLastX;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mLastY;</span><br><span class="line">    <span class="comment">// 最小移动距离</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mMinMoveDst;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EraserView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EraserView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mPaint.setDither(<span class="keyword">true</span>);<span class="comment">// 防抖动</span></span><br><span class="line">        mPaint.setAlpha(<span class="number">0</span>);<span class="comment">// 让绘制的路径是透明的</span></span><br><span class="line">        mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        mPaint.setStrokeWidth(DensityUtils.dip2px(context, <span class="number">10</span>));</span><br><span class="line">        mPaint.setStrokeJoin(Paint.Join.ROUND);<span class="comment">// 拐角</span></span><br><span class="line">        mPaint.setStrokeCap(Paint.Cap.ROUND);<span class="comment">// 落笔</span></span><br><span class="line">        mSrcPath = <span class="keyword">new</span> Path();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] screenSize = ScreenUtil.getScreenSize(context);</span><br><span class="line">        mMinMoveDst = DensityUtils.dip2px(context, <span class="number">5</span>);</span><br><span class="line">        mBgBitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.img_bg);</span><br><span class="line">        mBgBitmap = Bitmap.createScaledBitmap(mBgBitmap, screenSize[<span class="number">0</span>], screenSize[<span class="number">1</span>], <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 要擦除的前景图（目标图）</span></span><br><span class="line">        mDestBitmap = Bitmap.createBitmap(mBgBitmap.getWidth(), mBgBitmap.getHeight(), Bitmap.Config.ARGB_8888);</span><br><span class="line">        <span class="comment">// 将手指轨迹关联到目标画布上</span></span><br><span class="line">        mTrackCanvas = <span class="keyword">new</span> Canvas(mDestBitmap);</span><br><span class="line">        <span class="comment">// 绘制画布背景为中性灰</span></span><br><span class="line">        mTrackCanvas.drawColor(Color.LTGRAY);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在两者相交的地方绘制目标图像</span></span><br><span class="line">        mPaint.setXfermode(<span class="keyword">new</span> PorterDuffXfermode(PorterDuff.Mode.DST_IN));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> x = event.getX();</span><br><span class="line">        <span class="keyword">float</span> y = event.getY();</span><br><span class="line">        <span class="keyword">switch</span> (event.getAction()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">                mSrcPath.reset();</span><br><span class="line">                mSrcPath.moveTo(x, y);</span><br><span class="line">                mLastX = x;</span><br><span class="line">                mLastY = y;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                <span class="keyword">float</span> dx = Math.abs(x - mLastX);</span><br><span class="line">                <span class="keyword">float</span> dy = Math.abs(y - mLastY);</span><br><span class="line">                <span class="keyword">if</span> (dx &gt; mMinMoveDst || dy &gt; mMinMoveDst) &#123;</span><br><span class="line">                    mSrcPath.quadTo(mLastX, mLastY, (x + mLastX) / <span class="number">2</span>, (y + mLastY) / <span class="number">2</span>);</span><br><span class="line">                    mLastX = x;</span><br><span class="line">                    mLastY = y;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">        canvas.drawBitmap(mBgBitmap, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);</span><br><span class="line">        canvas.drawBitmap(mDestBitmap, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制手指轨迹（源图）</span></span><br><span class="line">        mTrackCanvas.drawPath(mSrcPath, mPaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reset</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mTrackCanvas.drawColor(Color.LTGRAY);</span><br><span class="line">        mSrcPath.reset();</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）-Xfermode-概述&quot;&gt;&lt;a href=&quot;#（一）-Xfermode-概述&quot; class=&quot;headerlink&quot; title=&quot;（一） Xfermode 概述&quot;&gt;&lt;/a&gt;（一） Xfermode 概述&lt;/h3&gt;&lt;p&gt;Xfermode图层混合模式：主要用
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>Android View之扇形进度动画</title>
    <link href="http://hawkyAndroid.github.io/2019/01/03/summary-view-fanprogress/"/>
    <id>http://hawkyAndroid.github.io/2019/01/03/summary-view-fanprogress/</id>
    <published>2019-01-03T14:34:55.000Z</published>
    <updated>2019-01-03T16:23:28.898Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）扇形进度思路"><a href="#（一）扇形进度思路" class="headerlink" title="（一）扇形进度思路"></a>（一）扇形进度思路</h3><p>1、绘制边界</p><p>2、绘制左半圆<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据当前进度算出进度条的位置</span></span><br><span class="line"><span class="comment">// （思路：进度关联进度条位置，进而关联到圆心角）</span></span><br><span class="line">mCurrentProgressPosition = mProgress * mProgressWidth / TOTAL_PROGRESS;</span><br><span class="line"><span class="comment">// 算出圆心角</span></span><br><span class="line"><span class="keyword">float</span> angle = (<span class="keyword">float</span>) Math.toDegrees(Math.acos((mArcRadius - mCurrentProgressPosition) / mArcRadius));</span><br><span class="line"><span class="comment">// 再根据进度绘制扇形</span></span><br><span class="line">canvas.drawArc(mArcRectF, <span class="number">180</span> - angle, <span class="number">2</span> * angle, <span class="keyword">false</span>, mPaint);</span><br></pre></td></tr></table></figure></p><p>3、绘制右边矩形<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 绘制左边半圆</span></span><br><span class="line">canvas.drawArc(mArcRectF, <span class="number">90</span>, <span class="number">180</span>, <span class="keyword">false</span>, mPaint);</span><br><span class="line"><span class="comment">// 更新矩形右边坐标</span></span><br><span class="line">mRectF.right = mLeftMargin + mCurrentProgressPosition;</span><br><span class="line"><span class="comment">// 再绘制右边矩形</span></span><br><span class="line"><span class="comment">//（思路：通过关联的进度不断更新待绘制的矩形区域）</span></span><br><span class="line"> canvas.drawRect(mRectF, mPaint);</span><br></pre></td></tr></table></figure></p><p>4、暴露接口、更新数据及动画</p><h3 id="（二）扇形进度实现"><a href="#（二）扇形进度实现" class="headerlink" title="（二）扇形进度实现"></a>（二）扇形进度实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 带扇形的进度动画</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FanProgressView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TOTAL_PROGRESS = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前进度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mProgress;</span><br><span class="line">    <span class="comment">// 进度条宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mProgressWidth;</span><br><span class="line">    <span class="comment">// 当前进度条的位置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mCurrentProgressPosition;</span><br><span class="line">    <span class="comment">// 扇形半径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mArcRadius;</span><br><span class="line">    <span class="comment">// 左右边距</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mLeftMargin;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mRightMargin;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 扇形区域</span></span><br><span class="line">    <span class="keyword">private</span> RectF mArcRectF;</span><br><span class="line">    <span class="comment">// 矩形区域</span></span><br><span class="line">    <span class="keyword">private</span> RectF mRectF;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FanProgressView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FanProgressView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mArcRectF = <span class="keyword">new</span> RectF();</span><br><span class="line">        mRectF = <span class="keyword">new</span> RectF();</span><br><span class="line"></span><br><span class="line">        mLeftMargin = DensityUtils.dip2px(context, <span class="number">10</span>);</span><br><span class="line">        mRightMargin = DensityUtils.dip2px(context, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        mProgressWidth = w - mLeftMargin - mRightMargin;</span><br><span class="line">        mArcRadius = (h - <span class="number">2</span> * mLeftMargin) / <span class="number">2.0f</span>;</span><br><span class="line">        mArcRectF.set(mLeftMargin, mLeftMargin, <span class="number">2</span> * mArcRadius + mLeftMargin, <span class="number">2</span> * mArcRadius + mLeftMargin);</span><br><span class="line">        mRectF.set(mArcRadius + mLeftMargin, mLeftMargin, mLeftMargin + mCurrentProgressPosition, <span class="number">2</span> * mArcRadius + mLeftMargin);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        drawBoundary(canvas);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据当前进度算出进度条的位置</span></span><br><span class="line">        mCurrentProgressPosition = mProgress * mProgressWidth / TOTAL_PROGRESS;</span><br><span class="line">        mPaint.setStyle(Paint.Style.FILL);</span><br><span class="line">        <span class="keyword">if</span> (mCurrentProgressPosition &lt; mArcRadius) &#123; <span class="comment">// 左边：半圆弧</span></span><br><span class="line">            <span class="comment">// 圆心角</span></span><br><span class="line">            <span class="keyword">float</span> angle = (<span class="keyword">float</span>) Math.toDegrees(Math.acos((mArcRadius - mCurrentProgressPosition) / mArcRadius));</span><br><span class="line">            mPaint.setColor(Color.YELLOW);</span><br><span class="line">            canvas.drawArc(mArcRectF, <span class="number">180</span> - angle, <span class="number">2</span> * angle, <span class="keyword">false</span>, mPaint);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="comment">// 右边：矩形</span></span><br><span class="line">            <span class="comment">// 绘制左边半圆</span></span><br><span class="line">            mPaint.setColor(Color.YELLOW);</span><br><span class="line">            canvas.drawArc(mArcRectF, <span class="number">90</span>, <span class="number">180</span>, <span class="keyword">false</span>, mPaint);</span><br><span class="line">            mRectF.right = mLeftMargin + mCurrentProgressPosition;</span><br><span class="line">            <span class="comment">// 绘制右边矩形</span></span><br><span class="line">            mPaint.setColor(Color.GREEN);</span><br><span class="line">            canvas.drawRect(mRectF, mPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 绘制边界</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawBoundary</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        canvas.drawColor(Color.LTGRAY);</span><br><span class="line">        mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        mPaint.setStrokeWidth(<span class="number">5F</span>);</span><br><span class="line">        mPaint.setColor(Color.RED);</span><br><span class="line">        <span class="comment">// 绘制左半边弧形</span></span><br><span class="line">        canvas.drawArc(mArcRectF, <span class="number">90</span>, <span class="number">180</span>, <span class="keyword">false</span>, mPaint);</span><br><span class="line">        <span class="comment">// 绘制右边矩形</span></span><br><span class="line">        canvas.drawLine(mArcRadius + mLeftMargin, mLeftMargin, mProgressWidth + mLeftMargin, mLeftMargin, mPaint);</span><br><span class="line">        canvas.drawLine(mArcRadius + mLeftMargin, mLeftMargin + <span class="number">2</span> * mArcRadius, mProgressWidth + mLeftMargin, mLeftMargin + <span class="number">2</span> * mArcRadius, mPaint);</span><br><span class="line">        canvas.drawLine(mProgressWidth + mLeftMargin, mLeftMargin, mProgressWidth + mLeftMargin, mLeftMargin + <span class="number">2</span> * mArcRadius, mPaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新进度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> progress 当前进度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProgress</span><span class="params">(<span class="keyword">int</span> progress)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mProgress = progress;</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方便属性动画更新属性progress的值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getProgress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mProgress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）扇形进度思路&quot;&gt;&lt;a href=&quot;#（一）扇形进度思路&quot; class=&quot;headerlink&quot; title=&quot;（一）扇形进度思路&quot;&gt;&lt;/a&gt;（一）扇形进度思路&lt;/h3&gt;&lt;p&gt;1、绘制边界&lt;/p&gt;
&lt;p&gt;2、绘制左半圆&lt;br&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>Android View之Shader</title>
    <link href="http://hawkyAndroid.github.io/2019/01/02/summery-view-shader/"/>
    <id>http://hawkyAndroid.github.io/2019/01/02/summery-view-shader/</id>
    <published>2019-01-02T11:34:55.000Z</published>
    <updated>2019-01-03T16:08:57.991Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）Shader概述"><a href="#（一）Shader概述" class="headerlink" title="（一）Shader概述"></a>（一）Shader概述</h3><p>Shader是着色器，其作用是给图像着色，配合画笔Paint使用。一般不直接使用，它有自己的子类：BitmapShader、LinearGradient、SweepGradient、RadialGradient、ComposeShader等。</p><h3 id="（二）TileMode平铺模式"><a href="#（二）TileMode平铺模式" class="headerlink" title="（二）TileMode平铺模式"></a>（二）TileMode平铺模式</h3><h4 id="1-gt-Shader-TileMode-CLAMP："><a href="#1-gt-Shader-TileMode-CLAMP：" class="headerlink" title="1&gt; Shader.TileMode.CLAMP："></a>1&gt; Shader.TileMode.CLAMP：</h4><p>边缘拉伸模式，边缘会往外拉伸的一个像素来填充区域。</p><h4 id="2-gt-Shader-TileMode-MIRROR："><a href="#2-gt-Shader-TileMode-MIRROR：" class="headerlink" title="2&gt; Shader.TileMode.MIRROR："></a>2&gt; Shader.TileMode.MIRROR：</h4><p>镜像模式，关于X轴/Y轴（镜面对称）翻转复制。</p><h4 id="3-gt-Shader-TileMode-REPEAT"><a href="#3-gt-Shader-TileMode-REPEAT" class="headerlink" title="3&gt; Shader.TileMode.REPEAT:"></a>3&gt; Shader.TileMode.REPEAT:</h4><p>重复模式，关于X轴/Y轴平移复制。</p><h3 id="（三）Shader实例"><a href="#（三）Shader实例" class="headerlink" title="（三）Shader实例"></a>（三）Shader实例</h3><h4 id="BitmapShader-的用法："><a href="#BitmapShader-的用法：" class="headerlink" title="BitmapShader 的用法："></a>BitmapShader 的用法：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 调用它来创建一个新的着色器，它将用位图绘制。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bitmap 在着色器内部使用的位图。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> tileX  在X轴绘制位图的平铺模式。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> tileY  在Y轴绘制位图的平铺模式。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">mBitmapShader = <span class="keyword">new</span> BitmapShader(mBitmap, Shader.TileMode.MIRROR, Shader.TileMode.MIRROR);</span><br><span class="line"><span class="comment">// 添加着色器</span></span><br><span class="line">mPaint.setShader(mBitmapShader);</span><br><span class="line">canvas.drawCircle(<span class="number">0</span>, <span class="number">0</span>, <span class="number">400</span>, mPaint);</span><br></pre></td></tr></table></figure><h4 id="LinearGradient-的用法"><a href="#LinearGradient-的用法" class="headerlink" title="LinearGradient 的用法:"></a>LinearGradient 的用法:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 线性渐变着色器。注意：起点和终点是相对于屏幕坐标系而言的。</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> (x0, y0) 渐变起点</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> (x1, y1) 渐变终点</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> color0 起点的颜色</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> color1 终点的颜色</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> title 平铺模式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">mShader = <span class="keyword">new</span> LinearGradient(<span class="keyword">float</span> x0, <span class="keyword">float</span> y0, <span class="keyword">float</span> x1, <span class="keyword">float</span> y1, <span class="keyword">int</span> color0, <span class="keyword">int</span> color1, Shader.TileMode tile);</span><br><span class="line">mPaint.setShader(mShader);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 线性渐变着色器。注意：渐变区域遵循(left, top, right, bottom)。</span></span><br><span class="line"><span class="comment">* (x0, y0) 渐变起点</span></span><br><span class="line"><span class="comment">* (x1, y1) 渐变终点</span></span><br><span class="line"><span class="comment">* colors 传入颜色数组</span></span><br><span class="line"><span class="comment">* positions 传入位置数组(可以为null)  取值范围[0, 1F]</span></span><br><span class="line"><span class="comment">* title 平铺模式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">mShader = <span class="keyword">new</span> LinearGradient(-<span class="number">200</span>, -<span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;Color.RED, Color.YELLOW, Color.GREEN, Color.BLUE&#125;,</span><br><span class="line"><span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0</span>, <span class="number">0.3F</span>, <span class="number">0.6F</span>, <span class="number">0.8F</span>&#125;, Shader.TileMode.CLAMP);</span><br><span class="line">mPaint.setShader(mShader);</span><br></pre></td></tr></table></figure><h4 id="SweepGradient-的用法"><a href="#SweepGradient-的用法" class="headerlink" title="SweepGradient 的用法"></a>SweepGradient 的用法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 梯度渐变着色器，围绕中心点绘制扫描梯度。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> cx       The x-coordinate of the center</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> cy       The y-coordinate of the center</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> color0   The color to use at the start of the sweep</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> color1   The color to use at the end of the sweep</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">mShader = <span class="keyword">new</span> SweepGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">int</span> color0, <span class="keyword">int</span> color1);</span><br><span class="line">mPaint.setShader(mShader);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 梯度渐变着色器，围绕中心点绘制扫描梯度。</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> cx       The x-coordinate of the center</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> cy       The y-coordinate of the center</span></span><br><span class="line"><span class="comment">* colors 传入颜色数组</span></span><br><span class="line"><span class="comment">* positions 传入位置数组(可以为null)  取值范围[0, 1F]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">mShader = <span class="keyword">new</span> SweepGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;Color.RED, Color.YELLOW, Color.GREEN&#125;, <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0.2F</span>, <span class="number">0.5F</span>, <span class="number">0.8F</span>&#125;);</span><br><span class="line">mPaint.setShader(mShader);</span><br></pre></td></tr></table></figure><h4 id="RadialGradient-的用法"><a href="#RadialGradient-的用法" class="headerlink" title="RadialGradient 的用法"></a>RadialGradient 的用法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 径向渐变着色器，从圆形中心向四周渐变。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> centerX     The x-coordinate of the center of the radius</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> centerY     The y-coordinate of the center of the radius</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> radius      Must be positive. The radius of the circle for this gradient</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> centerColor The color at the center of the circle.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> edgeColor   The color at the edge of the circle.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> tileMode    The Shader tiling mode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">mShader = <span class="keyword">new</span> RadialGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, Color.RED, Color.YELLOW, Shader.TileMode.CLAMP);</span><br><span class="line">mPaint.setShader(mShader);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 径向渐变着色器，从圆形中心向四周渐变。</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> centerX     The x-coordinate of the center of the radius</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> centerY     The y-coordinate of the center of the radius</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> radius      Must be positive. The radius of the circle for this gradient</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> centerColor The color at the center of the circle.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> edgeColor   The color at the edge of the circle.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> tileMode    The Shader tiling mode</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">mShader = <span class="keyword">new</span> RadialGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;Color.RED, Color.YELLOW, Color.BLUE&#125;,</span><br><span class="line"> <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0.1F</span>, <span class="number">0.4F</span>, <span class="number">0.5F</span>&#125;, Shader.TileMode.CLAMP);</span><br><span class="line">mPaint.setShader(mShader);</span><br></pre></td></tr></table></figure><h4 id="ComposeShader-的用法"><a href="#ComposeShader-的用法" class="headerlink" title="ComposeShader 的用法"></a>ComposeShader 的用法</h4><p>两个Shader组合在一起作为一个新Shader<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Shader shader01 = <span class="keyword">new</span> BitmapShader(mBitmap, Shader.TileMode.MIRROR, Shader.TileMode.MIRROR);</span><br><span class="line">Shader shader02 = <span class="keyword">new</span> SweepGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;Color.RED, Color.YELLOW, Color.GREEN&#125;, <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0.2F</span>, <span class="number">0.5F</span>, <span class="number">0.8F</span>&#125;);</span><br><span class="line"></span><br><span class="line">mPaint.setShader(<span class="keyword">new</span> ComposeShader(shader01, shader02, PorterDuff.Mode.DARKEN));</span><br><span class="line">canvas.drawCircle(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, mPaint);</span><br></pre></td></tr></table></figure></p><h4 id="Shader的矩阵变换"><a href="#Shader的矩阵变换" class="headerlink" title="Shader的矩阵变换"></a>Shader的矩阵变换</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Matrix matrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">matrix.preTranslate(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">matrix.preRotate(<span class="number">20</span>);</span><br><span class="line">matrix.preScale(<span class="number">0.5f</span>, <span class="number">1</span>);</span><br><span class="line">matrix.preSkew(<span class="number">2f</span>, <span class="number">1f</span>);</span><br><span class="line"><span class="comment">// 设置Shader的变换矩阵</span></span><br><span class="line">mShader.setLocalMatrix(matrix);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）Shader概述&quot;&gt;&lt;a href=&quot;#（一）Shader概述&quot; class=&quot;headerlink&quot; title=&quot;（一）Shader概述&quot;&gt;&lt;/a&gt;（一）Shader概述&lt;/h3&gt;&lt;p&gt;Shader是着色器，其作用是给图像着色，配合画笔Paint使用。一
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>2019年度计划</title>
    <link href="http://hawkyAndroid.github.io/2019/01/01/annual-plan-for-2019/"/>
    <id>http://hawkyAndroid.github.io/2019/01/01/annual-plan-for-2019/</id>
    <published>2019-01-01T14:08:07.000Z</published>
    <updated>2019-05-22T14:23:12.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2018年度总结"><a href="#2018年度总结" class="headerlink" title="2018年度总结"></a>2018年度总结</h2><p>这年真的过得很快，很多事情感觉都没来得及准备或者开始就结束了。</p><pre><code>1. 技能：拿了驾照。2. 旅游：去了一趟日本旅游。3. 书籍：看来不少技术方面的纸质书籍及投资方面的电子书。4. 专业：熟悉了Android性能优化、基本掌握了自定义View。</code></pre><h2 id="2019年度计划"><a href="#2019年度计划" class="headerlink" title="2019年度计划"></a>2019年度计划</h2><p>2019关键词：改变。【思维、眼界、执行力、自信】</p><pre><code>1. 婚姻：找个女票结婚。2. 身体：练就2块腹肌。3. 证书：拿教师资格证。4. 学习：微信小程序。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2018年度总结&quot;&gt;&lt;a href=&quot;#2018年度总结&quot; class=&quot;headerlink&quot; title=&quot;2018年度总结&quot;&gt;&lt;/a&gt;2018年度总结&lt;/h2&gt;&lt;p&gt;这年真的过得很快，很多事情感觉都没来得及准备或者开始就结束了。&lt;/p&gt;
&lt;pre&gt;&lt;code
      
    
    </summary>
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>Android Animator之XML动画</title>
    <link href="http://hawkyAndroid.github.io/2018/12/26/summary-animation-xml/"/>
    <id>http://hawkyAndroid.github.io/2018/12/26/summary-animation-xml/</id>
    <published>2018-12-26T13:19:55.000Z</published>
    <updated>2018-12-26T13:21:54.056Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）-使用XML编写动画。"><a href="#（一）-使用XML编写动画。" class="headerlink" title="（一） 使用XML编写动画。"></a>（一） 使用XML编写动画。</h3><p>使用 XML 编写动画的优点是：方便重用、可读性较高。</p><h4 id="1、-ValueAnimator-动画：res-animator-value-animator-01-xml"><a href="#1、-ValueAnimator-动画：res-animator-value-animator-01-xml" class="headerlink" title="1、  ValueAnimator 动画：res/animator/value_animator_01.xml"></a>1、  ValueAnimator 动画：res/animator/value_animator_01.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">animator</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:duration</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:interpolator</span>=<span class="string">"@android:anim/accelerate_interpolator"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:repeatCount</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:repeatMode</span>=<span class="string">"reverse"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:startOffset</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueFrom</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueTo</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueType</span>=<span class="string">"intType"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>AnimatorInflater 加载动画并执行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载属性动画</span></span><br><span class="line"> ValueAnimator animator = (ValueAnimator) AnimatorInflater.loadAnimator(<span class="keyword">this</span>, R.animator.value_animator_01);</span><br><span class="line"><span class="comment">// 添加（值）数据更新监听</span></span><br><span class="line">animator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> value = (<span class="keyword">int</span>) animation.getAnimatedValue();</span><br><span class="line">       DebugLog.e(<span class="string">"value："</span> + value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">animator.start();</span><br></pre></td></tr></table></figure></p><h4 id="2、-ObjectAnimator-动画：res-animator-object-animator-01-xml"><a href="#2、-ObjectAnimator-动画：res-animator-object-animator-01-xml" class="headerlink" title="2、  ObjectAnimator 动画：res/animator/object_animator_01.xml"></a>2、  ObjectAnimator 动画：res/animator/object_animator_01.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">objectAnimator</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:duration</span>=<span class="string">"3000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:interpolator</span>=<span class="string">"@android:interpolator/linear"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:propertyName</span>=<span class="string">"alpha"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:repeatCount</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:repeatMode</span>=<span class="string">"reverse"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:startOffset</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueFrom</span>=<span class="string">"0.1F"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueTo</span>=<span class="string">"1F"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueType</span>=<span class="string">"floatType"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>AnimatorInflater 加载动画并执行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载属性动画</span></span><br><span class="line">ObjectAnimator animator = (ObjectAnimator) AnimatorInflater.loadAnimator(<span class="keyword">this</span>, R.animator.object_animator_01);</span><br><span class="line"><span class="comment">// 设置目标对象</span></span><br><span class="line">animator.setTarget(textView);</span><br><span class="line"><span class="comment">// 添加动画监听</span></span><br><span class="line">animator.addListener(<span class="keyword">new</span> AnimatorListenerAdapter() &#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationStart</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画开始"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画结束"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br><span class="line">animator.start();</span><br></pre></td></tr></table></figure></p><h4 id="3、-ValueAnimator-组合动画：res-animator-animator-set-01-xml"><a href="#3、-ValueAnimator-组合动画：res-animator-animator-set-01-xml" class="headerlink" title="3、  ValueAnimator 组合动画：res/animator/animator_set_01.xml"></a>3、  ValueAnimator 组合动画：res/animator/animator_set_01.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:ordering</span>=<span class="string">"together"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">objectAnimator</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">"3000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:propertyName</span>=<span class="string">"alpha"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:valueFrom</span>=<span class="string">"0.1F"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:valueTo</span>=<span class="string">"1F"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:valueType</span>=<span class="string">"floatType"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span> <span class="attr">android:ordering</span>=<span class="string">"sequentially"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">objectAnimator</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:duration</span>=<span class="string">"1500"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:propertyName</span>=<span class="string">"rotation"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueFrom</span>=<span class="string">"0F"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueTo</span>=<span class="string">"180F"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueType</span>=<span class="string">"floatType"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">objectAnimator</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:duration</span>=<span class="string">"1500"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:propertyName</span>=<span class="string">"rotation"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueFrom</span>=<span class="string">"180F"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueTo</span>=<span class="string">"0F"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueType</span>=<span class="string">"floatType"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><p>AnimatorInflater 加载组合动画并执行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载组合属性动画</span></span><br><span class="line">Animator animator = AnimatorInflater.loadAnimator(<span class="keyword">this</span>, R.animator.animator_set_01);</span><br><span class="line"><span class="comment">// 设置目标对象</span></span><br><span class="line">animator.setTarget(textView);</span><br><span class="line">animator.start();</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）-使用XML编写动画。&quot;&gt;&lt;a href=&quot;#（一）-使用XML编写动画。&quot; class=&quot;headerlink&quot; title=&quot;（一） 使用XML编写动画。&quot;&gt;&lt;/a&gt;（一） 使用XML编写动画。&lt;/h3&gt;&lt;p&gt;使用 XML 编写动画的优点是：方便重用、可
      
    
    </summary>
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/categories/Animation/"/>
    
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/tags/Animation/"/>
    
  </entry>
  
  <entry>
    <title>Android Animator之ObjectAnimator</title>
    <link href="http://hawkyAndroid.github.io/2018/12/25/summary-animation-objectanimator/"/>
    <id>http://hawkyAndroid.github.io/2018/12/25/summary-animation-objectanimator/</id>
    <published>2018-12-25T14:14:26.000Z</published>
    <updated>2018-12-27T11:37:26.788Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）ObjectAnimation-概述"><a href="#（一）ObjectAnimation-概述" class="headerlink" title="（一）ObjectAnimation 概述"></a>（一）ObjectAnimation 概述</h3><p>ObjectAnimator：可以直接对任意对象的任意属性进行动画操作。其中控件的属性(必须有对应的get/set方法)可以通过控件本身或者父View的源码查询。</p><h3 id="（二）ObjectAnimation-用法"><a href="#（二）ObjectAnimation-用法" class="headerlink" title="（二）ObjectAnimation 用法"></a>（二）ObjectAnimation 用法</h3><p>1、一般动画 ObjectAnimation<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前控件Y轴缩放比</span></span><br><span class="line"><span class="keyword">float</span> currentScaleX = textView.getScaleX();</span><br><span class="line"><span class="comment">// 控件Y轴放大3倍。属性名scaleY对应 getScaleY()和setScaleY(float scaleY)方法。</span></span><br><span class="line">ObjectAnimator objectAnimator = ObjectAnimator.ofFloat(textView, <span class="string">"scaleY"</span>, <span class="number">1F</span>, <span class="number">3F</span>);</span><br><span class="line">objectAnimator.setDuration(<span class="number">1000L</span>);</span><br><span class="line">objectAnimator.start();</span><br></pre></td></tr></table></figure></p><p>2、组合动画 AnimatorSet<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">AnimatorSet animatorSet = <span class="keyword">new</span> AnimatorSet();</span><br><span class="line"></span><br><span class="line">ObjectAnimator alphaAnimator = ObjectAnimator.ofFloat(textView, <span class="string">"alpha"</span>, <span class="number">1F</span>, <span class="number">0.1F</span>);</span><br><span class="line">ObjectAnimator rotationAnimator = ObjectAnimator.ofFloat(textView, <span class="string">"rotation"</span>, <span class="number">0F</span>, <span class="number">360F</span>);</span><br><span class="line">ObjectAnimator scaleXAnimator = ObjectAnimator.ofFloat(textView, <span class="string">"scaleX"</span>, <span class="number">1F</span>, <span class="number">3F</span>);</span><br><span class="line">ObjectAnimator translationXAnimator = ObjectAnimator.ofFloat(textView, <span class="string">"translationX"</span>, <span class="number">0F</span>, -<span class="number">300F</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// with：alphaAnimator与rotationAnimator同时执行</span></span><br><span class="line">animatorSet.play(alphaAnimator).with(rotationAnimator);</span><br><span class="line"><span class="comment">// before：alphaAnimator在translationXAnimator之前执行</span></span><br><span class="line">animatorSet.play(alphaAnimator).before(translationXAnimator);</span><br><span class="line"><span class="comment">// after：alphaAnimator在scaleXAnimator之后执行</span></span><br><span class="line">animatorSet.play(alphaAnimator).after(scaleXAnimator);</span><br><span class="line"><span class="comment">// after：alphaAnimator在1s之后执行</span></span><br><span class="line">animatorSet.play(alphaAnimator).after(<span class="number">1000L</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// playTogether：同时执行多个动画</span></span><br><span class="line">animatorSet.playTogether(alphaAnimator, rotationAnimator, scaleXAnimator, translationXAnimator);</span><br><span class="line"><span class="comment">// playSequentially：多个动画按顺序执行</span></span><br><span class="line">animatorSet.playSequentially(alphaAnimator, rotationAnimator, scaleXAnimator, translationXAnimator);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 动画加速</span></span><br><span class="line">animatorSet.setInterpolator(<span class="keyword">new</span> AccelerateInterpolator());</span><br><span class="line"><span class="comment">// 动画监听</span></span><br><span class="line">animatorSet.addListener(<span class="keyword">new</span> AnimatorListenerAdapter() &#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationStart</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画开始"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationCancel</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画取消"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationRepeat</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画重复执行"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationPause</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画暂停"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationResume</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画继续"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画结束"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 执行时长。若同时执行则为 1s，反之累加。</span></span><br><span class="line">animatorSet.setDuration(<span class="number">1000L</span>);</span><br><span class="line"><span class="comment">// 延时 1s 执行</span></span><br><span class="line">animatorSet.setStartDelay(<span class="number">1000L</span>);</span><br><span class="line">animatorSet.start();</span><br></pre></td></tr></table></figure></p><h3 id="（三）Interpolator-用法"><a href="#（三）Interpolator-用法" class="headerlink" title="（三）Interpolator 用法"></a>（三）Interpolator 用法</h3><p>Interpolator插值器 定义动画的变化率。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义一个先减速后加速的Interpolator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DecelerateAccelerateInterpolator</span> <span class="keyword">implements</span> <span class="title">TimeInterpolator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> input 系统根据设定的动画时长匀速增加，变化范围是0到1。</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> fraction 斜率决定快慢  - +</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getInterpolation</span><span class="params">(<span class="keyword">float</span> input)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (input &lt; <span class="number">0.5f</span>) &#123;<span class="comment">// x ∈[0, 1/2)</span></span><br><span class="line">          <span class="keyword">return</span> (<span class="keyword">float</span>) (Math.sin(input * Math.PI) / <span class="number">2.0f</span>);<span class="comment">// y∈[0, 1/2] 【-】</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;<span class="comment">// x ∈[1/2, 1]</span></span><br><span class="line">          <span class="keyword">return</span> <span class="number">1</span> - (<span class="keyword">float</span>) (Math.sin(input * Math.PI) / <span class="number">2.0f</span>);<span class="comment">// y∈ 1 - [1/2, 0] 【+】</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（四）ObjectAnimation-实例"><a href="#（四）ObjectAnimation-实例" class="headerlink" title="（四）ObjectAnimation 实例"></a>（四）ObjectAnimation 实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ObjectAnimator 小球加速下落过程中颜色过渡动画</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ObjectAnimatorView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CIRCLE_RADIUS = <span class="number">100</span>;<span class="comment">// 圆的半径</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mWidth, mHeight;<span class="comment">// 控件大小</span></span><br><span class="line">    <span class="keyword">private</span> Point mCurrentPoint;<span class="comment">// 当前中心点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mColor;<span class="comment">// 颜色值</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ObjectAnimatorView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ObjectAnimatorView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mPaint.setColor(Color.RED);</span><br><span class="line"></span><br><span class="line">        mCurrentPoint = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        <span class="keyword">this</span>.mWidth = w;</span><br><span class="line">        <span class="keyword">this</span>.mHeight = h;</span><br><span class="line">        mCurrentPoint.set(mWidth / <span class="number">2</span>, CIRCLE_RADIUS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getColor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(<span class="keyword">int</span> color)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mColor = color;</span><br><span class="line">        mPaint.setColor(color);</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ObjectAnimator：本对象必须要有关于color属性的set/get方法。 Red -&gt; Green -&gt; Blue颜色变化</span></span><br><span class="line">        ObjectAnimator objectAnimator = ObjectAnimator.ofObject(<span class="keyword">this</span>, <span class="string">"color"</span>, <span class="keyword">new</span> ArgbEvaluator(), Color.RED, Color.GREEN, Color.BLUE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ValueAnimator：中心点的坐标位置过渡</span></span><br><span class="line">        Point startPoint = <span class="keyword">new</span> Point(mWidth / <span class="number">2</span>, CIRCLE_RADIUS);</span><br><span class="line">        Point endPoint = <span class="keyword">new</span> Point(mWidth / <span class="number">2</span>, mHeight / <span class="number">2</span>);</span><br><span class="line">        ValueAnimator valueAnimator = ValueAnimator.ofObject(<span class="keyword">new</span> PointEvaluator(), startPoint, endPoint);</span><br><span class="line">        valueAnimator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</span><br><span class="line">                mCurrentPoint = (Point) animation.getAnimatedValue();</span><br><span class="line">                invalidate();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        valueAnimator.addListener(<span class="keyword">new</span> AnimatorListenerAdapter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">                DebugLog.e(<span class="string">"动画结束"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 组合成一个动画</span></span><br><span class="line">        AnimatorSet animatorSet = <span class="keyword">new</span> AnimatorSet();</span><br><span class="line">        animatorSet.play(objectAnimator).with(valueAnimator);</span><br><span class="line">        animatorSet.setDuration(<span class="number">3000L</span>);</span><br><span class="line">        <span class="comment">// 设置插值器：加速变化（默认是AccelerateDecelerateInterpolator）</span></span><br><span class="line">        animatorSet.setInterpolator(<span class="keyword">new</span> AccelerateInterpolator(<span class="number">2F</span>));</span><br><span class="line">        animatorSet.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        mPaint.setStyle(Paint.Style.FILL);</span><br><span class="line">        canvas.drawCircle(mCurrentPoint.x, mCurrentPoint.y, CIRCLE_RADIUS, mPaint);</span><br><span class="line"></span><br><span class="line">        mPaint.reset();</span><br><span class="line">        canvas.drawLine(<span class="number">0</span>, mHeight / <span class="number">2</span> + CIRCLE_RADIUS, mWidth, mHeight / <span class="number">2</span> + CIRCLE_RADIUS, mPaint);</span><br><span class="line">        mPaint.setColor(Color.RED);</span><br><span class="line">        mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        mPaint.setStrokeWidth(<span class="number">15F</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> LIMIT_COUNT = <span class="number">19</span>;</span><br><span class="line">        <span class="keyword">int</span> pointDist = mWidth / LIMIT_COUNT;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; LIMIT_COUNT; i++) &#123;</span><br><span class="line">            canvas.drawPoint(pointDist * i, mHeight / <span class="number">2</span> + CIRCLE_RADIUS, mPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）ObjectAnimation-概述&quot;&gt;&lt;a href=&quot;#（一）ObjectAnimation-概述&quot; class=&quot;headerlink&quot; title=&quot;（一）ObjectAnimation 概述&quot;&gt;&lt;/a&gt;（一）ObjectAnimation 概述&lt;/
      
    
    </summary>
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/categories/Animation/"/>
    
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/tags/Animation/"/>
    
  </entry>
  
  <entry>
    <title>Android Animator之ValueAnimator</title>
    <link href="http://hawkyAndroid.github.io/2018/12/21/summary-animation-valueanimator/"/>
    <id>http://hawkyAndroid.github.io/2018/12/21/summary-animation-valueanimator/</id>
    <published>2018-12-21T12:34:55.000Z</published>
    <updated>2018-12-26T13:27:34.291Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）Android-动画概述"><a href="#（一）Android-动画概述" class="headerlink" title="（一）Android 动画概述"></a>（一）Android 动画概述</h3><pre><code>补间动画(Tweened Animation)：只会改变View的显示效果，不会改变View的真正属性（比如：按钮经补间动画平移后，点击平移后位置上按钮是无效的）。逐帧动画(Frame-by-Frame Animation)：只是将一个完整的动画拆分成一些单独的图片，然后再将它们按顺序连贯起来进行播放。ValueAnimator：只能用于计算在指定时间内，初始值到结束值之间(中间可能有多个过渡值)平滑的动画过渡。ObjectAnimator：可以直接对任意对象的任意属性进行动画操作。--功能强大View可以直接执行动画： view.animate().x(500).y(500).setDuration(5000);</code></pre><h3 id="（二）TypeEvaluator-用法"><a href="#（二）TypeEvaluator-用法" class="headerlink" title="（二）TypeEvaluator 用法"></a>（二）TypeEvaluator 用法</h3><p>TypeEvaluator：作用是告诉动画系统如何从初始值过渡到结束值。</p><p>自定义一个TypeEvaluator:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * PointEvaluator：告诉动画系统起始点到结束点的过渡机制</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PointEvaluator</span> <span class="keyword">implements</span> <span class="title">TypeEvaluator</span>&lt;<span class="title">Point</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算初始值到结束值的过渡</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fraction   动画完成进度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> startValue 初始值（对象）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> endValue   结束值（对象）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">evaluate</span><span class="params">(<span class="keyword">float</span> fraction, Point startValue, Point endValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> floatX = startValue.x + fraction * (endValue.x - startValue.x);</span><br><span class="line">        <span class="keyword">float</span> floatY = startValue.y + fraction * (endValue.y - startValue.y);</span><br><span class="line">        DebugLog.e(<span class="string">"floatX："</span> + floatX + <span class="string">", floatY："</span> + floatY);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point((<span class="keyword">int</span>) floatX, (<span class="keyword">int</span>) floatY);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>执行两个点之间的动画过渡:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PointEvaluator evaluator = <span class="keyword">new</span> PointEvaluator();</span><br><span class="line">Point startPoint = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">Point endPoint = <span class="keyword">new</span> Point(<span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">ValueAnimator valueAnimator = ValueAnimator.ofObject(evaluator, startPoint, endPoint);</span><br><span class="line">valueAnimator.setDuration(<span class="number">10000L</span>);</span><br><span class="line">valueAnimator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</span><br><span class="line">        Point point = (Point) animation.getAnimatedValue();</span><br><span class="line">        DebugLog.e(<span class="string">"point："</span> + point.toString());<span class="comment">// 新的过渡点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">valueAnimator.start();</span><br></pre></td></tr></table></figure></p><h3 id="（三）ValueAnimator-实例"><a href="#（三）ValueAnimator-实例" class="headerlink" title="（三）ValueAnimator 实例"></a>（三）ValueAnimator 实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ValueAnimator之画圆动画过渡轨迹</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValueAnimatorView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> Path mDstPath;<span class="comment">// 目标路径</span></span><br><span class="line">    <span class="keyword">private</span> PathMeasure mPathMeasure;</span><br><span class="line">    <span class="keyword">private</span> ValueAnimator mValueAnimator;<span class="comment">// 值动画</span></span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mWidth, mHeight;<span class="comment">// 控件大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mCirclePerimeter;<span class="comment">// 圆的周长</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mStopD;<span class="comment">// 截取的结束位置距离Path起点的路径(轨迹)长度</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ValueAnimatorView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ValueAnimatorView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        <span class="keyword">this</span>.mContext = context;</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mPaint.setColor(Color.RED);</span><br><span class="line">        mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        mPaint.setStrokeWidth(DensityUtils.dip2px(mContext, <span class="number">15</span>));</span><br><span class="line"></span><br><span class="line">        Path path = <span class="keyword">new</span> Path();</span><br><span class="line">        path.addCircle(<span class="number">0</span>, <span class="number">0</span>, DensityUtils.dip2px(mContext, <span class="number">100</span>), Path.Direction.CW);</span><br><span class="line">        mPathMeasure = <span class="keyword">new</span> PathMeasure(path, <span class="keyword">false</span>);</span><br><span class="line">        mCirclePerimeter = mPathMeasure.getLength();</span><br><span class="line"></span><br><span class="line">        mDstPath = <span class="keyword">new</span> Path();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// super.onMeasure(widthMeasureSpec, heightMeasureSpec);</span></span><br><span class="line">        <span class="keyword">int</span> width = measureDimension(DensityUtils.dip2px(mContext, <span class="number">250</span>), widthMeasureSpec);</span><br><span class="line">        <span class="keyword">int</span> height = measureDimension(DensityUtils.dip2px(mContext, <span class="number">250</span>), heightMeasureSpec);</span><br><span class="line">        setMeasuredDimension(width, height);<span class="comment">// 保存最终测量的宽高</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">measureDimension</span><span class="params">(<span class="keyword">int</span> defaultSize, <span class="keyword">int</span> measureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result;</span><br><span class="line">        <span class="keyword">int</span> specMode = MeasureSpec.getMode(measureSpec);</span><br><span class="line">        <span class="keyword">int</span> specSize = MeasureSpec.getSize(measureSpec);</span><br><span class="line">        <span class="keyword">if</span> (specMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">            result = specSize;<span class="comment">// 指定大小</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = defaultSize;<span class="comment">// 默认大小</span></span><br><span class="line">            <span class="keyword">if</span> (specMode == MeasureSpec.AT_MOST) &#123;</span><br><span class="line">                result = Math.min(result, specSize);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        <span class="keyword">this</span>.mWidth = w;</span><br><span class="line">        <span class="keyword">this</span>.mHeight = h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mValueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mValueAnimator.isRunning()) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mValueAnimator = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mValueAnimator = ValueAnimator.ofFloat(<span class="number">0</span>, <span class="number">1F</span>);<span class="comment">// ValueAnimator.ofFloat(0, 0.8F, 1F);// 后面20%变慢</span></span><br><span class="line">        mValueAnimator.setDuration(<span class="number">3000L</span>);<span class="comment">// 每次持续3s（默认300ms）</span></span><br><span class="line">        mValueAnimator.setRepeatCount(<span class="number">2</span>);<span class="comment">// 重复 2+1 次； 总时间：mValueAnimator.getTotalDuration()</span></span><br><span class="line">        mValueAnimator.setRepeatMode(ValueAnimator.REVERSE);<span class="comment">// 反向重复</span></span><br><span class="line">        mValueAnimator.setInterpolator(<span class="keyword">new</span> AccelerateInterpolator());<span class="comment">// 动画插入器：Interpolator插值器定义动画的变化率。</span></span><br><span class="line">        mValueAnimator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">float</span> value = (<span class="keyword">float</span>) animation.getAnimatedValue();<span class="comment">// [0.0f, 1.0f]</span></span><br><span class="line">                mStopD = mCirclePerimeter * value;</span><br><span class="line">                invalidate();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        mValueAnimator.setStartDelay(<span class="number">1000L</span>);<span class="comment">// 延时1s执行动画</span></span><br><span class="line">        <span class="comment">//  mValueAnimator.reverse();// 反向执行</span></span><br><span class="line">        mValueAnimator.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 暂停动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pauseAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mValueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mValueAnimator.isRunning()) &#123;</span><br><span class="line">                mValueAnimator.pause();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 继续动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mValueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mValueAnimator.isRunning()) &#123;</span><br><span class="line">                mValueAnimator.resume();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 结束动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mValueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mValueAnimator.isRunning()) &#123;</span><br><span class="line">                mValueAnimator.end();</span><br><span class="line">            &#125;</span><br><span class="line">            mValueAnimator = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重启动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">restartAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mValueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mValueAnimator.isRunning()) &#123;</span><br><span class="line">                mValueAnimator.cancel();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        startAnimation();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDetachedFromWindow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDetachedFromWindow();</span><br><span class="line">        endAnimation();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        canvas.translate(mWidth / <span class="number">2</span>, mHeight / <span class="number">2</span>);</span><br><span class="line">        canvas.drawColor(Color.CYAN);</span><br><span class="line"></span><br><span class="line">        mDstPath.reset();</span><br><span class="line">        <span class="keyword">if</span> (mPathMeasure.getSegment(<span class="number">0</span>, mStopD, mDstPath, <span class="keyword">true</span>)) &#123;</span><br><span class="line">            canvas.drawPath(mDstPath, mPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）Android-动画概述&quot;&gt;&lt;a href=&quot;#（一）Android-动画概述&quot; class=&quot;headerlink&quot; title=&quot;（一）Android 动画概述&quot;&gt;&lt;/a&gt;（一）Android 动画概述&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;补间动画(Tween
      
    
    </summary>
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/categories/Animation/"/>
    
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/tags/Animation/"/>
    
  </entry>
  
  <entry>
    <title>Android View之GestureDetector</title>
    <link href="http://hawkyAndroid.github.io/2018/12/17/summary-view-gesturedetector/"/>
    <id>http://hawkyAndroid.github.io/2018/12/17/summary-view-gesturedetector/</id>
    <published>2018-12-17T11:34:15.000Z</published>
    <updated>2018-12-21T14:23:45.927Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）GestureDetector-概述"><a href="#（一）GestureDetector-概述" class="headerlink" title="（一）GestureDetector 概述"></a>（一）GestureDetector 概述</h3><p>GestureDetector：主要用来结合MotionEvent检测并识别各种手势事件，注意它只能用来识别并接管触摸事件的MotionEvent。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/********  常用步骤  **********/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1、创建GestureDetector实例并实现监听。注意：这里只会有一种事件类型的回调触发。</span></span><br><span class="line">GestureDetector gestureDetector = <span class="keyword">new</span> GestureDetector(<span class="keyword">this</span>, <span class="keyword">new</span> GestureDetector.SimpleOnGestureListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onSingleTapConfirmed</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"单击确认（事件），双击发生时不会触发"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDoubleTap</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"双击事件"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onDoubleTap(e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLongPress</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onLongPress(e);</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"长按事件"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDoubleTapEvent</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (e.getActionMasked()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"双击事件（手指抬起）"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onDoubleTapEvent(e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2、为指定控件设置触摸监听并让GestureDetector接管onTouchEvent事件。注意：view1需要是可点击的</span></span><br><span class="line">view1.setOnTouchListener(<span class="keyword">new</span> View.OnTouchListener() &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> mGestureDetector.onTouchEvent(event);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="（二）GestureDetector-方法"><a href="#（二）GestureDetector-方法" class="headerlink" title="（二）GestureDetector 方法"></a>（二）GestureDetector 方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置是否禁用长按事件</span></span><br><span class="line">mGestureDetector.setIsLongpressEnabled(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否允许长按事件</span></span><br><span class="line">mGestureDetector.isLongpressEnabled();</span><br></pre></td></tr></table></figure><h3 id="（三）GestureDetector-实例"><a href="#（三）GestureDetector-实例" class="headerlink" title="（三）GestureDetector 实例"></a>（三）GestureDetector 实例</h3><p>1、GestureDetector 手势检测<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认监听OnGestureListener。常用的是SimpleOnGestureListener</span></span><br><span class="line"><span class="keyword">private</span> GestureDetector.OnGestureListener mDefaultGestureListener = <span class="keyword">new</span> GestureDetector.OnGestureListener() &#123;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 当View为文本、图片默认不可点击时，为保证事件被唯一的 View 消费，</span></span><br><span class="line"><span class="comment">      * 要么声明它们的 clickable 为 true，要么onDown回 true。</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span> true则被唯一的View消费，反之被可被多个View消费</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDown</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"按下"</span>);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 按下超过100ms触发，若小于100ms或事件被立即拦截则不会被触发。</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onShowPress</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"onShowPress"</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 单击抬起（在双击的第一次抬起时触发）</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onSingleTapUp</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"onSingleTapUp"</span>);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 监听滚动</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e1 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e2 手指移动时的MotionEvent</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> distanceX 在 X 轴上滚动的距离</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> distanceY 在 Y 轴上滚动的距离</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onScroll</span><span class="params">(MotionEvent e1, MotionEvent e2, <span class="keyword">float</span> distanceX, <span class="keyword">float</span> distanceY)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"onScroll#distanceX："</span> + distanceX + <span class="string">",distanceY："</span> + distanceY);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 长按超过500ms触发</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLongPress</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"onLongPress"</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 抛(投掷)。通过 e1 和 e2 获取到手指按下和抬起时的坐标、时间等。</span></span><br><span class="line"><span class="comment">      * 通过 velocityX 和 velocityY 获取到在这段时间内的运动速度，单位是像素(距离)／秒。</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e1 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e2 手指移动时的MotionEvent</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> velocityX 在 X 轴上的运动速度(像素／秒)。</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> velocityY 在 Y 轴上的运动速度(像素／秒)。</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onFling</span><span class="params">(MotionEvent e1, MotionEvent e2, <span class="keyword">float</span> velocityX, <span class="keyword">float</span> velocityY)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"onScroll#velocityX："</span> + velocityX + <span class="string">",velocityY："</span> + velocityY);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure></p><p>2、ScaleGestureDetector 缩放手势检测<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * View之ScaleGestureDetector - 缩放手指检测（至少2根手指）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScaleGestureDetectorView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ScaleGestureDetector mScaleGestureDetector;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mPointCount;<span class="comment">// 手指数量</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ScaleGestureDetectorView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ScaleGestureDetectorView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mScaleGestureDetector = <span class="keyword">new</span> ScaleGestureDetector(context, <span class="keyword">new</span> ScaleGestureDetector.OnScaleGestureListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 缩放手势被触发</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> detector 缩放手势</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@return</span> true：表示当前缩放事件已被处理，会重新积累缩放因子；false 则会继续积累缩放因子。</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onScale</span><span class="params">(ScaleGestureDetector detector)</span> </span>&#123;</span><br><span class="line">                DebugLog.e(<span class="string">"focus("</span> + detector.getFocusX() + <span class="string">","</span> + detector.getFocusY() + <span class="string">")"</span>); <span class="comment">// 缩放中心(x,y)坐标 -- 焦点</span></span><br><span class="line">                DebugLog.e(<span class="string">"scale = "</span> + detector.getScaleFactor());  <span class="comment">// 缩放因子 -- 比例</span></span><br><span class="line">                DebugLog.e(<span class="string">"mPointCount："</span> + mPointCount);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 缩放手势开始</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> detector 缩放手势</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@return</span> 只有返回true才可使用缩放手势</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onScaleBegin</span><span class="params">(ScaleGestureDetector detector)</span> </span>&#123;</span><br><span class="line">                DebugLog.e(<span class="string">"-----缩放手势开始-----"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 缩放手势结束 MotionEvent.ACTION_POINTER_UP时触发</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> detector 缩放手势</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScaleEnd</span><span class="params">(ScaleGestureDetector detector)</span> </span>&#123;</span><br><span class="line">                DebugLog.e(<span class="string">"-----缩放手势结束-----"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        mPointCount = event.getPointerCount();</span><br><span class="line">        <span class="keyword">return</span> mScaleGestureDetector.onTouchEvent(event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）GestureDetector-概述&quot;&gt;&lt;a href=&quot;#（一）GestureDetector-概述&quot; class=&quot;headerlink&quot; title=&quot;（一）GestureDetector 概述&quot;&gt;&lt;/a&gt;（一）GestureDetector 概述&lt;/
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>Android View之Region</title>
    <link href="http://hawkyAndroid.github.io/2018/12/13/summary-view-region/"/>
    <id>http://hawkyAndroid.github.io/2018/12/13/summary-view-region/</id>
    <published>2018-12-13T11:08:55.000Z</published>
    <updated>2018-12-14T15:32:48.374Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）Region概述"><a href="#（一）Region概述" class="headerlink" title="（一）Region概述"></a>（一）Region概述</h3><p>Region（区域）是封闭的，可通过关联Path（不封闭图形）来判断特殊形状图形的点击区域（范围）。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  区域是否包含指定的点(x, y)</span></span><br><span class="line">region.contains(<span class="keyword">int</span> x, <span class="keyword">int</span> y);</span><br></pre></td></tr></table></figure></p><h3 id="（二）Region实例"><a href="#（二）Region实例" class="headerlink" title="（二）Region实例"></a>（二）Region实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * View - Region 判断点击范围是否在目标图形区域内</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegionView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> Path mPath;</span><br><span class="line">    <span class="keyword">private</span> RectF mBigRectF;</span><br><span class="line">    <span class="keyword">private</span> RectF mSmallRectF;</span><br><span class="line">    <span class="comment">// 目标图形区域</span></span><br><span class="line">    <span class="keyword">private</span> Region targetGraphRegion;</span><br><span class="line">    <span class="comment">// 模板边界区域（范围更大）</span></span><br><span class="line">    <span class="keyword">private</span> Region templateRegion;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按下时的区域标识</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> touchFlag = -<span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 当前的区域标识</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> currentFlag = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RegionView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RegionView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        mPath = <span class="keyword">new</span> Path();</span><br><span class="line">        targetGraphRegion = <span class="keyword">new</span> Region();</span><br><span class="line">        DebugLog.e(<span class="string">"初始化的目标图形区域#targetGraphRegion："</span> + targetGraphRegion.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        <span class="comment">// 创建模板边界区域</span></span><br><span class="line">        templateRegion = <span class="keyword">new</span> Region(<span class="number">0</span>, <span class="number">0</span>, w, h);</span><br><span class="line">        mBigRectF = <span class="keyword">new</span> RectF(w / <span class="number">2</span> - <span class="number">400</span>, h / <span class="number">2</span> - <span class="number">400</span>, w / <span class="number">2</span> + <span class="number">400</span>, h / <span class="number">2</span> + <span class="number">400</span>);</span><br><span class="line">        mSmallRectF = <span class="keyword">new</span> RectF(w / <span class="number">2</span> - <span class="number">200</span>, h / <span class="number">2</span> - <span class="number">200</span>, w / <span class="number">2</span> + <span class="number">200</span>, h / <span class="number">2</span> + <span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事件处理</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> px = (<span class="keyword">int</span>) event.getX();</span><br><span class="line">        <span class="keyword">int</span> py = (<span class="keyword">int</span>) event.getY();</span><br><span class="line">        <span class="keyword">switch</span> (event.getAction()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">                currentFlag = touchFlag = containsPoint(px, py);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                currentFlag = containsPoint(px, py);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:<span class="comment">// 释放手指时复位</span></span><br><span class="line">                currentFlag = containsPoint(px, py);</span><br><span class="line">                <span class="comment">// 如果按下的点和释放的点在同一区域而且是目标区域，则认为是点击事件（目标区域被点击）</span></span><br><span class="line">                <span class="keyword">if</span> (currentFlag == touchFlag &amp;&amp; currentFlag != -<span class="number">1</span>) &#123;</span><br><span class="line">                    DebugLog.e(<span class="string">"--在目标图形区域内被点击--"</span>);</span><br><span class="line">                    <span class="keyword">if</span> (mListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        mListener.onRegionClickListener(px, py);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                currentFlag = touchFlag = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_CANCEL:<span class="comment">// 被上层控件拦截时复位</span></span><br><span class="line">                currentFlag = touchFlag = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 目标图形区域是否包含指定的点</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">containsPoint</span><span class="params">(<span class="keyword">int</span> px, <span class="keyword">int</span> py)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> targetGraphRegion.contains(px, py) ? <span class="number">1</span> : -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图形绘制</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制扇形</span></span><br><span class="line">        mPath.reset();</span><br><span class="line">        <span class="comment">// 添加一个大圆弧到path</span></span><br><span class="line">        mPath.addArc(mBigRectF, <span class="number">230</span>, <span class="number">82</span>);</span><br><span class="line">        <span class="comment">// 添加一个小圆弧到path( 起点与上次最后一个坐标点连接) 310-230=80</span></span><br><span class="line">        mPath.arcTo(mSmallRectF, <span class="number">310</span>, -<span class="number">82</span>);</span><br><span class="line">        <span class="comment">// 连接成闭合曲线</span></span><br><span class="line">        mPath.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这将在templateRegion模板区域上裁剪出一个与路径mPath所绘制的目标图形相同的区域, 然后赋给targetGraphRegion。</span></span><br><span class="line">        <span class="comment">// 如果结果区域targetGraphRegion非空，则返回true。</span></span><br><span class="line">        <span class="comment">// 注意：不管mPath所绘制的目标图形是否闭合，生成的目标区域targetGraphRegion始终是闭合的。</span></span><br><span class="line">        <span class="keyword">boolean</span> success = targetGraphRegion.setPath(mPath, templateRegion);</span><br><span class="line">        DebugLog.e(<span class="string">"success："</span> + success);</span><br><span class="line">        DebugLog.e(<span class="string">"生成后的目标图形区域#targetGraphRegion："</span> + targetGraphRegion.toString());</span><br><span class="line">        <span class="keyword">if</span> (!targetGraphRegion.isEmpty()) &#123;</span><br><span class="line">            DebugLog.e(<span class="string">"targetGraphRegion.getBounds()："</span> + targetGraphRegion.getBounds().toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制Path图形</span></span><br><span class="line">        <span class="comment">// 添加触摸变色效果</span></span><br><span class="line">        <span class="keyword">if</span> (currentFlag == touchFlag &amp;&amp; currentFlag != -<span class="number">1</span>) &#123;</span><br><span class="line">            mPaint.setColor(Color.YELLOW);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mPaint.setColor(Color.RED);</span><br><span class="line">        &#125;</span><br><span class="line">        mPaint.setStyle(Paint.Style.FILL);</span><br><span class="line"><span class="comment">//        mPaint.setStyle(Paint.Style.STROKE);</span></span><br><span class="line"><span class="comment">//        mPaint.setStrokeWidth(20);</span></span><br><span class="line">        canvas.drawPath(mPath, mPaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RegionListener mListener;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setListener</span><span class="params">(RegionListener listener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mListener = listener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RegionListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onRegionClickListener</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）Region概述&quot;&gt;&lt;a href=&quot;#（一）Region概述&quot; class=&quot;headerlink&quot; title=&quot;（一）Region概述&quot;&gt;&lt;/a&gt;（一）Region概述&lt;/h3&gt;&lt;p&gt;Region（区域）是封闭的，可通过关联Path（不封闭图形）来判断
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>Android View之MotionEvent</title>
    <link href="http://hawkyAndroid.github.io/2018/12/11/summary-view-motionevent/"/>
    <id>http://hawkyAndroid.github.io/2018/12/11/summary-view-motionevent/</id>
    <published>2018-12-11T14:26:35.000Z</published>
    <updated>2018-12-15T17:30:42.024Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）MotionEvent-单点触控"><a href="#（一）MotionEvent-单点触控" class="headerlink" title="（一）MotionEvent 单点触控"></a>（一）MotionEvent 单点触控</h3><p>event.getAction()：获取事件类型。</p><table><thead><tr><th>事件类型</th><th>说明</th></tr></thead><tbody><tr><td>ACTION_DOWN</td><td>手指按下时触发</td></tr><tr><td>ACTION_MOVE</td><td>手指在屏幕上滑动时(多次)触发</td></tr><tr><td>ACTION_UP</td><td>手指离开屏幕时触发</td></tr><tr><td>ACTION_CANCEL</td><td>手指被上层控件拦截时触发</td></tr></tbody></table><h3 id="（二）MotionEvent-多点触控"><a href="#（二）MotionEvent-多点触控" class="headerlink" title="（二）MotionEvent 多点触控"></a>（二）MotionEvent 多点触控</h3><p>几个名词解释：</p><pre><code>Action：具体的事件类型pointerIndex：指针（手指）的索引，用于获取具体事件（如：手指的坐标位置）。注意：落下手指时前面有空缺会优先填补空缺; 而手指抬起时后面的也会向前补位。pointerId：指针（手指）的唯一标识ID，用于识别是哪个手指。--推荐注意：pointerId在手指按下和抬起之间ID始终不变。举例说明：0x 00 00 01 0501 表示pointerIndex，05 表示Action</code></pre><p>event.getActionMasked()：获取事件类型。</p><table><thead><tr><th>事件类型</th><th>说明</th></tr></thead><tbody><tr><td>ACTION_DOWN</td><td>第一根手指首次按下时触发</td></tr><tr><td>ACTION_POINTER_DOWN</td><td>其他手指按下时触发</td></tr><tr><td>ACTION_MOVE</td><td>手指在屏幕上滑动时(多次)触发</td></tr><tr><td>ACTION_POINTER_UP</td><td>其他手指抬起时触发</td></tr><tr><td>ACTION_UP</td><td>最后一根手指离开屏幕时触发</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多点触控时获取事件类型（单点触控也可用）</span></span><br><span class="line">event.getActionMasked();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取该事件是哪个指针(手指)产生的（该方法只对DOWN、UP有效）。</span></span><br><span class="line">event.getActionIndex();</span><br><span class="line"><span class="comment">// 获取一个指针(手指)的唯一标识符ID，拿到PointerId用于追踪事件流--推荐。</span></span><br><span class="line"><span class="comment">// 在手指按下和抬起之间ID始终不变</span></span><br><span class="line"><span class="comment">// 参数：这里的pointerIndex就是actionIndex</span></span><br><span class="line">event.getPointerId(<span class="keyword">int</span> pointerIndex);</span><br><span class="line"><span class="comment">// 通过PointerId获取到当前状态下PointIndex，之后通过PointerIndex获取其他内容。</span></span><br><span class="line">event.findPointerIndex(<span class="keyword">int</span> pointerId);</span><br><span class="line"><span class="comment">// 获取在屏幕上指针(手指)的个数。</span></span><br><span class="line">event.getPointerCount();</span><br><span class="line"><span class="comment">// 获取某一个指针(手指)的X坐标</span></span><br><span class="line">event.getX(<span class="keyword">int</span> pointerIndex);</span><br><span class="line"><span class="comment">// 获取某一个指针(手指)的Y坐标</span></span><br><span class="line">event.getY(<span class="keyword">int</span> pointerIndex);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取历史事件集合大小（只记录 ACTION_MOVE 事件，所以单点触控也可以用）</span></span><br><span class="line">event.getHistorySize();</span><br><span class="line"><span class="comment">// 获取第index个手指的第pos个历史事件X坐标</span></span><br><span class="line">event.getHistoricalX(<span class="keyword">int</span> index, <span class="keyword">int</span> pos);</span><br><span class="line"><span class="comment">// 获取第index个手指的第pos个历史事件Y坐标</span></span><br><span class="line">event.getHistoricalY(<span class="keyword">int</span> index, <span class="keyword">int</span> pos);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手指按下时的时间</span></span><br><span class="line">event.getDownTime();</span><br><span class="line"><span class="comment">// 当前事件发生时的时间</span></span><br><span class="line">event.getEventTime();</span><br><span class="line"><span class="comment">// 获取历史事件发生的时间。注意：pos &lt; getHistorySize()</span></span><br><span class="line">event.getHistoricalEventTime(<span class="keyword">int</span> pos);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取第index手指与屏幕的接触面积大小</span></span><br><span class="line">event.getSize(<span class="keyword">int</span> index);</span><br><span class="line"><span class="comment">// 获取历史数据中第index个手指在第pos次事件中的接触面积</span></span><br><span class="line">event.getHistoricalSize(<span class="keyword">int</span> index, <span class="keyword">int</span> pos);</span><br><span class="line"><span class="comment">// 获取第index个手指的压力大小（可能无效）</span></span><br><span class="line">event.getPressure(<span class="keyword">int</span> index);</span><br><span class="line"><span class="comment">// 获取历史数据中第index个手指在第pos次事件中的压力大小（可能无效）</span></span><br><span class="line">event.getHistoricalPressure(<span class="keyword">int</span> index, <span class="keyword">int</span> pos);</span><br></pre></td></tr></table></figure><h3 id="（三）MotionEvent-多点触控实例"><a href="#（三）MotionEvent-多点触控实例" class="headerlink" title="（三）MotionEvent 多点触控实例"></a>（三）MotionEvent 多点触控实例</h3><p>实例1：追踪手指的轨迹<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * View - MultiTouch 追踪手指的轨迹</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 主要通过 event.getPointerId(event.getActionIndex())来识别是哪根手指（注意：从0开始）</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TrackFingerView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录第二根手指的位置</span></span><br><span class="line">    <span class="keyword">private</span> PointF pointF;</span><br><span class="line">    <span class="comment">// 是否存在第二根手指</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isPointer2 = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TrackFingerView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TrackFingerView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        pointF = <span class="keyword">new</span> PointF(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> index = event.getActionIndex();</span><br><span class="line">        <span class="keyword">switch</span> (event.getActionMasked()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_POINTER_DOWN:<span class="comment">// 第N根手指按下（N&gt;1）</span></span><br><span class="line">                <span class="keyword">if</span> (event.getPointerId(index) == <span class="number">1</span>) &#123;<span class="comment">// pointerId从0开始</span></span><br><span class="line">                    isPointer2 = <span class="keyword">true</span>;</span><br><span class="line">                    pointF.set(event.getX(), event.getY());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_POINTER_UP:<span class="comment">// 第N根手指抬起（N&gt;1）</span></span><br><span class="line">                <span class="keyword">if</span> (event.getPointerId(index) == <span class="number">1</span>) &#123;</span><br><span class="line">                    isPointer2 = <span class="keyword">false</span>;</span><br><span class="line">                    pointF.set(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                <span class="keyword">if</span> (event.getPointerId(index) == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="comment">// 获取第二根手指的索引</span></span><br><span class="line">                    <span class="keyword">int</span> pointerIndex = event.findPointerIndex(<span class="number">1</span>);</span><br><span class="line">                    <span class="comment">// 通过索引来获取第二根手指的坐标</span></span><br><span class="line">                    pointF.set(event.getX(pointerIndex), event.getY(pointerIndex));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:<span class="comment">// 最后一根手指抬起</span></span><br><span class="line">                isPointer2 = <span class="keyword">false</span>;</span><br><span class="line">                pointF.set(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        postInvalidateDelayed(<span class="number">20L</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isPointer2) &#123;</span><br><span class="line">            mPaint.setColor(Color.RED);</span><br><span class="line">            mPaint.setStyle(Paint.Style.FILL);</span><br><span class="line">            canvas.drawCircle(pointF.x, pointF.y, <span class="number">300</span>, mPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>实例2：可拖动的图片<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * View - MultiTouch 可拖动的图片(这里只处理第一根手指)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DragBitmapView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Bitmap mBitmap;</span><br><span class="line">    <span class="comment">// 图片所在区域</span></span><br><span class="line">    <span class="keyword">private</span> RectF mRectF;</span><br><span class="line">    <span class="comment">// 记录最后一个点</span></span><br><span class="line">    <span class="keyword">private</span> PointF mLastPoint;</span><br><span class="line">    <span class="comment">// 用于数值转换</span></span><br><span class="line">    <span class="keyword">private</span> Matrix mMatrix;</span><br><span class="line">    <span class="comment">// 是否可以拖动</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> enableDrag;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DragBitmapView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DragBitmapView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        BitmapFactory.Options options = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        options.inSampleSize = <span class="number">2</span>;<span class="comment">// 缩小2倍</span></span><br><span class="line">        mBitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_logo, options);</span><br><span class="line"></span><br><span class="line">        mRectF = <span class="keyword">new</span> RectF(<span class="number">0</span>, <span class="number">0</span>, mBitmap.getWidth(), mBitmap.getHeight());</span><br><span class="line">        mLastPoint = <span class="keyword">new</span> PointF();</span><br><span class="line">        mMatrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> index = event.getActionIndex();</span><br><span class="line">        <span class="keyword">switch</span> (event.getActionMasked()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_POINTER_DOWN:</span><br><span class="line">                <span class="comment">// 第一根手指 在图片区域内 按下</span></span><br><span class="line">                <span class="keyword">if</span> (event.getPointerId(index) == <span class="number">0</span> &amp;&amp; mRectF.contains(event.getX(), event.getY())) &#123;</span><br><span class="line">                    enableDrag = <span class="keyword">true</span>;</span><br><span class="line">                    mLastPoint.set(event.getX(), event.getY());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                <span class="keyword">if</span> (enableDrag) &#123;</span><br><span class="line">                    <span class="keyword">int</span> pointerIndex = event.findPointerIndex(<span class="number">0</span>);</span><br><span class="line">                    <span class="comment">// 图片平移后第一根手指最后一个点的坐标</span></span><br><span class="line">                    mMatrix.postTranslate(event.getX(pointerIndex) - mLastPoint.x, event.getY(pointerIndex) - mLastPoint.y);</span><br><span class="line">                    mLastPoint.set(event.getX(pointerIndex), event.getY(pointerIndex));</span><br><span class="line">                    <span class="comment">// 更新图片区域</span></span><br><span class="line">                    mRectF.set(<span class="number">0</span>, <span class="number">0</span>, mBitmap.getWidth(), mBitmap.getHeight());</span><br><span class="line">                    mMatrix.mapRect(mRectF);</span><br><span class="line">                    invalidate();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_POINTER_UP:</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                <span class="comment">// 第一根手指 释放时复位</span></span><br><span class="line">                <span class="keyword">if</span> (event.getPointerId(index) == <span class="number">0</span>) &#123;</span><br><span class="line">                    enableDrag = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        canvas.drawBitmap(mBitmap, mMatrix, mPaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）MotionEvent-单点触控&quot;&gt;&lt;a href=&quot;#（一）MotionEvent-单点触控&quot; class=&quot;headerlink&quot; title=&quot;（一）MotionEvent 单点触控&quot;&gt;&lt;/a&gt;（一）MotionEvent 单点触控&lt;/h3&gt;&lt;p&gt;ev
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>Activity横竖屏切换</title>
    <link href="http://hawkyAndroid.github.io/2018/12/06/summary-activity-land-port/"/>
    <id>http://hawkyAndroid.github.io/2018/12/06/summary-activity-land-port/</id>
    <published>2018-12-06T15:12:35.000Z</published>
    <updated>2018-12-06T17:38:10.116Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）configChanges属性"><a href="#（一）configChanges属性" class="headerlink" title="（一）configChanges属性"></a>（一）configChanges属性</h3><p>android:configChanges 属性可以设置多个值，中间使用竖线分割。</p><pre><code>举例1：横竖屏切换时不重启Activity的生命周期(只会执行onConfigurationChanged方法)，则需要配置 android:configChanges=&quot;orientation|keyboardHidden|screenSize&quot;；举例2：禁用横竖屏（只显示竖屏），则需要配置 android:screenOrientation=&quot;portrait&quot;</code></pre><p>  1&gt; configChanges的属性值说明如下：</p><pre><code>1.orientation 屏幕在纵向和横向间旋转2.keyboardHidden 键盘显示或隐藏3.screenSize 屏幕大小改变了4.fontScale 用户变更了首选的字体大小5.locale 用户选择了不同的语言设定6.keyboard 键盘类型变更7.touchscreen或navigation 键盘或导航方式变化(基本不用)</code></pre><p>2&gt; screenOrientation的属性值说明如下：</p><pre><code>1.unspecified 默认值，由系统判断状态自动切换2.landscape 横屏3.portrait 竖屏4.user 用户当前设置的orientation值5.behind 下一个要显示的Activity的orientation值6.sensor 使用传感器的方向7.nosensor 不使用传感器 基本等同于unspecified</code></pre><h3 id="（二）onConfigurationChanged方法"><a href="#（二）onConfigurationChanged方法" class="headerlink" title="（二）onConfigurationChanged方法"></a>（二）onConfigurationChanged方法</h3><p>横竖屏切换时会先回调该方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConfigurationChanged</span><span class="params">(Configuration newConfig)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onConfigurationChanged(newConfig);</span><br><span class="line">    String message = newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE ? <span class="string">"屏幕设置为：横屏"</span> : <span class="string">"屏幕设置为：竖屏"</span>;</span><br><span class="line">    Toast.makeText(<span class="keyword">this</span>, message, Toast.LENGTH_LONG).show();</span><br><span class="line">    <span class="comment">// 需要重新加载资源布局、初始化组件（注意回收资源）并设置监听</span></span><br><span class="line">    <span class="keyword">if</span> (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE) &#123;</span><br><span class="line">        <span class="comment">// res/layout-land/activity_main_land.xml</span></span><br><span class="line">        setContentView(R.layout.activity_main_land);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// res/layout-land/activity_main_port.xml</span></span><br><span class="line">        setContentView(R.layout.activity_main_port);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 先回收资源在初始化</span></span><br><span class="line">    initView();</span><br><span class="line">    setListener();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="（三）Activity横竖屏切换实例"><a href="#（三）Activity横竖屏切换实例" class="headerlink" title="（三）Activity横竖屏切换实例"></a>（三）Activity横竖屏切换实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Button btn_1;</span><br><span class="line">    <span class="keyword">private</span> View view_1;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">// 横竖屏切换分为两种(含加载相同或不同的布局)：</span></span><br><span class="line">        <span class="comment">// 1、重启生命周期。</span></span><br><span class="line">        <span class="comment">// 2、不重启生命周期：需要配置</span></span><br><span class="line">        <span class="keyword">if</span> (ScreenUtil.isScreenPortrait(<span class="keyword">this</span>)) &#123;</span><br><span class="line">            setContentView(R.layout.activity_main_port);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            setContentView(R.layout.activity_main_land);</span><br><span class="line">        &#125;</span><br><span class="line">        initView();</span><br><span class="line">        setListener();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        recycleResources();</span><br><span class="line">        <span class="keyword">if</span> (ScreenUtil.isScreenPortrait(<span class="keyword">this</span>)) &#123;</span><br><span class="line">            view_1 = findViewById(R.id.view_1);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            btn_1 = findViewById(R.id.btn_1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setListener</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ScreenUtil.isScreenPortrait(<span class="keyword">this</span>)) &#123;</span><br><span class="line">            view_1.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            btn_1.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">recycleResources</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        view_1 = <span class="keyword">null</span>;</span><br><span class="line">        btn_1 = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveInstanceState</span><span class="params">(Bundle outState, PersistableBundle outPersistentState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSaveInstanceState(outState, outPersistentState);</span><br><span class="line">        outState.putString(<span class="string">"name"</span>, <span class="string">"张三"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重启生命周期时无需重写该方法（删除即可）。</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConfigurationChanged</span><span class="params">(Configuration newConfig)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onConfigurationChanged(newConfig);</span><br><span class="line">        String message = newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE ? <span class="string">"屏幕设置为：横屏"</span> : <span class="string">"屏幕设置为：竖屏"</span>;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, message, Toast.LENGTH_LONG).show();</span><br><span class="line">        <span class="comment">// 需要重新加载资源布局、初始化组件（注意回收资源）并设置监听</span></span><br><span class="line">        <span class="keyword">if</span> (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE) &#123;</span><br><span class="line">            setContentView(R.layout.activity_main_land);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            setContentView(R.layout.activity_main_port);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 先回收资源在初始化</span></span><br><span class="line">        initView();</span><br><span class="line">        setListener();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.view_1:</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"竖屏View1被点击"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btn_1:</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"横屏按钮被点击"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）configChanges属性&quot;&gt;&lt;a href=&quot;#（一）configChanges属性&quot; class=&quot;headerlink&quot; title=&quot;（一）configChanges属性&quot;&gt;&lt;/a&gt;（一）configChanges属性&lt;/h3&gt;&lt;p&gt;androi
      
    
    </summary>
    
      <category term="Android开发" scheme="http://hawkyAndroid.github.io/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android开发" scheme="http://hawkyAndroid.github.io/tags/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Android事件分发机制</title>
    <link href="http://hawkyAndroid.github.io/2018/11/29/summary-android-dispatch-event/"/>
    <id>http://hawkyAndroid.github.io/2018/11/29/summary-android-dispatch-event/</id>
    <published>2018-11-29T15:12:35.000Z</published>
    <updated>2018-12-12T13:31:19.536Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）基本概念"><a href="#（一）基本概念" class="headerlink" title="（一）基本概念"></a>（一）基本概念</h3><p>①、概述： Android里的View都是树形结构的，因此可能会出现多个View重叠的情况。当我们点击或滑动屏幕上重叠的部分的时候，这些View默认都可以响应。如果此时我们只想要某个View处理（响应/消费）这个事件，这时就可以用事件分发机制去解决这个问题。<br>需要说明的是，Android的事件分发机制是一种典型的责任链模式，可参考<a href="https://blog.csdn.net/lhy_ycu/article/details/40018231" target="_blank" rel="noopener">责任链模式详解</a>。</p><p>②、事件的分发、拦截、消费(响应)</p><table><thead><tr><th>流程</th><th>对应方法</th><th>Activity</th><th>ViewGroup</th><th>View</th></tr></thead><tbody><tr><td>分发</td><td>dispatchTouchEvent</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>拦截</td><td>onInterceptTouchEvent</td><td>不支持</td><td>支持</td><td>不支持</td></tr><tr><td>消费</td><td>onTouchEvent</td><td>支持</td><td>支持</td><td>支持</td></tr></tbody></table><p>  ③、方法说明：<br>  Android中触摸事件传递过程中最重要的是dispatchTouchEvent()、onInterceptTouchEvent()和onTouchEvent()方法。<br>其中：dispatchTouchEvent 是事件分发机制中的核心，所有的事件(包括点击、长按、触摸等)调度都归它管。</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 事件分发。一般不用重写。</span></span><br><span class="line"><span class="comment">// 执行super.dispatchTouchEvent(ev)表示事件向下分发并等待事件处理(消费)结果回传。</span></span><br><span class="line"><span class="comment">// 注意：如果当前控件的onInterceptTouchEvent()为true则表示事件不再往下继续传递，</span></span><br><span class="line"><span class="comment">// 此时交由自己onTouchEvent处理(消费)并将自己处理的结果回传给自己的dispatchTouchEvent，然后回传至上层控件。</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.dispatchTouchEvent(ev);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 事件拦截。返回值决定了事件的传递方向。（仅判断事件是否需要拦截即可）</span></span><br><span class="line"><span class="comment">// 返回为false时事件会传递给子控件（默认为false 不拦截）;</span></span><br><span class="line"><span class="comment">// 返回值为true时事件会传递给当前控件的onTouchEvent()处理（消费）</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(MotionEvent ev)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 事件处理(消费)。处理的结果回传给自己的dispatchTouchEvent，然后再将结果回传至上层控件。</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span></span>;</span><br></pre></td></tr></table></figure><p>  ④、Touch触摸事件：</p><pre><code>Android中的Touch事件都是从ACTION_DOWN开始的：单手指操作：ACTION_DOWN---ACTION_MOVE----ACTION_UP多手指操作：ACTION_DOWN---ACTION_POINTER_DOWN---ACTION_MOVE--ACTION_POINTER_UP---ACTION_UP.事件的调度顺序是：onTouchListener &gt; onTouchEvent &gt; onLongClickListener &gt; onClickListener需要特别指出的是：如果两个View(View1、View2)有重叠且View2(在上层)遮挡了View1的部分，则当手指点击时：1&gt; 仅当View1可点击时，事件将分配给View1，被View2遮挡的部分仍是View1可点击的区域。2&gt; 仅当View2可点击时，事件将分配给View2。3&gt; 当View1、View2都可以点击时，事件将分配给View2，View1收不到事件。</code></pre><p>⑤、事件总结：</p><pre><code>1、onTouchEvent包含了onClickListener和onLongClickListener事件。2、View的dispatchTouchEvent主要用于调度自身的监听器和onTouchEvent。3、给View注册OnTouchListener监听不会影响View的可点击状态，只要View是可点击的就会消费事件。4、若给ViewGroup及其ChildView同时注册了事件监听器(如：onClick)，则ChildView会被消费，ViewGroup收不到事件(无响应)。5、如果当前正在处理的事件被上层View拦截，会收到一个ACTION_CANCEL，后续事件不会再传递过来。6、为避免一次完整的事件(如：onClick包含ACTION_DOWN、ACTION_UP)分配给不同的View可能造成事件无法被正常消费，因此所有事件都应该被给同一个View消费。</code></pre><h3 id="（二）实例演示"><a href="#（二）实例演示" class="headerlink" title="（二）实例演示"></a>（二）实例演示</h3><pre><code>事件分发：Activity -&gt; RootView -&gt; ViewGroupA -&gt; View1事件回传：Activity &lt;- RootView &lt;- ViewGroupA &lt;- View1</code></pre><p>  MainActivity</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">        DebugLog.e(<span class="string">"MainActivity事件分发开始"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">super</span>.dispatchTouchEvent(ev);</span><br><span class="line">        DebugLog.e(<span class="string">"MainActivity事件回传结束"</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">super</span>.onTouchEvent(event);</span><br><span class="line">        DebugLog.e(<span class="string">"MainActivity事件消费---"</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  RootView</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RootView</span> <span class="keyword">extends</span> <span class="title">RelativeLayout</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RootView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RootView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">        DebugLog.e(<span class="string">"RootView事件分发"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">super</span>.dispatchTouchEvent(ev);</span><br><span class="line">        DebugLog.e(<span class="string">"RootView事件回传，"</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">super</span>.onInterceptTouchEvent(ev);</span><br><span class="line">        DebugLog.e(<span class="string">"RootView事件拦截---"</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">super</span>.onTouchEvent(event);</span><br><span class="line">        DebugLog.e(<span class="string">"RootView事件消费---"</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  ViewGroupA<br>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewGroupA</span> <span class="keyword">extends</span> <span class="title">RelativeLayout</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ViewGroupA</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ViewGroupA</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">        DebugLog.e(<span class="string">"ViewGroupA事件分发"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">super</span>.dispatchTouchEvent(ev);</span><br><span class="line">        DebugLog.e(<span class="string">"ViewGroupA事件回传，"</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">super</span>.onInterceptTouchEvent(ev);</span><br><span class="line">        DebugLog.e(<span class="string">"ViewGroupA事件拦截---"</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">super</span>.onTouchEvent(event);</span><br><span class="line">        DebugLog.e(<span class="string">"ViewGroupA事件消费---"</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  View1<br>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">View1</span> <span class="keyword">extends</span> <span class="title">View2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">View1</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">View1</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">        DebugLog.e(<span class="string">"View1事件分发"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">super</span>.dispatchTouchEvent(ev);</span><br><span class="line">        DebugLog.e(<span class="string">"View1事件回传，"</span> + result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">super</span>.onTouchEvent(event);<span class="comment">//</span></span><br><span class="line">        DebugLog.e(<span class="string">"View1事件消费---"</span> + result);</span><br><span class="line"><span class="comment">//        switch (event.getAction()) &#123;</span></span><br><span class="line"><span class="comment">//            case MotionEvent.ACTION_DOWN:</span></span><br><span class="line"><span class="comment">//                DebugLog.e("View1按下...");</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case MotionEvent.ACTION_MOVE:</span></span><br><span class="line"><span class="comment">//                DebugLog.e("View1移动...");</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case MotionEvent.ACTION_UP:</span></span><br><span class="line"><span class="comment">//                DebugLog.e("View1释放...");</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  打印结果如下</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[dispatchTouchEvent:<span class="number">109</span>]MainActivity事件分发开始</span><br><span class="line">[dispatchTouchEvent:<span class="number">26</span>]RootView事件分发</span><br><span class="line">[onInterceptTouchEvent:<span class="number">35</span>]RootView事件拦截---<span class="keyword">false</span></span><br><span class="line">[dispatchTouchEvent:<span class="number">25</span>]ViewGroupA事件分发</span><br><span class="line">[onInterceptTouchEvent:<span class="number">34</span>]ViewGroupA事件拦截---<span class="keyword">false</span></span><br><span class="line">[dispatchTouchEvent:<span class="number">24</span>]View1事件分发</span><br><span class="line">[onTouchEvent:<span class="number">33</span>]View1事件消费---<span class="keyword">false</span></span><br><span class="line">[dispatchTouchEvent:<span class="number">26</span>]View1事件回传，<span class="keyword">false</span></span><br><span class="line">[onTouchEvent:<span class="number">41</span>]ViewGroupA事件消费---<span class="keyword">false</span></span><br><span class="line">[dispatchTouchEvent:<span class="number">27</span>]ViewGroupA事件回传，<span class="keyword">false</span></span><br><span class="line">[onTouchEvent:<span class="number">42</span>]RootView事件消费---<span class="keyword">false</span></span><br><span class="line">[dispatchTouchEvent:<span class="number">28</span>]RootView事件回传，<span class="keyword">false</span></span><br><span class="line">[onTouchEvent:<span class="number">118</span>]MainActivity事件消费---<span class="keyword">false</span></span><br><span class="line">[dispatchTouchEvent:<span class="number">111</span>]MainActivity事件回传结束</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）基本概念&quot;&gt;&lt;a href=&quot;#（一）基本概念&quot; class=&quot;headerlink&quot; title=&quot;（一）基本概念&quot;&gt;&lt;/a&gt;（一）基本概念&lt;/h3&gt;&lt;p&gt;①、概述： Android里的View都是树形结构的，因此可能会出现多个View重叠的情况。当我们点
      
    
    </summary>
    
      <category term="Android开发" scheme="http://hawkyAndroid.github.io/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android开发" scheme="http://hawkyAndroid.github.io/tags/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Android View之Camera</title>
    <link href="http://hawkyAndroid.github.io/2018/11/26/summary-view-camera/"/>
    <id>http://hawkyAndroid.github.io/2018/11/26/summary-view-camera/</id>
    <published>2018-11-26T12:02:35.000Z</published>
    <updated>2018-11-27T14:14:58.781Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）Camera概述"><a href="#（一）Camera概述" class="headerlink" title="（一）Camera概述"></a>（一）Camera概述</h3><pre><code>本篇中的Camera是graphic包下的Camera，是专业给View拍照的(Camera)相机。View的摄像机默认位置在屏幕左上角(0, 0, -8)，而且距离屏幕有一段距离。几个概念：①、Camera使用的三维(3D)坐标系是左手坐标系。即左手手臂指向的是X轴正方向，四指弯曲指向的是Y轴正方向(刚好与2D的Y轴正方向相反)，展开的大拇指指向的是Z轴正方向。②、三维投影是将三维空间中的点映射到二维平面上的方法。</code></pre><h3 id="（二）Camera的用法"><a href="#（二）Camera的用法" class="headerlink" title="（二）Camera的用法"></a>（二）Camera的用法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存当前状态</span></span><br><span class="line">camera.save();</span><br><span class="line"><span class="comment">// 恢复当前状态</span></span><br><span class="line">camera.restore();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置Camera在左手坐标系(3D)的对应位置。</span></span><br><span class="line"><span class="comment">// 注意：这里Camera平移location一个单位相当于translate 72像素。</span></span><br><span class="line">camera.setLocation(<span class="keyword">float</span> x, <span class="keyword">float</span> y, <span class="keyword">float</span> z);</span><br><span class="line"><span class="comment">// 获取Camera在左手坐标系(3D)的对应位置。</span></span><br><span class="line"><span class="keyword">float</span> locationX = camera.getLocationX();</span><br><span class="line"><span class="keyword">float</span> locationY = camera.getLocationY();</span><br><span class="line"><span class="keyword">float</span> locationZ = camera.getLocationZ();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算当前矩阵对应的状态并赋值给参数matrix。</span></span><br><span class="line">camera.getMatrix(Matrix matrix);</span><br><span class="line"><span class="comment">// 计算当前矩阵对应的状态并将计算后的矩阵应用到指定的canvas上。</span></span><br><span class="line">camera.applyToCanvas(Canvas canvas);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// x、将Camera沿X轴正方向平移(与Matrix在沿X轴方向平移一致)。</span></span><br><span class="line"><span class="comment">// y、将Camera沿Y轴正方向平移(注意这里指向的正上方，与Matrix在沿Y轴方向平移相反)。</span></span><br><span class="line"><span class="comment">// z、将Camera沿Z轴正方向平移(近大-Z 远小-XY、视线相交)。</span></span><br><span class="line">camera.translate(<span class="keyword">float</span> x, <span class="keyword">float</span> y, <span class="keyword">float</span> z);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意：Camera旋转中心默认是坐标原点。</span></span><br><span class="line"><span class="comment">// 将Camera同时绕X，Y，Z轴旋转，旋转角度为(x,y,z)。</span></span><br><span class="line">camera.rotate(<span class="keyword">float</span> x, <span class="keyword">float</span> y, <span class="keyword">float</span> z);</span><br><span class="line"><span class="comment">// 将Camera同时绕X轴旋转，旋转角度为deg。</span></span><br><span class="line">camera.rotateX(<span class="keyword">float</span> deg);</span><br><span class="line"><span class="comment">// 将Camera同时绕Y轴旋转，旋转角度为deg。</span></span><br><span class="line">camera.rotateY(<span class="keyword">float</span> deg);</span><br><span class="line"><span class="comment">// 将Camera同时绕Z轴旋转，旋转角度为deg。</span></span><br><span class="line">camera.rotateZ(<span class="keyword">float</span> deg);</span><br></pre></td></tr></table></figure><h3 id="（三）Camera的实例"><a href="#（三）Camera的实例" class="headerlink" title="（三）Camera的实例"></a>（三）Camera的实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Camera 3D旋转动画(绕图片中心旋转)</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 参考：https://android.googlesource.com/platform/development/+/master/samples/ApiDemos/src/com/example/android/apis/animation/Rotate3dAnimation.java</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * http://www.gcssloop.com/customview/matrix-3d-camera</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 动画之间旋转视图在Y轴上的两个指定角度。</span></span><br><span class="line"><span class="comment"> * 这个动画还增加了平移在Z轴(深度)改善效果。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rotate3dAnimation</span> <span class="keyword">extends</span> <span class="title">Animation</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">float</span> mFromDegrees;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">float</span> mToDegrees;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">float</span> mCenterX;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">float</span> mCenterY;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">float</span> mDepthZ;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> mReverse;</span><br><span class="line">    <span class="keyword">private</span> Camera mCamera;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mDensity;<span class="comment">// Pixel density</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context     context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fromDegrees the start angle of the 3D rotation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> toDegrees   the end angle of the 3D rotation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> centerX     the X center of the 3D rotation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> centerY     the Y center of the 3D rotation</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> reverse     true if the translation should be reversed, false otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Rotate3dAnimation</span><span class="params">(Context context, <span class="keyword">float</span> fromDegrees, <span class="keyword">float</span> toDegrees,</span></span></span><br><span class="line"><span class="function"><span class="params">                             <span class="keyword">float</span> centerX, <span class="keyword">float</span> centerY, <span class="keyword">float</span> depthZ, <span class="keyword">boolean</span> reverse)</span> </span>&#123;</span><br><span class="line">        mFromDegrees = fromDegrees;</span><br><span class="line">        mToDegrees = toDegrees;</span><br><span class="line">        mCenterX = centerX;</span><br><span class="line">        mCenterY = centerY;</span><br><span class="line">        mDepthZ = depthZ;</span><br><span class="line">        mReverse = reverse;</span><br><span class="line">        mDensity = context.getResources().getDisplayMetrics().density;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(<span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">int</span> parentWidth, <span class="keyword">int</span> parentHeight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.initialize(width, height, parentWidth, parentHeight);</span><br><span class="line">        mCamera = <span class="keyword">new</span> Camera();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">applyTransformation</span><span class="params">(<span class="keyword">float</span> interpolatedTime, Transformation t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">float</span> fromDegrees = mFromDegrees;</span><br><span class="line">        <span class="comment">// 旋转角度 = 起始角度 + 增长角度</span></span><br><span class="line">        <span class="keyword">float</span> degrees = fromDegrees + ((mToDegrees - fromDegrees) * interpolatedTime);</span><br><span class="line">        DebugLog.e(<span class="string">"interpolatedTime："</span> + interpolatedTime + <span class="string">"， degrees："</span> + degrees);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">float</span> centerX = mCenterX;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">float</span> centerY = mCenterY;</span><br><span class="line">        <span class="keyword">final</span> Camera camera = mCamera;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Matrix matrix = t.getMatrix();</span><br><span class="line"></span><br><span class="line">        camera.save();</span><br><span class="line">        <span class="comment">//  Adds a translation on the Z axis (depth) to improve the effect</span></span><br><span class="line">        <span class="keyword">if</span> (mReverse) &#123;</span><br><span class="line">            camera.translate(<span class="number">0.0f</span>, <span class="number">0.0f</span>, mDepthZ * interpolatedTime);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            camera.translate(<span class="number">0.0f</span>, <span class="number">0.0f</span>, mDepthZ * (<span class="number">1.0f</span> - interpolatedTime));</span><br><span class="line">        &#125;</span><br><span class="line">        camera.rotateY(degrees);</span><br><span class="line">        camera.getMatrix(matrix);</span><br><span class="line">        DebugLog.e(<span class="string">"matrix---------------1"</span> + matrix.toShortString());</span><br><span class="line">        camera.restore();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 修改MPERSP_0、MPERSP_1的值</span></span><br><span class="line">        <span class="keyword">float</span>[] values = <span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">9</span>];</span><br><span class="line">        matrix.getValues(values);</span><br><span class="line">        values[<span class="number">6</span>] = values[<span class="number">6</span>] / mDensity;</span><br><span class="line">        values[<span class="number">7</span>] = values[<span class="number">7</span>] / mDensity;</span><br><span class="line">        matrix.setValues(values);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调节中心点的位置</span></span><br><span class="line">        matrix.preTranslate(-centerX, -centerY);</span><br><span class="line">        matrix.postTranslate(centerX, centerY);</span><br><span class="line"></span><br><span class="line">        DebugLog.e(<span class="string">"matrix---------------2："</span> + matrix.toShortString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  // 测试3D动画</span></span><br><span class="line"><span class="comment">final float centerX = img.getWidth() / 2.0f;</span></span><br><span class="line"><span class="comment">final float centerY = img.getHeight() / 2.0f;</span></span><br><span class="line"><span class="comment">Rotate3dAnimation animation = new Rotate3dAnimation(MainActivity.this, 0, 180, centerX, centerY, 0, true);</span></span><br><span class="line"><span class="comment">animation.setDuration(2000L);</span></span><br><span class="line"><span class="comment">animation.setFillAfter(true);// 保持旋转动画结束后的位置</span></span><br><span class="line"><span class="comment">animation.setInterpolator(new LinearInterpolator());</span></span><br><span class="line"><span class="comment">img.startAnimation(animation);</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）Camera概述&quot;&gt;&lt;a href=&quot;#（一）Camera概述&quot; class=&quot;headerlink&quot; title=&quot;（一）Camera概述&quot;&gt;&lt;/a&gt;（一）Camera概述&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;本篇中的Camera是graphic包下的Camer
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
</feed>
