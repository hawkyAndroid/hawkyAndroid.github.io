<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hawky的博客</title>
  
  <subtitle>行到水穷处，坐看云起时</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hawkyAndroid.github.io/"/>
  <updated>2019-09-02T15:11:25.272Z</updated>
  <id>http://hawkyAndroid.github.io/</id>
  
  <author>
    <name>Hawky</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kotlin之集合</title>
    <link href="http://hawkyAndroid.github.io/2019/09/02/summary-kotlin-collection/"/>
    <id>http://hawkyAndroid.github.io/2019/09/02/summary-kotlin-collection/</id>
    <published>2019-09-02T14:32:07.000Z</published>
    <updated>2019-09-02T15:11:25.272Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Kotlin集合"><a href="#Kotlin集合" class="headerlink" title="Kotlin集合"></a>Kotlin集合</h2><p>Kotlin中的集合用于在一个单元中存储一组相关对象，Kotlin集合分为不可变集合和可变集合。</p><h4 id="集合的主要接口和类"><a href="#集合的主要接口和类" class="headerlink" title="集合的主要接口和类:"></a>集合的主要接口和类:</h4><table><thead><tr><th style="text-align:center">List</th><th style="text-align:center">Map</th><th style="text-align:center">Set</th></tr></thead><tbody><tr><td style="text-align:center">List接口</td><td style="text-align:center">Map接口</td><td style="text-align:center">Set接口</td></tr><tr><td style="text-align:center">MutableList接口</td><td style="text-align:center">MutableMap接口</td><td style="text-align:center">MutableSet接口</td></tr><tr><td style="text-align:center">ArrayList类</td><td style="text-align:center">HashMap类</td><td style="text-align:center">HashSet类</td></tr></tbody></table><h2 id="（一）List"><a href="#（一）List" class="headerlink" title="（一）List"></a>（一）List</h2><h3 id="1-1-gt-List接口（不可变，只读）"><a href="#1-1-gt-List接口（不可变，只读）" class="headerlink" title="1.1&gt; List接口（不可变，只读）"></a>1.1&gt; List接口（不可变，只读）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// read-only</span></span><br><span class="line">val list = listOf&lt;String&gt;(<span class="string">"aa"</span>, <span class="string">"bb"</span>, <span class="string">"cc"</span>)</span><br><span class="line"><span class="keyword">for</span> (item in list.indices) &#123;</span><br><span class="line">    println(<span class="string">"item=$item"</span>)</span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"*******\n"</span>)</span><br><span class="line">println(list.isEmpty())<span class="comment">// false</span></span><br><span class="line">println(list.size)<span class="comment">// 3</span></span><br><span class="line">println(list[<span class="number">1</span>])<span class="comment">// bb</span></span><br><span class="line">println(list.contains(<span class="string">"aa"</span>))<span class="comment">// true</span></span><br><span class="line">println(list.containsAll(listOf(<span class="string">"aa"</span>, <span class="string">"bb"</span>)))<span class="comment">// true</span></span><br><span class="line">println(list.indexOf(<span class="string">"cc"</span>))<span class="comment">// 2</span></span><br><span class="line">println(list.lastIndexOf(<span class="string">"dd"</span>))<span class="comment">// -1</span></span><br><span class="line">println(<span class="string">"*******\n"</span>)</span><br><span class="line">val it = list.iterator()</span><br><span class="line"><span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">    println(it.next())</span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"*******\n"</span>)</span><br><span class="line">val listIt = list.listIterator()</span><br><span class="line"><span class="keyword">while</span> (listIt.hasNext()) &#123;</span><br><span class="line">    println(listIt.next())</span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"*******\n"</span>)</span><br><span class="line">val subList = list.subList(<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">subList.forEach &#123;</span><br><span class="line">    println(it)<span class="comment">// aa bb</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-gt-MutableList接口（可变，可读写）"><a href="#1-2-gt-MutableList接口（可变，可读写）" class="headerlink" title="1.2&gt; MutableList接口（可变，可读写）"></a>1.2&gt; MutableList接口（可变，可读写）</h3><p>MutableList的元素遵循插入顺序来排序，并与数组具有相同的索引号。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">val mutableList = mutableListOf&lt;Any&gt;(<span class="string">'A'</span>, <span class="string">"a"</span>, <span class="number">1</span>)</span><br><span class="line">mutableList.add(<span class="string">"b"</span>)</span><br><span class="line"><span class="keyword">for</span> (item in mutableList) &#123;</span><br><span class="line">    println(item)<span class="comment">// A a 1 b</span></span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"********"</span>)</span><br><span class="line">mutableList.removeAt(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> (item in mutableList) &#123;</span><br><span class="line">    println(item)<span class="comment">// A a b</span></span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"********"</span>)</span><br><span class="line">mutableList.remove(<span class="string">"b"</span>)</span><br><span class="line"><span class="keyword">for</span> (item in mutableList) &#123;</span><br><span class="line">    println(item)<span class="comment">// A a</span></span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"********"</span>)</span><br><span class="line">val it = mutableList.iterator()</span><br><span class="line"><span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">    println(it.next())</span><br><span class="line">&#125;</span><br><span class="line">mutableList.retainAll(listOf(<span class="string">"a"</span>))<span class="comment">// 交集 a</span></span><br><span class="line">mutableList.clear()<span class="comment">// 清空集合</span></span><br><span class="line">println(<span class="string">"********"</span>)</span><br><span class="line">mutableList.forEach &#123;</span><br><span class="line">    println(it)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="1-3-gt-ArrayList类（非同步，可读写）"><a href="#1-3-gt-ArrayList类（非同步，可读写）" class="headerlink" title="1.3&gt; ArrayList类（非同步，可读写）"></a>1.3&gt; ArrayList类（非同步，可读写）</h3><p>ArrayList类用于创建动态数组。 这意味着可以根据需要增加或减少ArrayList类的大小。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建Any类型的初始化大小为5的动态列表</span></span><br><span class="line"><span class="comment">// 也可使用arrayListOf&lt;Any&gt;(5)函数</span></span><br><span class="line">val arrayList = ArrayList&lt;Any&gt;(<span class="number">5</span>)</span><br><span class="line">arrayList.add(<span class="string">"aa"</span>)</span><br><span class="line"><span class="comment">// 在特定位置插入元素</span></span><br><span class="line">arrayList.add(<span class="number">1</span>, <span class="string">"bb"</span>)</span><br><span class="line">arrayList.add(<span class="string">"cc"</span>)</span><br><span class="line">println(<span class="string">"arrayList.size=$&#123;arrayList.size&#125;"</span>)<span class="comment">// 3</span></span><br><span class="line">val it = arrayList.iterator()</span><br><span class="line"><span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">    println(<span class="string">"item=$&#123;it.next()&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"--------------"</span>)</span><br><span class="line"><span class="comment">// 插入集合</span></span><br><span class="line">arrayList.addAll(arrayOf(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line">val it2 = arrayList.iterator()</span><br><span class="line"><span class="keyword">while</span> (it2.hasNext()) &#123;</span><br><span class="line">    println(<span class="string">"item=$&#123;it2.next()&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"--------------"</span>)</span><br><span class="line"><span class="comment">// 获取指定位置的集合元素</span></span><br><span class="line">val value2 = arrayList[<span class="number">2</span>]<span class="comment">// 推荐这种写法</span></span><br><span class="line"><span class="comment">// val value2 = arrayList.get(2)</span></span><br><span class="line">println(<span class="string">"value2=$value2"</span>)</span><br><span class="line"><span class="comment">// 列表中第一次出现的指定元素的索引，</span></span><br><span class="line"><span class="comment">// 如果列表中不存在指定的元素，则返回-1</span></span><br><span class="line">val indexCC = arrayList.indexOf(<span class="string">"cc"</span>)</span><br><span class="line">println(<span class="string">"indexCC=$indexCC"</span>)<span class="comment">// 2</span></span><br><span class="line">println(<span class="string">"--------------"</span>)</span><br><span class="line">arrayList.add(<span class="string">"aa"</span>)</span><br><span class="line"><span class="comment">// 返回给定元素的最后一个匹配项，</span></span><br><span class="line"><span class="comment">// 如果列表中不存在给定元素，则返回-1。</span></span><br><span class="line">val lastIndexAA = arrayList.lastIndexOf(<span class="string">"aa"</span>)</span><br><span class="line">println(<span class="string">"lastIndexAA=$lastIndexAA"</span>)<span class="comment">// 6</span></span><br><span class="line">arrayList.remove(<span class="string">"aa"</span>)</span><br><span class="line">println(<span class="string">"--------------"</span>)</span><br><span class="line"><span class="keyword">for</span> (item in arrayList) &#123;</span><br><span class="line">    println(<span class="string">"item=$item"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 清空arrayList集合</span></span><br><span class="line">arrayList.clear()</span><br><span class="line"><span class="comment">// 返回具有此集合元素的Array &lt;Any?&gt;类型的新数组。</span></span><br><span class="line">val array = arrayList.toArray()</span><br></pre></td></tr></table></figure><h2 id="（二）Map"><a href="#（二）Map" class="headerlink" title="（二）Map"></a>（二）Map</h2><h3 id="2-1-gt-Map接口（不可变，只读）"><a href="#2-1-gt-Map接口（不可变，只读）" class="headerlink" title="2.1&gt; Map接口（不可变，只读）"></a>2.1&gt; Map接口（不可变，只读）</h3><p>以键和值对的形式保存数据。 映射的键是唯一的，每个键只保留一个值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化一个Map（大小固定，只读）</span></span><br><span class="line">val map = mapOf&lt;Int, String&gt;(<span class="number">1</span> to <span class="string">"A"</span>, <span class="number">2</span> to <span class="string">"B"</span>, <span class="number">3</span> to <span class="string">"C"</span>)</span><br><span class="line">println(<span class="string">"map.isEmpty()=$&#123;map.isEmpty()&#125;"</span>)<span class="comment">// false</span></span><br><span class="line">println(<span class="string">"map.containsKey()=$&#123;map.containsKey(1)&#125;"</span>)<span class="comment">// true</span></span><br><span class="line">println(<span class="string">"map.size=$&#123;map.size&#125;"</span>)<span class="comment">// 3</span></span><br><span class="line"><span class="comment">// 遍历Map键值对</span></span><br><span class="line"><span class="keyword">for</span> (key in map.keys) &#123;</span><br><span class="line">    println(<span class="string">"$key -&gt; $&#123;map[key]&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"-----------"</span>)</span><br><span class="line"><span class="comment">// 如果map不包含给定键的映射，则返回默认值-1</span></span><br><span class="line">val tValue = map.getOrDefault(<span class="number">3</span>, -<span class="number">1</span>)</span><br><span class="line">println(<span class="string">"tValue=$tValue"</span>)<span class="comment">// C</span></span><br><span class="line">println(<span class="string">"-----------"</span>)</span><br><span class="line"><span class="comment">// 根据Key删除对应的元素</span></span><br><span class="line">val subMap = map.minus(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> (key in subMap.keys) &#123;</span><br><span class="line">    println(<span class="string">"$key -&gt; $&#123;subMap[key]&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"-----------"</span>)</span><br><span class="line"><span class="comment">// 根据Key添加(或修改)对应的元素</span></span><br><span class="line">val plusMap = subMap.plus(Pair(<span class="number">2</span>, <span class="string">"D"</span>))</span><br><span class="line"><span class="keyword">for</span> (key in plusMap.keys) &#123;</span><br><span class="line">    println(<span class="string">"$key -&gt; $&#123;plusMap[key]&#125;"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-gt-MutableMap接口（可变，可读写）"><a href="#2-2-gt-MutableMap接口（可变，可读写）" class="headerlink" title="2.2&gt; MutableMap接口（可变，可读写）"></a>2.2&gt; MutableMap接口（可变，可读写）</h3><p>Kotlin MutableMap是集合框架的接口，它以键和值对的形式保存对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">val mutableMap = mutableMapOf&lt;Int, String&gt;()</span><br><span class="line">mutableMap[<span class="number">1</span>] = <span class="string">"A"</span><span class="comment">// 等价于 mutableMap.put(1,"A")</span></span><br><span class="line">mutableMap[<span class="number">2</span>] = <span class="string">"B"</span></span><br><span class="line">mutableMap[<span class="number">3</span>] = <span class="string">"C"</span></span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line"><span class="keyword">for</span> (key in mutableMap.keys) &#123;</span><br><span class="line">    <span class="comment">// 等价于 mutableMap.get(key)</span></span><br><span class="line">    println(<span class="string">"$key -&gt; $&#123;mutableMap[key]&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 添加（或修改）映射中的键值</span></span><br><span class="line">mutableMap.putAll(mapOf(<span class="number">4</span> to <span class="string">"D"</span>, <span class="number">5</span> to <span class="string">"E"</span>))</span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line"><span class="keyword">for</span> (key in mutableMap.keys) &#123;</span><br><span class="line">    println(<span class="string">"$key -&gt; $&#123;mutableMap[key]&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line">println(<span class="string">"mutableMap.count()=$&#123;mutableMap.count()&#125;"</span>)<span class="comment">// 5</span></span><br><span class="line">println(<span class="string">"mutableMap.containsKey(1)=$&#123;mutableMap.containsKey(1)&#125;"</span>)<span class="comment">// true</span></span><br><span class="line">println(<span class="string">"mutableMap.containsValue(\"A\")=$&#123;mutableMap.containsValue("</span>A<span class="string">")&#125;"</span>)</span><br><span class="line"><span class="comment">// 从映射中删除指定的键及其映射的值。</span></span><br><span class="line"><span class="comment">// 若含有该键则删除成功返回true，否则返回null。</span></span><br><span class="line">println(<span class="string">"mutableMap.remove(1)=$&#123;mutableMap.remove(1)&#125;"</span>)</span><br><span class="line"><span class="comment">// 当且仅当key及其映射的value都存在时，才删除并返回true</span></span><br><span class="line">println(<span class="string">"mutableMap.remove(3,\"C\")=$&#123;mutableMap.remove(3, "</span>C<span class="string">")&#125;"</span>)</span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line"><span class="keyword">for</span> (key in mutableMap.keys) &#123;</span><br><span class="line">    println(<span class="string">"$key -&gt; $&#123;mutableMap[key]&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line">val value = mutableMap.getOrDefault(<span class="number">1</span>, <span class="string">"NA"</span>)</span><br><span class="line">println(<span class="string">"value=$value"</span>)</span><br></pre></td></tr></table></figure><h3 id="2-3-gt-HashMap类（可变，可读写）"><a href="#2-3-gt-HashMap类（可变，可读写）" class="headerlink" title="2.3&gt; HashMap类（可变，可读写）"></a>2.3&gt; HashMap类（可变，可读写）</h3><p>Kotlin HashMap类使用Hash表实现MutableMap接口。 HashMap类的实现不保证键，值和集合数据项目的顺序。<br>hashmapOf()是HashMap类的函数，与HashMap区别是：hashMapOf可以声明时初始化键值，而HashMap不能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 必须指定类型</span></span><br><span class="line">val hashMap = HashMap&lt;Int, String&gt;()</span><br><span class="line">hashMap[<span class="number">1</span>] = <span class="string">"A"</span></span><br><span class="line">hashMap[<span class="number">2</span>] = <span class="string">"B"</span></span><br><span class="line">hashMap[<span class="number">3</span>] = <span class="string">"C"</span></span><br><span class="line">println(<span class="string">"hashMap.size=$&#123;hashMap.size&#125;"</span>)<span class="comment">// 3</span></span><br><span class="line">println(<span class="string">"hashMap.containsKey(1)=$&#123;hashMap.containsKey(1)&#125;"</span>)<span class="comment">// true</span></span><br><span class="line">println(<span class="string">"hashMap.containsValue(\"Q\")=$&#123;hashMap.containsValue("</span>Q<span class="string">")&#125;"</span>)<span class="comment">// false</span></span><br><span class="line">println(<span class="string">"hashMap.isEmpty()=$&#123;hashMap.isEmpty()&#125;"</span>)<span class="comment">// false</span></span><br><span class="line">println(<span class="string">"hashMap.remove(3)=$&#123;hashMap.remove(3)&#125;"</span>)<span class="comment">// 删除成功返回键的映射 C</span></span><br><span class="line">hashMap.replace(<span class="number">2</span>, <span class="string">"W"</span>)<span class="comment">// 更新</span></span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line"><span class="keyword">for</span> (key in hashMap.keys) &#123;</span><br><span class="line">    println(<span class="string">"$key -&gt; $&#123;hashMap[key]&#125;"</span>)</span><br><span class="line">&#125;</span><br><span class="line">hashMap.clear()</span><br><span class="line">println(<span class="string">"hashMap.size=$&#123;hashMap.size&#125;"</span>)<span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// hashMapOf()是HashMap类的函数。</span></span><br><span class="line"><span class="comment">// 与HashMap区别是：hashMapOf可以声明时初始化键值，而HashMap不能</span></span><br><span class="line"><span class="comment">// val hashMap2 = hashMapOf&lt;Int, String&gt;()</span></span><br><span class="line">val hashMap2 = hashMapOf&lt;Int, String&gt;(<span class="number">1</span> to <span class="string">"W"</span>, <span class="number">2</span> to <span class="string">"Q"</span>)</span><br><span class="line">hashMap2[<span class="number">1</span>] = <span class="string">"A"</span></span><br><span class="line">hashMap2[<span class="number">2</span>] = <span class="string">"B"</span></span><br><span class="line">hashMap2[<span class="number">3</span>] = <span class="string">"C"</span></span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line"><span class="keyword">for</span> (key in hashMap2.keys) &#123;</span><br><span class="line">    println(<span class="string">"$key -&gt; $&#123;hashMap2[key]&#125;"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="（三）Set"><a href="#（三）Set" class="headerlink" title="（三）Set"></a>（三）Set</h2><h3 id="3-1-gt-Set接口（不可变，只读）"><a href="#3-1-gt-Set接口（不可变，只读）" class="headerlink" title="3.1&gt; Set接口（不可变，只读）"></a>3.1&gt; Set接口（不可变，只读）</h3><p>Kotlin Set接口是一个通用的无序元素集合，Set接口不支持重复元素。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">val set = setOf(<span class="number">10</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="string">"A"</span>, <span class="string">"B"</span>)</span><br><span class="line">println(<span class="string">"set.size=$&#123;set.size&#125;"</span>)<span class="comment">// 4</span></span><br><span class="line">println(<span class="string">"set.elementAt(3)=$&#123;set.elementAtOrNull(3)&#125;"</span>)<span class="comment">// B</span></span><br><span class="line">println(<span class="string">"set.elementAt(4)=$&#123;set.elementAtOrNull(4)&#125;"</span>)<span class="comment">// null</span></span><br><span class="line">println(<span class="string">"set.contains(\"A\")=$&#123;set.contains("</span>A<span class="string">")&#125;"</span>)<span class="comment">// true</span></span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line"><span class="keyword">for</span> (element in set) &#123;</span><br><span class="line">    <span class="comment">// set不支持重复元素，所以元素10只会打印一次</span></span><br><span class="line">    println(<span class="string">"element=$element"</span>)<span class="comment">// 10 20 "A" "B"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 取差集</span></span><br><span class="line">val minusSet = set.minus(setOf(<span class="number">10</span>, <span class="number">20</span>))</span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line"><span class="keyword">for</span> (element in minusSet) &#123;</span><br><span class="line">    println(<span class="string">"element=$element"</span>)<span class="comment">//  "A" "B"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序</span></span><br><span class="line">val reversedSet = set.reversed()</span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line"><span class="keyword">for</span> (element in reversedSet) &#123;</span><br><span class="line">    println(<span class="string">"element=$element"</span>)<span class="comment">// "B" "A" 20 10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 返回单个元素，如果集合有多个元素或者为空，则返回null。</span></span><br><span class="line">println(<span class="string">"set.singleOrNull()=$&#123;set.singleOrNull()&#125;"</span>)</span><br><span class="line"><span class="comment">// 删除前3个元素</span></span><br><span class="line">val remainSet = reversedSet.drop(<span class="number">3</span>)</span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line"><span class="keyword">for</span> (element in remainSet) &#123;</span><br><span class="line">    println(<span class="string">"element=$element"</span>)<span class="comment">// 10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-gt-MutableSet接口（可变，可读写）"><a href="#3-2-gt-MutableSet接口（可变，可读写）" class="headerlink" title="3.2&gt; MutableSet接口（可变，可读写）"></a>3.2&gt; MutableSet接口（可变，可读写）</h3><p>Kotlin MutableSet接口是一个通用的无序元素集合。MutableSet接口不支持重复元素。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">val mutableSet = mutableSetOf&lt;Any&gt;(<span class="string">'A'</span>, <span class="string">"a"</span>, <span class="number">1</span>)</span><br><span class="line">mutableSet.add(<span class="string">"b"</span>)</span><br><span class="line">println(<span class="string">"mutableSet.size=$&#123;mutableSet.size&#125;"</span>)<span class="comment">// 4</span></span><br><span class="line"><span class="keyword">for</span> (item in mutableSet) &#123;</span><br><span class="line">    println(item)<span class="comment">// A a 1 b</span></span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"********"</span>)</span><br><span class="line"><span class="comment">// 若含有则删除成功返回true</span></span><br><span class="line">println(<span class="string">"mutableSet.remove(1)=$&#123;mutableSet.remove(1)&#125;"</span>)<span class="comment">// true</span></span><br><span class="line">println(<span class="string">"mutableSet.contains(1)=$&#123;mutableSet.contains(1)&#125;"</span>)<span class="comment">// false</span></span><br><span class="line"><span class="keyword">for</span> (item in mutableSet) &#123;</span><br><span class="line">    println(item)<span class="comment">// A a b</span></span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"********"</span>)</span><br><span class="line"><span class="comment">// 删除前两个元素</span></span><br><span class="line">val list = mutableSet.drop(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> (item in list) &#123;</span><br><span class="line">    println(item)<span class="comment">// b</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-gt-HashSet类（可变，可读写）"><a href="#3-3-gt-HashSet类（可变，可读写）" class="headerlink" title="3.3&gt; HashSet类（可变，可读写）"></a>3.3&gt; HashSet类（可变，可读写）</h3><p>Kotlin HashSet是一个集合类，HashSet类使用散列机制存储元素。它不支持重复值，也不保证元素的顺序。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 必须指定类型</span></span><br><span class="line">val hashSet = HashSet&lt;Int&gt;()</span><br><span class="line">hashSet.add(<span class="number">10</span>)</span><br><span class="line">hashSet.add(<span class="number">20</span>)</span><br><span class="line">hashSet.add(<span class="number">30</span>)</span><br><span class="line">println(<span class="string">"set.size=$&#123;hashSet.size&#125;"</span>)<span class="comment">// 4</span></span><br><span class="line">println(<span class="string">"hashSet.elementAt(2)=$&#123;hashSet.elementAtOrNull(2)&#125;"</span>)<span class="comment">// 30</span></span><br><span class="line">println(<span class="string">"hashSet.elementAt(4)=$&#123;hashSet.elementAtOrNull(4)&#125;"</span>)<span class="comment">// null</span></span><br><span class="line">println(<span class="string">"hashSet.remove(20)=$&#123;hashSet.remove(20)&#125;"</span>)<span class="comment">// true</span></span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line"><span class="keyword">for</span> (element in hashSet) &#123;</span><br><span class="line">    println(<span class="string">"element=$element"</span>)<span class="comment">// 10 30</span></span><br><span class="line">&#125;</span><br><span class="line">println(<span class="string">"---------"</span>)</span><br><span class="line">hashSet.clear()</span><br><span class="line">println(<span class="string">"set.size=$&#123;hashSet.size&#125;"</span>)<span class="comment">// 0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Kotlin集合&quot;&gt;&lt;a href=&quot;#Kotlin集合&quot; class=&quot;headerlink&quot; title=&quot;Kotlin集合&quot;&gt;&lt;/a&gt;Kotlin集合&lt;/h2&gt;&lt;p&gt;Kotlin中的集合用于在一个单元中存储一组相关对象，Kotlin集合分为不可变集合和可变集
      
    
    </summary>
    
      <category term="Kotlin" scheme="http://hawkyAndroid.github.io/categories/Kotlin/"/>
    
    
      <category term="Kotlin" scheme="http://hawkyAndroid.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>Z-Wave系列之封装篇</title>
    <link href="http://hawkyAndroid.github.io/2019/06/15/summary-zwave-encapsulation/"/>
    <id>http://hawkyAndroid.github.io/2019/06/15/summary-zwave-encapsulation/</id>
    <published>2019-06-15T13:08:07.000Z</published>
    <updated>2019-06-15T14:04:54.915Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Command-Class"><a href="#Command-Class" class="headerlink" title="Command Class"></a>Command Class</h3><pre><code>1）Switch Binary2）Battery Level3）Color Switch4）Meter5）Multi Channel Switch6）Multi Sensor7）Multi Switch8）Notification9）Alarm10）NOP</code></pre><h3 id="Z-Wave协议封装"><a href="#Z-Wave协议封装" class="headerlink" title="Z-Wave协议封装"></a>Z-Wave协议封装</h3><h4 id="Base-Class"><a href="#Base-Class" class="headerlink" title="Base Class"></a>Base Class</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 子设备节点号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> node;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送的Z-wave数据长度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> length;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Z-Wave模块</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> funId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Z-Wave模块下的具体指令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> funCmd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建子设备控制指令</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> node   节点号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> funId  命令模块</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> funCmd 具体命令</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params 命令参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] createCmd(<span class="keyword">int</span> node, <span class="keyword">int</span> funId, <span class="keyword">int</span> funCmd, <span class="keyword">byte</span>... params) &#123;</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        DataOutputStream stream = <span class="keyword">new</span> DataOutputStream(out);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.node = node;</span><br><span class="line">            stream.writeByte(node);</span><br><span class="line">            <span class="keyword">this</span>.length = <span class="number">1</span> + <span class="number">1</span> + params.length;<span class="comment">// Z-Wave数据长度</span></span><br><span class="line">            stream.write(<span class="keyword">this</span>.length);</span><br><span class="line">            <span class="keyword">this</span>.funId = funId;</span><br><span class="line">            stream.writeByte(funId);</span><br><span class="line">            <span class="keyword">this</span>.funCmd = funCmd;</span><br><span class="line">            stream.writeByte(funCmd);</span><br><span class="line">            stream.write(params);</span><br><span class="line">            stream.flush();</span><br><span class="line">            stream.close();</span><br><span class="line">            <span class="keyword">return</span> out.toByteArray();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 适用于多通道</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> node    节点号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content 指令内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] createCmd(<span class="keyword">int</span> node, <span class="keyword">byte</span>... content) &#123;</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        DataOutputStream stream = <span class="keyword">new</span> DataOutputStream(out);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.node = node;</span><br><span class="line">            stream.writeByte(node);</span><br><span class="line">            <span class="keyword">this</span>.length = content.length;<span class="comment">// Z-Wave数据长度</span></span><br><span class="line">            stream.write(content.length);</span><br><span class="line">            stream.write(content);</span><br><span class="line">            stream.flush();</span><br><span class="line">            stream.close();</span><br><span class="line">            <span class="keyword">return</span> out.toByteArray();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1）Switch-Binary"><a href="#1）Switch-Binary" class="headerlink" title="1）Switch Binary"></a>1）Switch Binary</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务类 - 二进制开关 02 25 03 ff 28</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwitchBinaryClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SWITCH_OFF = <span class="number">0x00</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SWITCH_ON = <span class="number">0xFF</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开关状态: FF、00</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> status;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DataInputStream stream = <span class="keyword">new</span> DataInputStream(<span class="keyword">new</span> ByteArrayInputStream(data));</span><br><span class="line">        node = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funId = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funCmd = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        status = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        stream.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2）Battery-Level"><a href="#2）Battery-Level" class="headerlink" title="2）Battery Level"></a>2）Battery Level</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 电池电量</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BatteryLevelClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The field can take values from 0 to 100% (0x00 – 0x64). The value 0xFF indicates a battery low warning.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> level;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DataInputStream stream = <span class="keyword">new</span> DataInputStream(<span class="keyword">new</span> ByteArrayInputStream(data));</span><br><span class="line">        node = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funId = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funCmd = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        level = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        stream.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3）Color-Switch"><a href="#3）Color-Switch" class="headerlink" title="3）Color Switch"></a>3）Color Switch</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 颜色开关</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColorSwitchClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> red;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> green;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> blue;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] spliceCmd(<span class="keyword">int</span> red, <span class="keyword">int</span> green, <span class="keyword">int</span> blue) &#123;</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        DataOutputStream stream = <span class="keyword">new</span> DataOutputStream(out);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            stream.writeByte(<span class="number">0x05</span>);</span><br><span class="line">            stream.writeByte(<span class="number">0x01</span>);</span><br><span class="line">            stream.writeByte(<span class="number">0x00</span>);</span><br><span class="line">            stream.writeByte(<span class="number">0x0</span>);</span><br><span class="line">            stream.writeByte(<span class="number">0x00</span>);</span><br><span class="line">            stream.writeByte(<span class="number">0x02</span>);</span><br><span class="line">            stream.writeByte(red);</span><br><span class="line">            stream.writeByte(<span class="number">0x03</span>);</span><br><span class="line">            stream.writeByte(green);</span><br><span class="line">            stream.writeByte(<span class="number">0x04</span>);</span><br><span class="line">            stream.writeByte(blue);</span><br><span class="line">            stream.flush();</span><br><span class="line">            stream.close();</span><br><span class="line">            <span class="keyword">return</span> out.toByteArray();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4）Meter"><a href="#4）Meter" class="headerlink" title="4）Meter"></a>4）Meter</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务类 - 能耗 02 32 02 21 74 00 00 17 18 00 00 00</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MeterClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> METER_TYPE_ELECTRIC = <span class="number">0x01</span>;<span class="comment">// 电表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> METER_TYPE_GAS = <span class="number">0x02</span>;<span class="comment">// 燃气表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> METER_TYPE_WATER = <span class="number">0x03</span>;<span class="comment">// 水表</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测量类别</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> meterType;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测量单位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> scale;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测量精度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> precision;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实际值的测量值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> value;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 精确后的测量值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String valueStr;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 电表Scale</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">METER_SCALE_ELECTRIC</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> KWH = <span class="number">0x00</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> KVAH = <span class="number">0x01</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> W = <span class="number">0x02</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PULSE_COUNT = <span class="number">0x03</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> V = <span class="number">0x04</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> A = <span class="number">0x05</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> POWER_FACTOR = <span class="number">0x06</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 燃气表Scale</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">METER_SCALE_GAS</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CUBIC_METERS = <span class="number">0x00</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CUBIC_FEET = <span class="number">0x01</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> RESERVED = <span class="number">0x02</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PULSE_COUNT = <span class="number">0x03</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 水表Scale</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">METER_SCALE_WATER</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CUBIC_METERS = <span class="number">0x00</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CUBIC_FEET = <span class="number">0x01</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> US_GALLONS = <span class="number">0x02</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PULSE_COUNT = <span class="number">0x03</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DataInputStream stream = <span class="keyword">new</span> DataInputStream(<span class="keyword">new</span> ByteArrayInputStream(data));</span><br><span class="line">        node = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funId = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funCmd = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        <span class="keyword">byte</span> b1 = stream.readByte();<span class="comment">// Rate Type 可忽略</span></span><br><span class="line">        meterType = b1 &amp; <span class="number">0x1F</span>;<span class="comment">// 低5位</span></span><br><span class="line">        <span class="keyword">byte</span> b2 = stream.readByte();</span><br><span class="line">        <span class="keyword">byte</span> scale2 = (<span class="keyword">byte</span>) ((b1 &amp; <span class="number">0xFF</span>) &gt;&gt; <span class="number">7</span>);<span class="comment">// 取最高位</span></span><br><span class="line">        <span class="keyword">byte</span> scale10 = (<span class="keyword">byte</span>) ((b2 &amp; <span class="number">0x1F</span>) &gt;&gt; <span class="number">3</span>);<span class="comment">// 取4、5位</span></span><br><span class="line">        scale = scale2 &lt;&lt; <span class="number">2</span> | scale10;<span class="comment">// 高位 + 低位</span></span><br><span class="line">        precision = (b2 &amp; <span class="number">0xFF</span>) &gt;&gt; <span class="number">5</span>;<span class="comment">// 取前3位</span></span><br><span class="line">        DebugLog.e(<span class="string">"meterType:"</span> + meterType + <span class="string">", scale:"</span> + scale + <span class="string">", precision:"</span> + precision);</span><br><span class="line">        <span class="keyword">int</span> size = b2 &amp; <span class="number">0x07</span>;<span class="comment">// 取后3位(值: 所占字节个数)</span></span><br><span class="line">        value = ByteDataConvertUtil.BinToInt(data, <span class="number">5</span>, size);</span><br><span class="line">        valueStr = ByteDataConvertUtil.formatDouble(value / Math.pow(<span class="number">10</span>, precision), precision);<span class="comment">//能耗</span></span><br><span class="line">        DebugLog.e(<span class="string">"size:"</span> + size + <span class="string">", value:"</span> + value + <span class="string">", valueStr:"</span> + valueStr);</span><br><span class="line">        stream.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Just for testing</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getScaleStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String scale = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">switch</span> (meterType) &#123;</span><br><span class="line">            <span class="keyword">case</span> METER_TYPE_ELECTRIC:<span class="comment">// 电表</span></span><br><span class="line">                scale = getScaleForElectric();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_TYPE_GAS:<span class="comment">// 燃气表</span></span><br><span class="line">                scale = getScaleForCAS();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_TYPE_WATER:<span class="comment">// 水表</span></span><br><span class="line">                scale = getScaleForWater();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> scale;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getScaleForElectric</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">switch</span> (scale) &#123;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_ELECTRIC.KWH:</span><br><span class="line">                result = <span class="string">"kWh"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_ELECTRIC.KVAH:</span><br><span class="line">                result = <span class="string">"kVAh"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_ELECTRIC.W:</span><br><span class="line">                result = <span class="string">"W"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_ELECTRIC.PULSE_COUNT:</span><br><span class="line">                result = <span class="string">"Pulse Count"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_ELECTRIC.V:</span><br><span class="line">                result = <span class="string">"V"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_ELECTRIC.A:</span><br><span class="line">                result = <span class="string">"A"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_ELECTRIC.POWER_FACTOR:</span><br><span class="line">                result = <span class="string">"Power Factor"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getScaleForCAS</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">switch</span> (scale) &#123;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_GAS.CUBIC_METERS:</span><br><span class="line">                result = <span class="string">"Cubic meters"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_GAS.CUBIC_FEET:</span><br><span class="line">                result = <span class="string">"Cubic feet"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_GAS.RESERVED:</span><br><span class="line">                result = <span class="string">"Reserved"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_GAS.PULSE_COUNT:</span><br><span class="line">                result = <span class="string">"Pulse count"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getScaleForWater</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">switch</span> (scale) &#123;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_WATER.CUBIC_METERS:</span><br><span class="line">                result = <span class="string">"Cubic meters"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_WATER.CUBIC_FEET:</span><br><span class="line">                result = <span class="string">"Cubic feet"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_WATER.US_GALLONS:</span><br><span class="line">                result = <span class="string">"US gallons"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> METER_SCALE_WATER.PULSE_COUNT:</span><br><span class="line">                result = <span class="string">"Pulse count"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5）Multi-Channel-Switch"><a href="#5）Multi-Channel-Switch" class="headerlink" title="5）Multi Channel Switch"></a>5）Multi Channel Switch</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多通道开关</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultiChannelSwitchClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SWITCH_OFF = <span class="number">0x00</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SWITCH_ON = <span class="number">0xFF</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> param1;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> param2;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> source_key;<span class="comment">// 按键索引(源)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> dest_key;<span class="comment">// 按键索引(目标)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> status;<span class="comment">// 开关状态</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] spliceCmd(<span class="keyword">int</span> key, <span class="keyword">int</span> status) &#123;</span><br><span class="line">        ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        DataOutputStream stream = <span class="keyword">new</span> DataOutputStream(out);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            stream.writeByte(<span class="number">0x60</span>);</span><br><span class="line">            stream.writeByte(<span class="number">0x0D</span>);</span><br><span class="line">            stream.writeByte(key);</span><br><span class="line">            stream.writeByte(key);</span><br><span class="line">            stream.writeByte(ZFunID.COMMAND_CLASS_SWITCH_BINARY);</span><br><span class="line">            stream.writeByte(ZFunCmd.SWITCH.SWITCH_BINARY_SET);</span><br><span class="line">            stream.writeByte(status);</span><br><span class="line">            stream.flush();</span><br><span class="line">            stream.close();</span><br><span class="line">            <span class="keyword">return</span> out.toByteArray();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 5a 60 0d 00 00 25 03 ff</span></span><br><span class="line">        DataInputStream stream = <span class="keyword">new</span> DataInputStream(<span class="keyword">new</span> ByteArrayInputStream(data));</span><br><span class="line">        node = stream.readByte() &amp; <span class="number">0xFF</span>;<span class="comment">//  5a</span></span><br><span class="line">        param1 = stream.readByte() &amp; <span class="number">0xFF</span>;<span class="comment">// 60</span></span><br><span class="line">        param2 = stream.readByte() &amp; <span class="number">0xFF</span>;<span class="comment">// 0D</span></span><br><span class="line">        source_key = stream.readByte() &amp; <span class="number">0xFF</span>;<span class="comment">// 01</span></span><br><span class="line">        dest_key = stream.readByte() &amp; <span class="number">0xFF</span>;<span class="comment">// 01</span></span><br><span class="line">        funId = stream.readByte() &amp; <span class="number">0xFF</span>;<span class="comment">// 25</span></span><br><span class="line">        funCmd = stream.readByte() &amp; <span class="number">0xFF</span>;<span class="comment">// 03</span></span><br><span class="line">        status = stream.readByte() &amp; <span class="number">0xFF</span>;<span class="comment">// FF</span></span><br><span class="line">        stream.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6）Multi-Sensor"><a href="#6）Multi-Sensor" class="headerlink" title="6）Multi Sensor"></a>6）Multi Sensor</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多传感器0x31(温度/湿度/亮度-光照度Lux) 10 31 05 03 0a 00 eb</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultiSensorClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SENSOR_TYPE_TEMP = <span class="number">0x01</span>;<span class="comment">// 温度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SENSOR_TYPE_LUX = <span class="number">0x03</span>;<span class="comment">// 亮度-光照度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SENSOR_TYPE_HUMIDITY = <span class="number">0x05</span>;<span class="comment">// 湿度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传感器类别</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> sensorType;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测量单位</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> scale;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测量精度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> precision;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实际值的测量值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> value;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 精确后的测量值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String valueStr;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DataInputStream stream = <span class="keyword">new</span> DataInputStream(<span class="keyword">new</span> ByteArrayInputStream(data));</span><br><span class="line">        node = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funId = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funCmd = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        sensorType = stream.readByte();</span><br><span class="line">        <span class="keyword">byte</span> b1 = stream.readByte();</span><br><span class="line">        precision = (<span class="keyword">byte</span>) ((b1 &amp; <span class="number">0xFF</span>) &gt;&gt; <span class="number">5</span>);<span class="comment">// 取前3位</span></span><br><span class="line">        scale = (<span class="keyword">byte</span>) ((b1 &amp; <span class="number">0x1F</span>) &gt;&gt; <span class="number">3</span>);<span class="comment">// 取4、5位</span></span><br><span class="line">        <span class="keyword">int</span> size = b1 &amp; <span class="number">0x03</span>;<span class="comment">// 取后3位--所占字节数</span></span><br><span class="line">        <span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[size];</span><br><span class="line">        stream.read(buff);</span><br><span class="line">        stream.close();</span><br><span class="line">        value = ByteDataConvertUtil.BinToInt(buff, <span class="number">0</span>, size);</span><br><span class="line">        valueStr = ByteDataConvertUtil.formatDouble(value / Math.pow(<span class="number">10</span>, precision), precision);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// just for testing</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getScaleStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String scale = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">switch</span> (sensorType) &#123;</span><br><span class="line">            <span class="keyword">case</span> SENSOR_TYPE_TEMP:<span class="comment">// 温度</span></span><br><span class="line">                scale = getScaleForTemp();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SENSOR_TYPE_LUX:<span class="comment">// 亮度</span></span><br><span class="line">                scale = getScaleForLux();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SENSOR_TYPE_HUMIDITY:<span class="comment">// 湿度</span></span><br><span class="line">                scale = getScaleForHumidity();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> scale;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getScaleForTemp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">switch</span> (scale) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x00</span>:</span><br><span class="line">                result = <span class="string">"C"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x01</span>:</span><br><span class="line">                result = <span class="string">"F"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getScaleForLux</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">switch</span> (scale) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x01</span>:</span><br><span class="line">                result = <span class="string">"Lux"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getScaleForHumidity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">switch</span> (scale) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x00</span>:</span><br><span class="line">                result = <span class="string">"%"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0x01</span>:</span><br><span class="line">                result = <span class="string">"g/m³"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"MultiSensorClass&#123;"</span> +</span><br><span class="line">                <span class="string">"sensorType="</span> + sensorType +</span><br><span class="line">                <span class="string">", scale="</span> + scale +</span><br><span class="line">                <span class="string">", precision="</span> + precision +</span><br><span class="line">                <span class="string">", value="</span> + value +</span><br><span class="line">                <span class="string">", valueStr='"</span> + valueStr + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7）Multi-Switch"><a href="#7）Multi-Switch" class="headerlink" title="7）Multi Switch"></a>7）Multi Switch</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多级开关</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MultiSwitchClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> value;<span class="comment">// 值</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DataInputStream stream = <span class="keyword">new</span> DataInputStream(<span class="keyword">new</span> ByteArrayInputStream(data));</span><br><span class="line">        node = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funId = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funCmd = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        value = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        stream.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8）Notification"><a href="#8）Notification" class="headerlink" title="8）Notification"></a>8）Notification</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通知上报:  0d 71 05 00 00 00 ff 06 17 00</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NotificationClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通知状态</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> notificationStatus;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通知类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> notificationType;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> event;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 事件参数（可以为空）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] eventParams;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DataInputStream stream = <span class="keyword">new</span> DataInputStream(<span class="keyword">new</span> ByteArrayInputStream(data));</span><br><span class="line">        node = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funId = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        funCmd = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        stream.readByte();<span class="comment">// alarmType</span></span><br><span class="line">        stream.readByte();<span class="comment">// alarmLevel</span></span><br><span class="line">        stream.readByte();<span class="comment">// reserved</span></span><br><span class="line">        notificationStatus = stream.readByte() &amp; <span class="number">0xFF</span>;<span class="comment">// 0xff</span></span><br><span class="line">        notificationType = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        event = stream.readByte() &amp; <span class="number">0xFF</span>;</span><br><span class="line">        <span class="keyword">if</span> (data.length &gt; <span class="number">9</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> paramsLen = stream.readByte() &amp; <span class="number">0x1F</span>;</span><br><span class="line">            <span class="keyword">if</span> (paramsLen &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                eventParams = <span class="keyword">new</span> <span class="keyword">byte</span>[paramsLen];</span><br><span class="line">                stream.read(eventParams);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        DebugLog.e(<span class="string">"notificationStatus:0x"</span> + Integer.toHexString(notificationStatus) + <span class="string">"，notificationType:"</span> + Integer.toHexString(notificationType)</span><br><span class="line">                + <span class="string">"，event:0x"</span> + Integer.toHexString(event) + <span class="string">",eventParams:"</span> + ByteDataConvertUtil.bytesToHexString(eventParams));</span><br><span class="line">        stream.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9）Alarm"><a href="#9）Alarm" class="headerlink" title="9）Alarm"></a>9）Alarm</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 报警器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AlarmClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ALARM_VOLUME = <span class="number">0x0C</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ALARM_MUSIC = <span class="number">0x0B</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> voice;<span class="comment">// 音量</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10）NOP"><a href="#10）NOP" class="headerlink" title="10）NOP"></a>10）NOP</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用于PING子设备</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NopClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Command-Class&quot;&gt;&lt;a href=&quot;#Command-Class&quot; class=&quot;headerlink&quot; title=&quot;Command Class&quot;&gt;&lt;/a&gt;Command Class&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;1）Switch Binary

2
      
    
    </summary>
    
      <category term="ZWave" scheme="http://hawkyAndroid.github.io/categories/ZWave/"/>
    
    
      <category term="ZWave" scheme="http://hawkyAndroid.github.io/tags/ZWave/"/>
    
  </entry>
  
  <entry>
    <title>Z-Wave系列之指令篇</title>
    <link href="http://hawkyAndroid.github.io/2019/06/13/summary-zwave-command-class/"/>
    <id>http://hawkyAndroid.github.io/2019/06/13/summary-zwave-command-class/</id>
    <published>2019-06-13T14:29:07.000Z</published>
    <updated>2019-06-15T12:58:20.668Z</updated>
    
    <content type="html"><![CDATA[<p> Z-Wave Zniffer 抓包数据说明：</p><pre><code>Hex Data：F14221BE 01 410F0E 08 20 01 00 1626HomeId | src node | xxxxxx | dst node | Command Class | Command | Value/Params| checkSum</code></pre><p> 注意：每个Z-Wave子设备都含有Basic（GET、SET、REPORT）指令功能。</p><h3 id="Z-Wave指令说明"><a href="#Z-Wave指令说明" class="headerlink" title="Z-Wave指令说明"></a>Z-Wave指令说明</h3><h4 id="（一）Association"><a href="#（一）Association" class="headerlink" title="（一）Association"></a>（一）Association</h4><p>1) Association Report</p><pre><code>Hex Data：F1 42 21 BE 0C 41 0A 11 01 85 03 01 05 00 01 A5 BAF1 42 21 BE - HomeId0C -        Src Node41 0A 11    -01 -        Dst Node85 -        COMMAND_CLASS_ASSOCIATION（Command Class）03 -        ASSOCIATION_REPORT（Command）01 -        Grouping ID（关联组ID）05 -        Max Nodes Supported（该关联组最大的关联节点数）00 -        Reports to Follow01 -        NodeID （关联的节点号）A5 BA    -  checkSum（校验码）</code></pre><p>2）Association Groupings Report</p><pre><code>F1 42 21 BE 0C 41 0C 0E 01 85 06 01 A2 0FF1 42 21 BE - HomeId0C -        Src Node41 0A 11    -01 -        Dst Node85 -        COMMAND_CLASS_ASSOCIATION（Command Class）      06 -        ASSOCIATION_GROUPINGS_REPORT（Command）01 -        Supported Groupings（支持的关联组数）A2 0F    -  checkSum（校验码）</code></pre><p>3）Association Specific Group Report</p><pre><code>F1 42 21 BE 07 41 0C 0E 01 85 0C 02 AB 08F1 42 21 BE - HomeId07 -        Src Node41 0C 0E    -01 -        Dst Node85 -        COMMAND_CLASS_ASSOCIATION（Command Class）      0C -        ASSOCIATION_GROUPINGS_REPORT（Command）02 -        Group（指定的关联组）AB 08    -  checkSum（校验码）</code></pre><h4 id="（二）Association-Group"><a href="#（二）Association-Group" class="headerlink" title="（二）Association Group"></a>（二）Association Group</h4><p>1）Association Group Name Group Report</p><pre><code>F1 42 21 BE 07 41 03 17 01 59 02 01 08 4C 69 66 65 6C 69 6E 65 06 78F1 42 21 BE - HomeId07 -        Src Node41 03 17    -01 -        Dst Node59 -        COMMAND_CLASS_ASSOCIATION_GRP_INFO（Command Class）      02 -        ASSOCIATION_GROUP_NAME_REPORT（Command）01 -        Grouping ID（关联组ID）08 -        Length of Name（关联组名字长度）4C 69 66 65 6C 69 6E 65 - Lifeline（Hex Ascii-&gt; String）06 78    -  checkSum（校验码）</code></pre><p>2）Association Group Command List Report</p><pre><code>F1 42 21 BE 07 41 07 13 01 59 06 01 04 5A 01 20 03 0A 5EF1 42 21 BE - HomeId07 -        Src Node41 03 17    -01 -        Dst Node59 -        COMMAND_CLASS_ASSOCIATION_GRP_INFO（Command Class）      06 -        ASSOCIATION_GROUP_COMMAND_LIST_REPORT（Command）01 -        Grouping ID（关联组ID）04 -        List Length（支持的命令类长度）5A 01 20 03-- 5A 01（COMMAND_CLASS_DEVICE_RESET_LOCALLY | DEVICE_RESET_LOCALLY_NOTIFICATION）-- 20 03（COMMAND_CLASS_BASIC | BASIC_REPORT）0A 5E    -  checkSum（校验码）</code></pre><h4 id="（三）Basic"><a href="#（三）Basic" class="headerlink" title="（三）Basic"></a>（三）Basic</h4><p>1）Basic Report</p><pre><code>F1 42 21 BE 07 41 07 10 01 20 03 00 00 00 20 6DF1 42 21 BE - HomeId07 -        Src Node41 07 10    -01 -        Dst Node20 -        COMMAND_CLASS_BASIC（Command Class）      03 -        BASIC_REPORT（Command）00 -        Current Value00 -        Target Value00 -        Duration20 6D    -  checkSum（校验码）</code></pre><h4 id="（四）-Configuration"><a href="#（四）-Configuration" class="headerlink" title="（四） Configuration"></a>（四） Configuration</h4><p>1）Configuration Report</p><pre><code>F1 42 21 BE 0C 41 0E 1F 01 70 06 XX 10 XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX 31 BCF1 42 21 BE - HomeId0C -        Src Node41 0E 1F    -01 -        Dst Node70 -        COMMAND_CLASS_CONFIGURATION（Command Class）      06 -        CONFIGURATION_REPORT（Command）XX -        配置参数（规格说明书定义的）10 -        参数值的长度 16bytesXX XX XX XX XX XX XX XX XX XX XX XX XX XX XX XX：参数值31 BC    -  checkSum（校验码）</code></pre><h4 id="（五）-Firmware-Update-Md"><a href="#（五）-Firmware-Update-Md" class="headerlink" title="（五） Firmware Update Md"></a>（五） Firmware Update Md</h4><p>1）Firmware Md Report</p><pre><code>F1 42 21 BE 0C 41 0F 17 01 7A 02 XX XX 01 16 3C D0 FF 00 00 28 6A 7FF1 42 21 BE - HomeId0C -        Src Node41 0F 17    -01 -        Dst Node7A -        COMMAND_CLASS_FIRMWARE_UPDATE_MD （Command Class）      02 -        FIRMWARE_MD_REPORT （Command）XX XX -     Manufacturer ID（厂商ID）01 16 -     Firmware 0 ID3C D0 -     Firmware 0 ChecksumFF -        Firmware Upgradable00 -        Number of Firmware Targets00 28 -     Max Fragment Size6A 7F    -  checkSum（校验码）</code></pre><h4 id="（六）-Manufacturer-Specific"><a href="#（六）-Manufacturer-Specific" class="headerlink" title="（六） Manufacturer Specific"></a>（六） Manufacturer Specific</h4><p>1）Manufacturer Specific Report</p><pre><code>F1 42 21 BE 0C 41 03 13 01 72 05 XX XX 01 01 XX XX 80 3EF1 42 21 BE - HomeId0C -        Src Node41 03 13    -01 -        Dst Node72 -        COMMAND_CLASS_MANUFACTURER_SPECIFIC （Command Class）      05 -        MANUFACTURER_SPECIFIC_REPORT （Command）XX XX -     Manufacturer ID （厂商ID）01 01 -     Product Type ID （产品类型，其中第二个字节 01:EU=0x00，US=0x01，ANZ=0x02，HK=0x03，IN=0x09，JP=0x0A，RU=0x1A，IL=0x1B，KR=0x1C，CN=0x1D）XX XX -     Product ID （产品ID）80 3E    -  checkSum（校验码）</code></pre><h4 id="（七）-Version"><a href="#（七）-Version" class="headerlink" title="（七） Version"></a>（七） Version</h4><p>1）Version Report</p><pre><code>F1 42 21 BE 0C 41 07 14 01 86 12 03 06 02 01 03 01 00 EC 6FF1 42 21 BE - HomeId0C -        Src Node41 07 14    -01 -        Dst Node86 -        COMMAND_CLASS_VERSION （Command Class）      12 -        VERSION_REPORT （Command）03 -        Z-Wave Library Type06 -        Z-Wave Protocol Version02 -        Z-Wave Protocol Sub Version01 -        Firmware 0 Version03 -        Firmware 0 Sub Version01 -        Hardware Version00 -        Number of firmware targetsEC 6F    -  checkSum（校验码）</code></pre><h4 id="（八）-Z-Wave-Info"><a href="#（八）-Z-Wave-Info" class="headerlink" title="（八） Z-Wave+Info"></a>（八） Z-Wave+Info</h4><p>1）Z-Wave+ Info Report</p><pre><code>F1 42 21 BE 0C 41 08 14 01 5E 02 01 05 00 07 00 07 00 66 BDF1 42 21 BE - HomeId0C -        Src Node41 08 14    -01 -        Dst Node5E -        COMMAND_CLASS_ZWAVEPLUS_INFO （Command Class）      02 -        ZWAVEPLUS_INFO_REPORT （Command）01 -        Z-Wave+ Version05 -        Role Type：ROLE+TYPE_SLAVE_ALWAYS_ON=0x0500 -        Node Type：NODE_TYPE_ZWAVEPLUS_NODE=0x0007 00 -     Installer Icon Type07 00 -     User Icon Type66 BD    -  checkSum（校验码）</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; Z-Wave Zniffer 抓包数据说明：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hex Data：F14221BE 01 410F0E 08 20 01 00 1626
HomeId | src node | xxxxxx | dst node | Command Class
      
    
    </summary>
    
      <category term="ZWave" scheme="http://hawkyAndroid.github.io/categories/ZWave/"/>
    
    
      <category term="ZWave" scheme="http://hawkyAndroid.github.io/tags/ZWave/"/>
    
  </entry>
  
  <entry>
    <title>Z-Wave系列之术语篇</title>
    <link href="http://hawkyAndroid.github.io/2019/06/10/summary-zwave-term/"/>
    <id>http://hawkyAndroid.github.io/2019/06/10/summary-zwave-term/</id>
    <published>2019-06-10T13:40:07.000Z</published>
    <updated>2019-06-17T11:43:07.126Z</updated>
    
    <content type="html"><![CDATA[<pre><code>Z-Wave使用低于1Ghz的频段，避免了2.4 GHz和5 GHz频段的拥挤。Z-Wave使用消息确认和Mesh网络提供安全可靠的双向通信，确保互操作性的100%。Z-Wave最多支持232个节点。</code></pre><h3 id="串口工具"><a href="#串口工具" class="headerlink" title="串口工具"></a>串口工具</h3><p>PC Controller：设备(控制)操作工具 类似网关<br>USB转串口(二进制数据)-&gt; Z-Wave无线模组-&gt;RF(广播、多播、单播)</p><p>Zniffer：抓包工具<br>RF(广播、多播、单播)-&gt;Z-Wave无线模组-&gt; 串口转USB(二进制数据)</p><h3 id="专业术语"><a href="#专业术语" class="headerlink" title="专业术语"></a>专业术语</h3><p>射频：用来收发无线(空中)数据包。</p><p>串口：用来收发有线数据包。是指数据一位一位地顺序传送，<br>其特点是通信线路简单，只要一对传输线就可以实现双向通信。</p><p>USB：Universal Serial Bus 通用串行总线。</p><p>COM口：电脑上的异步串行通信接口(已被USB取代)。</p><p>UART：Universal Asynchronous Receiver/Transmitter 通用异步收发传输器。</p><p>USART：Universal Synchronous/Asynchronous Receiver/Transmitter 通用同步异步收发传输器。<br>（同步通信和异步通信的区别是：时钟线的有无。同步通信有时钟线，收发双方通过统一的时钟来确定何时进行数据的传输，如I2C和SPI。异步通信没有时钟线，只能在数据的头和尾加入标志位来区分不同的数据帧，接收数据之前也要预先知道波特率的大小，传输效率比同步通信要低）</p><p>Association Group：关联组是指设备包含具有关联特征的功能列表，其中每个功能分为1组，每组可以设置多个节点进行关联（  Association）。每个Z-Wave子设备至少含有一个名为LifeLine的关联组，而且该关联组必须含有1号（网关）节点，否则设备无法通过网关进行操作。</p><p>Configuration：配置参数定义了一些公开或隐藏的功能参数指令。如：上电后的负载状态、指示灯工作模式、读取产品参数、Meter自动上报的间隔时间等。</p><p>Smart Start：网关添加DSK（可通过扫描DSK二维码或Configuration Report得到）后，若含该DSK(Device Specific Key)的子设备处于出网状态（出厂模式，而且子设备会一直发Smart Start），那么子设备即将入网（相当于处于入网模式，该模式下的入网比传统入网所需时间更长）。</p><p>Reset：重置网关。网关里面所有子节点设备将全部移除、恢复所有配置为默认值、清除Association节点、HomeId也会更新。注意：这里移除后的子设备必须先出网才能重新入网。</p><p>Device Reset (Locally Notification)：子设备重置上报给网关，网关需要发NOP指令确认子设备已经出网，此时子设备处于出网状态。</p><p>Learn Mode：学习模式需要先把待学习的A网关Reset（出厂设置）后再进行的操作。开启学习模式后，A网关处于学习状态，学习成功后成为主网关B的子(网关)设备。子网关A此时成为控制器，拥有添加&amp;删除子设备功能（节点号仍是由主网关B分配）。但子网关A仅作为主网关B的中转功能，不作为存储设备（不存储数据）。</p><p>Power Level：PowerLevel CC用于通过降低功率来确定链路边界，直到链路开始丢失帧。这可用于确定网络的整体运行状况。此命令类仅用于安装或测试情况。（Powerlevel CC is used to determine the link margin by lowering the power until the link starts to lose frames. This can be used to determine the overall health of the network. This Command Class is only used in an installation or test situation.）</p><p>Supervision：Supervision 命令类允许发送节点请求来自接收节点的应用程序级传递确认。Safety 和 security 相关的应用程序，如门锁，可能需要通过 Supervision 命令类立即确认命令。此外，可以通过使用 Supervision 命令类来降低延迟攻击的风险。（The Supervision Command Class allows a sending node to request application-level delivery confirmation from a receiving node. Safety and security related applications like door locks may require immediate command confirmations via the Supervision Command Class. Further, the risk of a delay attack can be mitigated through the use of the Supervision Command Class.）</p><p>Wake Up：仅用于睡眠设备，设置睡眠唤醒时间间隔。</p><p>Z-Wave Plus：Plus是Z-Wave（经典）规格的加强版，目前新版必须支持Plus规格才能过认证。</p><p>【注意】Z-Wave 500系列 外置flash，单品OTA（Over the Air）升级后可能会出现Product ID不对，此时单品需要重新入网。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;Z-Wave使用低于1Ghz的频段，避免了2.4 GHz和5 GHz频段的拥挤。

Z-Wave使用消息确认和Mesh网络提供安全可靠的双向通信，确保互操作性的100%。

Z-Wave最多支持232个节点。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;串口工
      
    
    </summary>
    
      <category term="ZWave" scheme="http://hawkyAndroid.github.io/categories/ZWave/"/>
    
    
      <category term="ZWave" scheme="http://hawkyAndroid.github.io/tags/ZWave/"/>
    
  </entry>
  
  <entry>
    <title>WebView与JS相互调用</title>
    <link href="http://hawkyAndroid.github.io/2019/06/04/summary-webview-js-01/"/>
    <id>http://hawkyAndroid.github.io/2019/06/04/summary-webview-js-01/</id>
    <published>2019-06-04T14:23:26.000Z</published>
    <updated>2019-06-04T14:53:03.799Z</updated>
    
    <content type="html"><![CDATA[<h3 id="WebSettings配置"><a href="#WebSettings配置" class="headerlink" title="WebSettings配置"></a>WebSettings配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressLint</span>(<span class="string">"SetJavaScriptEnabled"</span>)</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initWebSettings</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    WebSettings webSettings = mWebView.getSettings();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支持JS，开启 H5 网页的交互功能</span></span><br><span class="line">    webSettings.setJavaScriptEnabled(<span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// 支持通过JS打开新窗口</span></span><br><span class="line">    webSettings.setJavaScriptCanOpenWindowsAutomatically(<span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// 支持插件 android 18+</span></span><br><span class="line">    webSettings.setPluginState(WebSettings.PluginState.ON);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置自适应屏幕，两者合用</span></span><br><span class="line">    webSettings.setUseWideViewPort(<span class="keyword">true</span>);  <span class="comment">// 将图片调整到适合webview的大小</span></span><br><span class="line">    webSettings.setLoadWithOverviewMode(<span class="keyword">true</span>); <span class="comment">// 缩放至屏幕的大小</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭密码保存提醒</span></span><br><span class="line">    webSettings.setSavePassword(<span class="keyword">false</span>);</span><br><span class="line">    <span class="comment">// 缩放操作</span></span><br><span class="line">    webSettings.setSupportZoom(<span class="keyword">true</span>);  <span class="comment">//支持缩放，默认为true。是下面那个的前提。</span></span><br><span class="line">    webSettings.setBuiltInZoomControls(<span class="keyword">true</span>); <span class="comment">//设置可以缩放</span></span><br><span class="line">    webSettings.setDisplayZoomControls(<span class="keyword">false</span>); <span class="comment">//隐藏原生的缩放控件</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提高渲染的优先级</span></span><br><span class="line">    webSettings.setRenderPriority(WebSettings.RenderPriority.HIGH);</span><br><span class="line">    webSettings.setTextZoom(<span class="number">80</span>);<span class="comment">//设置文本的缩放倍数，默认为 100</span></span><br><span class="line">    webSettings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN); <span class="comment">//支持内容重新布局</span></span><br><span class="line">    webSettings.supportMultipleWindows();  <span class="comment">//多窗口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他细节操作</span></span><br><span class="line">    webSettings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK); <span class="comment">// 优先使用缓存  ~LOAD_DEFAULT</span></span><br><span class="line">    webSettings.setAllowFileAccess(<span class="keyword">false</span>); <span class="comment">// 设置不可以访问文件</span></span><br><span class="line">    webSettings.setAllowFileAccessFromFileURLs(<span class="keyword">false</span>);</span><br><span class="line">    webSettings.setAllowUniversalAccessFromFileURLs(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">        webSettings.setLoadsImagesAutomatically(<span class="keyword">true</span>); <span class="comment">//支持自动加载图片</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        webSettings.setLoadsImagesAutomatically(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    webSettings.setDomStorageEnabled(<span class="keyword">true</span>); <span class="comment">// 开启 DOM storage API 功能</span></span><br><span class="line">    webSettings.setDatabaseEnabled(<span class="keyword">true</span>);   <span class="comment">//开启 database storage API 功能</span></span><br><span class="line">    webSettings.setAppCacheEnabled(<span class="keyword">true</span>);<span class="comment">//开启 Application Caches 功能</span></span><br><span class="line"></span><br><span class="line">    webSettings.setDefaultTextEncodingName(<span class="string">"utf-8"</span>);<span class="comment">// 设置编码格式</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 允许Http、Https混合</span></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</span><br><span class="line">        webSettings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);</span><br><span class="line"><span class="comment">//            webSettings.setMixedContentMode(webSettings.getMixedContentMode());</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WebView配置"><a href="#WebView配置" class="headerlink" title="WebView配置"></a>WebView配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initWebView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 通过addJavascriptInterface()将Java对象映射到JS对象，进而供JS调用Java方法。</span></span><br><span class="line">    <span class="comment">// 参数1： Java对象名</span></span><br><span class="line">    <span class="comment">// 参数2： Javascript对象名</span></span><br><span class="line">    mWebView.addJavascriptInterface(<span class="keyword">new</span> SwitchOnOff(), <span class="string">"test_switch"</span>);</span><br><span class="line">    mWebView.addJavascriptInterface(<span class="keyword">new</span> UpdateDevName(), <span class="string">"test_dev"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载本地html</span></span><br><span class="line"><span class="comment">//        mWebView.loadUrl("file:///android_asset/test_switch.html");</span></span><br><span class="line">    <span class="comment">// 加载远程网页</span></span><br><span class="line">    mWebView.loadUrl(<span class="string">"http://192.168.xxx.xxx:xxxx/test_switch.html"</span>);</span><br><span class="line"></span><br><span class="line">    mWebView.setWebViewClient(<span class="keyword">new</span> WebViewClient() &#123;</span><br><span class="line">        <span class="comment">// 网页用WebView打开（拦截 url）</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> </span>&#123;</span><br><span class="line">            DebugLog.e(<span class="string">"url："</span> + url);</span><br><span class="line">            view.loadUrl(url);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageStarted</span><span class="params">(WebView view, String url, Bitmap favicon)</span> </span>&#123;</span><br><span class="line">            DebugLog.e(<span class="string">"onPageStarted"</span>);</span><br><span class="line">            <span class="keyword">super</span>.onPageStarted(view, url, favicon);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageFinished</span><span class="params">(WebView view, String url)</span> </span>&#123;</span><br><span class="line">            DebugLog.e(<span class="string">"onPageFinished"</span>);</span><br><span class="line">            <span class="comment">// Android 调用js方法</span></span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">                <span class="comment">// 无需刷新页面 （效率高，需要android 4.4+）</span></span><br><span class="line">                mWebView.evaluateJavascript(<span class="string">"javascript:fillName('"</span> + devName + <span class="string">"')"</span>, <span class="keyword">new</span> ValueCallback&lt;String&gt;() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceiveValue</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">                        <span class="comment">//此处为 js 返回的结果 null</span></span><br><span class="line">                        DebugLog.e(<span class="string">"value："</span> + value);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 需要刷新页面</span></span><br><span class="line">                mWebView.loadUrl(<span class="string">"javascript:fillName('"</span> + devName + <span class="string">"')"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!mWebView.getSettings().getLoadsImagesAutomatically()) &#123;</span><br><span class="line">                mWebView.getSettings().setLoadsImagesAutomatically(<span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">super</span>.onPageFinished(view, url);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedSslError</span><span class="params">(WebView view, SslErrorHandler handler, SslError error)</span> </span>&#123;</span><br><span class="line">            handler.proceed();    <span class="comment">//表示等待证书响应</span></span><br><span class="line">            <span class="comment">// handler.cancel();      //表示挂起连接，为默认方式</span></span><br><span class="line">            <span class="comment">// handler.handleMessage(null);    //可做其他处理</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedError</span><span class="params">(WebView view, WebResourceRequest request, WebResourceError error)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onReceivedError(view, request, error);</span><br><span class="line">            <span class="comment">// 清除掉默认错误页内容</span></span><br><span class="line">            mWebView.loadDataWithBaseURL(<span class="keyword">null</span>, <span class="string">""</span>, <span class="string">"text/html"</span>, <span class="string">"utf-8"</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="comment">// 自定义错误显示...</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    mWebView.setWebChromeClient(<span class="keyword">new</span> WebChromeClient() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//处理alert弹出框，html 弹框的一种方式</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsAlert</span><span class="params">(WebView view, String url, String message, <span class="keyword">final</span> JsResult result)</span> </span>&#123;</span><br><span class="line">            DebugLog.e(<span class="string">"url:"</span> + url + <span class="string">",message:"</span> + message);</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="keyword">new</span> AlertDialog.Builder(WebViewSwitchActivity.<span class="keyword">this</span>)</span><br><span class="line">                    .setTitle(<span class="string">"提示"</span>)</span><br><span class="line">                    .setMessage(message)</span><br><span class="line">                    .setPositiveButton(<span class="string">"知道了"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                            result.confirm();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .create().show();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedTitle</span><span class="params">(WebView view, String title)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onReceivedTitle(view, title);</span><br><span class="line">            <span class="keyword">if</span> (!TextUtils.isEmpty(title)) &#123;</span><br><span class="line">                mTitleBar.setTitle(title);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgressChanged</span><span class="params">(WebView view, <span class="keyword">int</span> newProgress)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 网页加载进度</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">super</span>.onProgressChanged(view, newProgress);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WebView为JS提供接口"><a href="#WebView为JS提供接口" class="headerlink" title="WebView为JS提供接口"></a>WebView为JS提供接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开关</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwitchOnOff</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@JavascriptInterface</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">switchON</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@JavascriptInterface</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">switchOFF</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更名</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateDevName</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@JavascriptInterface</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"name:"</span> + name);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JS代码实现"><a href="#JS代码实现" class="headerlink" title="JS代码实现"></a>JS代码实现</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test-开关控制<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--开关--&gt;</span></span></span><br><span class="line"><span class="undefined">            function switch_on()&#123;</span></span><br><span class="line"><span class="undefined">                test_switch.switchON()</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            function switch_off()&#123;</span></span><br><span class="line"><span class="undefined">                test_switch.switchOFF()</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--js向input赋值--&gt;</span></span></span><br><span class="line"><span class="undefined">            function fillName(name)&#123;</span></span><br><span class="line"><span class="undefined">                document.getElementById("dev_name").value = name</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--更名--&gt;</span></span></span><br><span class="line"><span class="undefined">            function updateName()&#123;</span></span><br><span class="line"><span class="undefined">                var val = document.getElementById("dev_name").value;</span></span><br><span class="line"><span class="undefined">                if(val.length==0)&#123;</span></span><br><span class="line"><span class="undefined">                    alert("JS提示：名称不能为空");</span></span><br><span class="line"><span class="undefined">                &#125; else&#123;</span></span><br><span class="line"><span class="undefined">                    test_dev.updateName(val);</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"switch_on()"</span> <span class="attr">style</span>=<span class="string">"width:100px;height:100px;"</span>&gt;</span>ON<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"switch_off()"</span> <span class="attr">style</span>=<span class="string">"width:100px;height:100px;"</span>&gt;</span>OFF<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">onsubmit</span>=<span class="string">"return updateName()"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"dev_name"</span> <span class="attr">style</span>=<span class="string">"width:150px;height:50px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">id</span>=<span class="string">"submit"</span> <span class="attr">style</span>=<span class="string">"width:50px;height:40px;"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;WebSettings配置&quot;&gt;&lt;a href=&quot;#WebSettings配置&quot; class=&quot;headerlink&quot; title=&quot;WebSettings配置&quot;&gt;&lt;/a&gt;WebSettings配置&lt;/h3&gt;&lt;figure class=&quot;highlight java
      
    
    </summary>
    
      <category term="Android开发" scheme="http://hawkyAndroid.github.io/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android开发" scheme="http://hawkyAndroid.github.io/tags/Android%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>BLE协议总结</title>
    <link href="http://hawkyAndroid.github.io/2019/06/02/summary-ble-protocol/"/>
    <id>http://hawkyAndroid.github.io/2019/06/02/summary-ble-protocol/</id>
    <published>2019-06-02T07:01:07.000Z</published>
    <updated>2019-06-24T14:19:52.174Z</updated>
    
    <content type="html"><![CDATA[<p>蓝牙：基于2.4GHz ISM频段的无线通信协议，其市场定位是个体和民用。</p><p>BLE Hopping跳频技术：为了增加容量，增大抗干扰能力，连接不会长期使用一个<br>固定的Physical Channel，而是在多个Channel（如37个）之间随机但有规律的切换。</p><p>Mesh：是一种新型的无线网络架构，蓝牙Mesh组网内每台设备均通过低功耗蓝牙无线连接进行通信，而这些设备被称之为节点。每个节点都能发送和接收消息，消息能够在节点之间被中继，从而让消息传输至比无线电波正常传输距离更远的位置。归结成一句话：蓝牙Mesh组网 就是一种在同一个网络内任意蓝牙设备都进行数据交互的技术。这样的话，APP只要能发现组网内的任何一台设备，就能由设备发现组网内的其他Mesh设备，并和任何一台设备建立连接并控制。</p><h3 id="一-BLE的协议框架"><a href="#一-BLE的协议框架" class="headerlink" title="(一) BLE的协议框架"></a>(一) BLE的协议框架</h3><pre><code>注意：至下而上【BLE Application(Profiles)】 &gt;&gt;Thermomter、Battery、Promixity、Heart Rate...【BLE Host】&gt;GATT(Generic attribute profile)：GATT用来规范attribute中的数据内容，定义数据的类型和分组。ATT(Attribute protocol)：ATT层用来定义用户通信指令及指令操作的数据，比如读/写/notify/indicate等。SMP(Secure manager protocol)：SMP用来管理BLE连接的加密和安全的。GAP(Generic access profile)：GAP用于对链路层payload（有效数据包）进行解析，GAP目前主要用来进行广播、扫描和发起连接等。L2CAP(Logical Link Control and Adaptation Protocol)：协议/通道的多路复用、上层应用数据分割、生成协议数据单元(PDUs)、错误控制和重传机制、支持流式传输（如音频、视频等，不需要重传或者只需要有限重传）【BLE Controller】 &gt;&gt;HCI：host control interface，实现hci的协议，并连接stack层与底层通信的实现。Link Layer：链路层是整个BLE协议栈的核心。提供校验、重传等机制，确保数据传输的可靠性以及如何对链路进行管理和控制等。Physical Layer：物理层用来指定BLE所用的无线频段，调制解调方式和方法等。该层会影响整个BLE芯片的功耗、灵敏度等。</code></pre><p>  –LTV模型：Length、Type、Value。</p><p>  <a href="https://blog.csdn.net/shunfa888/article/details/80140475" target="_blank" rel="noopener">参考</a></p><h3 id="二-蓝牙5新特性"><a href="#二-蓝牙5新特性" class="headerlink" title="(二) 蓝牙5新特性"></a>(二) 蓝牙5新特性</h3><pre><code>1. 远距离蓝牙数据在传输过程中，RX端对整个payload数据包解码纠错能力有不同提升(简单说即为提高RX端接收灵敏度)。2. 长广播包（大数据）蓝牙4.0的广播使用的都是主广播信道，工作在37,38,39三个信道中。蓝牙5.0把广播信道抽象为两类：一种叫主广播信道(primary advertisement channels)，工作在37,38,39三个信道中;另一种叫第二广播信道（Secondary Advertising Packets），工作在0–36信道中(可发送长度介于0-255字节的数据)。3. 高速传输蓝牙5也支持单包255字节的数据传输，而且速率比起4.2提升了一倍。</code></pre><p>  –广播: 1对All； 多播: 1对多； 单播: 1对1。</p><h3 id="三-BLE开发流程"><a href="#三-BLE开发流程" class="headerlink" title="(三) BLE开发流程"></a>(三) BLE开发流程</h3><h4 id="1-添加权限"><a href="#1-添加权限" class="headerlink" title="1) 添加权限"></a>1) 添加权限</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.BLUETOOTH_ADMIN"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Android 6.0+ 需要动态申请以下权限 --&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-feature</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"android.hardware.bluetooth_le"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:required</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-检查是否支持BLE"><a href="#2-检查是否支持BLE" class="headerlink" title="2) 检查是否支持BLE"></a>2) 检查是否支持BLE</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_BLUETOOTH_LE);</span><br></pre></td></tr></table></figure><h4 id="3-开启蓝牙"><a href="#3-开启蓝牙" class="headerlink" title="3) 开启蓝牙"></a>3) 开启蓝牙</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">BluetoothManager  mBluetoothManager = (BluetoothManager) context.getSystemService(Context.BLUETOOTH_SERVICE);</span><br><span class="line">BluetoothAdapter mBluetoothAdapter = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">if</span> (mBluetoothManager != <span class="keyword">null</span>) &#123;</span><br><span class="line">      mBluetoothAdapter = mBluetoothManager.getAdapter();</span><br><span class="line">      <span class="comment">// 提示：如果当前蓝牙设备没启用, 应弹出对话框向用户要求授予权限来启用</span></span><br><span class="line">      <span class="keyword">if</span>(!mBluetoothAdapter.isEnabled())&#123;</span><br><span class="line">         mBluetoothAdapter.enable();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 蓝牙ON/OFF 广播监听</span></span><br><span class="line"><span class="keyword">private</span> BroadcastReceiver mBleStateListener = <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> String action = intent.getAction();</span><br><span class="line">        <span class="keyword">if</span> (BluetoothAdapter.ACTION_STATE_CHANGED.equals(action)) &#123;</span><br><span class="line">            <span class="keyword">int</span> state = intent.getIntExtra(BluetoothAdapter.EXTRA_STATE, -<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (state == BluetoothAdapter.STATE_OFF) &#123;</span><br><span class="line">                <span class="comment">// onBluetoothStateChange(false);</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == BluetoothAdapter.STATE_ON) &#123;</span><br><span class="line">                <span class="comment">// onBluetoothStateChange(true);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="4-搜索设备"><a href="#4-搜索设备" class="headerlink" title="4) 搜索设备"></a>4) 搜索设备</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> BluetoothLeScannerCompat scanner = BluetoothLeScannerCompat.getScanner();</span><br><span class="line"><span class="keyword">final</span> ScanSettings settings = <span class="keyword">new</span> ScanSettings.Builder()</span><br><span class="line">        .setScanMode(ScanSettings.SCAN_MODE_LOW_LATENCY)</span><br><span class="line">        .setReportDelay(<span class="number">1000</span>)</span><br><span class="line">        .setUseHardwareBatchingIfSupported(<span class="keyword">false</span>)</span><br><span class="line">        .build();</span><br><span class="line"><span class="keyword">final</span> List&lt;ScanFilter&gt; filters = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">filters.add(<span class="keyword">new</span> ScanFilter.Builder().setServiceUuid(<span class="keyword">null</span>).build());</span><br><span class="line">scanner.stopScan(scanCallback);</span><br><span class="line">scanner.startScan(filters, settings, mScanCallback);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 搜索回调</span></span><br><span class="line"><span class="keyword">private</span> ScanCallback mScanCallback = <span class="keyword">new</span> ScanCallback() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScanResult</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> callbackType, <span class="keyword">final</span> ScanResult result)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//do nothing</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBatchScanResults</span><span class="params">(<span class="keyword">final</span> List&lt;ScanResult&gt; results)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (ScanResult scanResult : results) &#123;</span><br><span class="line">            <span class="comment">// 过滤出自定义广播等...</span></span><br><span class="line">            <span class="keyword">if</span> () &#123;</span><br><span class="line">               <span class="comment">//  更新UI（蓝牙设备列表-排序）</span></span><br><span class="line">               onFindDeviceBroadcast(scanResult);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScanFailed</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> errorCode)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="5-连接设备及GATT服务"><a href="#5-连接设备及GATT服务" class="headerlink" title="5. 连接设备及GATT服务"></a>5. 连接设备及GATT服务</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 连接蓝牙设备</span></span><br><span class="line"><span class="comment">// BluetoothManager -&gt;mBluetoothAdapter -&gt;BluetoothDevice -&gt;BluetoothGatt</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">connect</span><span class="params">(<span class="keyword">final</span> String address)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mBluetoothAdapter == <span class="keyword">null</span> || address == <span class="keyword">null</span>) &#123;</span><br><span class="line">        DebugLog.e(<span class="string">"BluetoothAdapter not initialized or unspecified address."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!BluetoothAdapter.checkBluetoothAddress(address)) &#123; <span class="comment">// 校验mac地址有效性</span></span><br><span class="line">        DebugLog.e(<span class="string">"it's not a bluetooth address."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mBluetoothGatt != <span class="keyword">null</span>) &#123;</span><br><span class="line">        refreshGattCache(mBluetoothGatt);</span><br><span class="line">        mBluetoothGatt.close();</span><br><span class="line">        DebugLog.e(<span class="string">"gatt.close()"</span>);</span><br><span class="line">        mBluetoothGatt = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mHandler.postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// Previously connected device.  Try to reconnect.</span></span><br><span class="line">            <span class="keyword">if</span> (mBluetoothDeviceAddress != <span class="keyword">null</span> &amp;&amp; address.equals(mBluetoothDeviceAddress) &amp;&amp; mBluetoothGatt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                DebugLog.e(<span class="string">"Trying to use an existing mBluetoothGatt for connection."</span>);</span><br><span class="line">                mBluetoothGatt.connect();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">final</span> BluetoothDevice device = mBluetoothAdapter.getRemoteDevice(address);</span><br><span class="line">                <span class="keyword">if</span> (device == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    DebugLog.e(<span class="string">"Device not found.  Unable to connect."</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// We want to directly connect to the device, so we are setting the autoConnect</span></span><br><span class="line">                    <span class="comment">// parameter to false.</span></span><br><span class="line">                    mBluetoothGatt = device.connectGatt(BluetoothLeService.<span class="keyword">this</span>, <span class="keyword">false</span>, mGattCallback);</span><br><span class="line">                    DebugLog.e(<span class="string">"Trying to create a new connection."</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            mBluetoothDeviceAddress = address;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GATT服务器（回调）</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> BluetoothGattCallback mGattCallback = <span class="keyword">new</span> BluetoothGattCallback() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConnectionStateChange</span><span class="params">(BluetoothGatt gatt, <span class="keyword">int</span> status, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">        DebugLog.e(<span class="string">"onConnectionStateChange["</span> + status + <span class="string">"-&gt;"</span> + newState + <span class="string">"]"</span>);</span><br><span class="line">        <span class="keyword">if</span> (newState == BluetoothProfile.STATE_CONNECTED) &#123; <span class="comment">// 连接成功后发现服务</span></span><br><span class="line">            DebugLog.e(<span class="string">"Connected to GATT server."</span>);</span><br><span class="line">            broadcastUpdate(ACTION_GATT_CONNECTED, gatt.getDevice());</span><br><span class="line">            <span class="keyword">if</span> (mBluetoothGatt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">boolean</span> discovered = mBluetoothGatt.discoverServices();</span><br><span class="line">                DebugLog.e(<span class="string">"Attempting to start service discovery:"</span> + discovered);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (newState == BluetoothProfile.STATE_DISCONNECTED) &#123; <span class="comment">// 连接失败</span></span><br><span class="line">            DebugLog.e(<span class="string">"Disconnected from GATT server."</span> + gatt.getDevice().getAddress());</span><br><span class="line">            <span class="keyword">if</span> (mBluetoothGatt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                refreshDeviceCache(mBluetoothGatt);<span class="comment">// 刷新蓝牙缓存</span></span><br><span class="line">            &#125;</span><br><span class="line">            broadcastUpdate(ACTION_GATT_DISCONNECTED, gatt.getDevice());<span class="comment">// 若非手动断开，则可设置重连(如：3~5次)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServicesDiscovered</span><span class="params">(BluetoothGatt gatt, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        DebugLog.e(<span class="string">"onServicesDiscovered : "</span> + (status == BluetoothGatt.GATT_SUCCESS));</span><br><span class="line">        <span class="keyword">if</span> (status == BluetoothGatt.GATT_SUCCESS) &#123;</span><br><span class="line">            broadcastUpdate(ACTION_GATT_SERVICES_DISCOVERED, gatt.getDevice());<span class="comment">// 更新为连接成功状态</span></span><br><span class="line">            <span class="comment">// 此时就可以发送指令了。若还需接收指令功能，则需开启使能通知。</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicWrite</span><span class="params">(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCharacteristicWrite(gatt, characteristic, status);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] data = characteristic.getValue();</span><br><span class="line">        <span class="keyword">if</span> (status == BluetoothGatt.GATT_SUCCESS) &#123;</span><br><span class="line">           <span class="comment">// 表示指令发送成功了</span></span><br><span class="line">            DebugLog.e(<span class="string">"发送：write &gt; "</span> + gatt.getDevice().getAddress() + <span class="string">"["</span> + ByteUtils.bytesToHexString(data) + <span class="string">"]"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicRead</span><span class="params">(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (status == BluetoothGatt.GATT_SUCCESS) &#123;</span><br><span class="line">        <span class="comment">// 表示指令读取成功了。如：读取到了固件版本号</span></span><br><span class="line">            <span class="keyword">if</span> (READ_FIRMWARE_VERSION_UUID.equals(characteristic.getUuid())) &#123; <span class="comment">//</span></span><br><span class="line">                broadcastUpdate(ACTION_FIRMWARE_VERSION_AVAILABLE, characteristic.getValue());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// ...</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接收数据上报（ACK）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicChanged</span><span class="params">(<span class="keyword">final</span> BluetoothGatt gatt, BluetoothGattCharacteristic characteristic)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] data = characteristic.getValue();</span><br><span class="line">        DebugLog.e(<span class="string">"接收：receive &gt; ["</span> + ByteUtils.bytesToHexString(data) + <span class="string">"]"</span>);</span><br><span class="line">        broadcastUpdate(ACTION_DATA_AVAILABLE, data);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 连接蓝牙之前或断开后，刷新一下缓存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshGattCache</span><span class="params">(<span class="keyword">final</span> BluetoothGatt gatt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> Method refresh = gatt.getClass().getMethod(<span class="string">"refresh"</span>);</span><br><span class="line">        <span class="keyword">if</span> (refresh != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">boolean</span> success = (Boolean) refresh.invoke(gatt);</span><br><span class="line">            DebugLog.e(<span class="string">"Refresh cache result: "</span> + success);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        DebugLog.e(<span class="string">"An exception occurred while refreshing device"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-开启使能通知"><a href="#6-开启使能通知" class="headerlink" title="6. 开启使能通知"></a>6. 开启使能通知</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开启或关闭使能通知</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> enable true开启 false关闭</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> true开启成功 false 开启失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">enableNotify</span><span class="params">(<span class="keyword">boolean</span> enable)</span> </span>&#123;</span><br><span class="line">    DebugLog.e(enable ? <span class="string">"Enable Notify"</span> : <span class="string">"Disable Notify"</span>);</span><br><span class="line">    <span class="keyword">if</span> (mBluetoothAdapter == <span class="keyword">null</span> || mBluetoothGatt == <span class="keyword">null</span>) &#123;</span><br><span class="line">        DebugLog.e(<span class="string">"BluetoothAdapter not initialized"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拿到主服务</span></span><br><span class="line">    BluetoothGattService mGattService = mBluetoothGatt.getService(UUID.fromString(SampleGattAttributes.Nordic.SERVICE));</span><br><span class="line">    <span class="keyword">if</span> (mGattService == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于接收数据</span></span><br><span class="line">    BluetoothGattCharacteristic characteristic = mGattService.getCharacteristic(UUID.fromString(SampleGattAttributes.Nordic.NOTIFY));</span><br><span class="line">    <span class="keyword">if</span> (characteristic == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    mBluetoothGatt.setCharacteristicNotification(characteristic, enable);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Descriptor</span></span><br><span class="line">    BluetoothGattDescriptor descriptor = characteristic.getDescriptor(UUID.fromString(SampleGattAttributes.Nordic.CLIENT_CHARACTERISTIC_CONFIG));</span><br><span class="line">    <span class="keyword">if</span> (descriptor == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    descriptor.setValue(enable ? BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE : BluetoothGattDescriptor.DISABLE_NOTIFICATION_VALUE);</span><br><span class="line">    <span class="keyword">return</span> mBluetoothGatt.writeDescriptor(descriptor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-读取数据"><a href="#7-读取数据" class="headerlink" title="7. 读取数据"></a>7. 读取数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">BluetoothGattService mGattService = mBluetoothGatt.getService(DEVICE_INFO_SERVICE_UUID);</span><br><span class="line"><span class="keyword">if</span> (mGattService == <span class="keyword">null</span>)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> BluetoothGattCharacteristic firmwareCharacteristic = mGattService.getCharacteristic(READ_FIRMWARE_VERSION_UUID);</span><br><span class="line"><span class="keyword">if</span> (firmwareCharacteristic != <span class="keyword">null</span>) &#123;</span><br><span class="line">  <span class="comment">// 读取固件版本号</span></span><br><span class="line">mBluetoothGatt.readCharacteristic(firmwareCharacteristic);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-写入数据"><a href="#8-写入数据" class="headerlink" title="8. 写入数据"></a>8. 写入数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeData</span><span class="params">(<span class="keyword">byte</span>[] data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (mBluetoothAdapter == <span class="keyword">null</span>) &#123;</span><br><span class="line">    DebugLog.e(<span class="string">"mBluetoothAdapter == null BluetoothAdapter not initialized"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (mBluetoothGatt == <span class="keyword">null</span>) &#123;</span><br><span class="line">    DebugLog.e(<span class="string">"mBluetoothGatt == null BluetoothAdapter not initialized"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拿到主服务</span></span><br><span class="line">BluetoothGattService mGattService = mBluetoothGatt.getService(UUID.fromString(SampleGattAttributes.Nordic.SERVICE));</span><br><span class="line"><span class="keyword">if</span> (mGattService == <span class="keyword">null</span>)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于发送数据</span></span><br><span class="line">BluetoothGattCharacteristic characteristic = mGattService.getCharacteristic(UUID.fromString(SampleGattAttributes.Nordic.WRITE));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (characteristic == <span class="keyword">null</span>) &#123;</span><br><span class="line">    DebugLog.e(<span class="string">"characteristic == null BluetoothAdapter not initialized"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">characteristic.setValue(data);</span><br><span class="line">characteristic.setWriteType(BluetoothGattCharacteristic.WRITE_TYPE_NO_RESPONSE);</span><br><span class="line">mBluetoothGatt.writeCharacteristic(characteristic);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-断开连接"><a href="#9-断开连接" class="headerlink" title="9. 断开连接"></a>9. 断开连接</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Disconnects an existing connection or cancel a pending connection. The disconnection result</span></span><br><span class="line"><span class="comment"> * is reported asynchronously through the</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> BluetoothGattCallback#onConnectionStateChange(android.bluetooth.BluetoothGatt, int, int)&#125;</span></span><br><span class="line"><span class="comment"> * callback.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">disconnect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (mBluetoothGatt == <span class="keyword">null</span>) &#123;</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   mBluetoothGatt.disconnect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-关闭GATT服务"><a href="#10-关闭GATT服务" class="headerlink" title="10. 关闭GATT服务"></a>10. 关闭GATT服务</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * After using a given BLE device, the app must call this method to ensure resources are</span></span><br><span class="line"><span class="comment"> * released properly.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mBluetoothGatt == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mBluetoothGatt.close();</span><br><span class="line">    mBluetoothGatt = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;蓝牙：基于2.4GHz ISM频段的无线通信协议，其市场定位是个体和民用。&lt;/p&gt;
&lt;p&gt;BLE Hopping跳频技术：为了增加容量，增大抗干扰能力，连接不会长期使用一个&lt;br&gt;固定的Physical Channel，而是在多个Channel（如37个）之间随机但有规律的
      
    
    </summary>
    
      <category term="BLE" scheme="http://hawkyAndroid.github.io/categories/BLE/"/>
    
    
      <category term="BLE" scheme="http://hawkyAndroid.github.io/tags/BLE/"/>
    
  </entry>
  
  <entry>
    <title>网络安全之OSI七层模型</title>
    <link href="http://hawkyAndroid.github.io/2019/05/24/summary-network-security-01/"/>
    <id>http://hawkyAndroid.github.io/2019/05/24/summary-network-security-01/</id>
    <published>2019-05-24T14:43:07.000Z</published>
    <updated>2019-07-29T11:26:55.008Z</updated>
    
    <content type="html"><![CDATA[<h3 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h3><p>OSI：Open System Interconnection(开放系统互联)</p><pre><code>物理层：由传输在线缆上的电子信号组成，威胁是搭线窃听和监听，保护措施是加密、数据标签、流量填充等。如：HUB、水晶头、线缆。链路层：链路层以字节为单位把0/1分组，定义数据帧，写入源和目标机器的物理（MAC）地址、数据、校验位来传输数据。网络层：根据IP定义网络地址，区分网段。子网内根据地址解析协议（ARP）进行MAC寻址，子网外进行路由转发IP数据包。如：IP、ICMP(ping)、ARP(IP-&gt;mac)、路由器。传输层：IP数据包通过网络层发送到目标主机后，应用程序在传输层定义逻辑端口，确认身份后，将数据包交给应用程序，实现端口到端口间通信。如：TCP、UDP。    TCP：包头标记SYN、FIN、ACK。    UDP：面向不可靠链接，发送不管。    知名端口 &lt; 1024会话层：表示层：应用层：传输层的数据到达应用程序时，以某种统一规定的协议格式解读数据。应用层是最难保护的一层。如：SMTP(简单邮件传输协议)、FTP、TELNET、HTTP、SNMP。    SMTP：简单邮件传输协议，端口25。威胁是邮件炸弹、病毒、匿名邮件、木马，保护措施是认证、附件病毒扫描、用户安全意识教育。    FTP：文件传输协议，端口21。威胁是明文传输，黑客恶意传输非法使用等，保护措施是只允许匿名登录、单独的服务器分区、禁止执行程序。    TELNET：C/S模型，用于远程登录控制，端口23。威胁是恶意程序。    HTTP：超文本传输协议，端口80。威胁是明文传输。    SNMP：简单网络管理协议，主要提供网络状态信息，UDP端口161/162。威胁是明文传输、访问验证只需要交流名称，保护措施是使用防火墙过滤UDP端口161。    DNS：域名系统，TCP/UDP端口53。威胁是DNS欺骗/中毒、区域文件被盗，保护措施是防火墙过滤所有的区域文件传输、仅仅允许受新人的主机或者指定主机的区域文件传输。注：OSI模型已淘汰。现常用的网络协议为除去会话层、表示层外的其余五层协议。</code></pre><p>【基本流程】</p><pre><code>1）数据的封装和发送：程序在发送消息时，应用层按既定的协议包装数据，随后由传输层加上对方的端口号，由网络层加上对方的IP地址，由链路层加上对方的MAC地址，并将数据拆分成数据帧，经过多个路由器和网关后到达目标机器。2）数据的解包：上面流程反过来操作即可。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;OSI七层模型&quot;&gt;&lt;a href=&quot;#OSI七层模型&quot; class=&quot;headerlink&quot; title=&quot;OSI七层模型&quot;&gt;&lt;/a&gt;OSI七层模型&lt;/h3&gt;&lt;p&gt;OSI：Open System Interconnection(开放系统互联)&lt;/p&gt;
&lt;pre&gt;&lt;
      
    
    </summary>
    
      <category term="Security" scheme="http://hawkyAndroid.github.io/categories/Security/"/>
    
    
      <category term="Security" scheme="http://hawkyAndroid.github.io/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>股票投资建议</title>
    <link href="http://hawkyAndroid.github.io/2019/05/21/summary-stock-investment/"/>
    <id>http://hawkyAndroid.github.io/2019/05/21/summary-stock-investment/</id>
    <published>2019-05-21T14:25:07.000Z</published>
    <updated>2019-05-21T14:48:07.419Z</updated>
    
    <content type="html"><![CDATA[<h3 id="投资要素"><a href="#投资要素" class="headerlink" title="投资要素"></a>投资要素</h3><p>投资者要在金融市场获利，有以下5个先决要素：</p><pre><code>知识：学以致用、不断总结。耐心：耐心等待入市良机和平仓机会。胆识：在适当的时间果断地做出买卖决定。健康：保持足够精力、头脑保持清醒、不带负面情绪。资本：不过度投机、注意止损。</code></pre><h3 id="炒股规则建议"><a href="#炒股规则建议" class="headerlink" title="炒股规则建议"></a>炒股规则建议</h3><p>1、每次入市买卖，应该设定止损，以不超过本钱的1/10为宜。止损一旦设置要坚决执行，不可随意撤消。</p><p>2、顺势而为。只在市场活跃时参与买卖，如果无法把握市场的趋势，就不要入市。</p><p>3、不要频繁交易，不要透支买股票。</p><p>4、只要对走势有怀疑，就应立即平仓出局。</p><p>5、买卖中获利颇丰时可将部分利润提取，已备不时之需，保持健康稳定的操作心态。</p><p>6、不轻言加码、切忌抱着只能赢不能输的心态。</p><p>7、不轻信他人言论、凡是先详细研究，不要盲目入市和平仓。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;投资要素&quot;&gt;&lt;a href=&quot;#投资要素&quot; class=&quot;headerlink&quot; title=&quot;投资要素&quot;&gt;&lt;/a&gt;投资要素&lt;/h3&gt;&lt;p&gt;投资者要在金融市场获利，有以下5个先决要素：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;知识：学以致用、不断总结。

耐心：耐心等待入市
      
    
    </summary>
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>拉萨之旅</title>
    <link href="http://hawkyAndroid.github.io/2019/04/12/summary-lasa-trip-4_5/"/>
    <id>http://hawkyAndroid.github.io/2019/04/12/summary-lasa-trip-4_5/</id>
    <published>2019-04-12T11:12:10.000Z</published>
    <updated>2019-04-12T15:44:16.036Z</updated>
    
    <content type="html"><![CDATA[<pre><code>时间：4.5-4.7路线：往返飞。深圳-&gt;重庆-&gt;拉萨，拉萨-&gt;西安-&gt;深圳。行李：冲锋衣、羽绒服、保暖内衣、登山鞋、太阳镜、遮阳帽、防晒霜。注意：进藏前最好提前一周喝红景天(泡水)；带上水杯，多喝热水、不要喝冷水。</code></pre><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><h4 id="拉萨"><a href="#拉萨" class="headerlink" title="拉萨"></a>拉萨</h4><p>拉萨，简称‘拉’，是西藏自治区的首府，位于其东南部。拉萨海拔3650米，是西藏政治、经济、文化和科教的中心，也是藏佛佛教的圣地(LA在藏语里是佛的意思，SA是地)。 拉萨全年日照时长达3000小时以上，所以也被称为“日光城”，为高原山地气候，市花为“格桑花”。</p><h4 id="1、布达拉宫"><a href="#1、布达拉宫" class="headerlink" title="1、布达拉宫"></a>1、布达拉宫</h4><p>布达拉宫最初为吐蕃(Tibet)王朝藏王赞普松赞干布为迎娶尺尊公主和文成公主而兴建，是藏传佛教(格鲁派)的圣地，也是世界上海拔最高，集宫殿、城堡和寺院于一体的宏伟建筑，更是西藏最庞大、最完整的古代宫堡建筑群。</p><p>佛教创始人瞿昙义成（今译释迦牟尼）就是迦毗罗卫国（在今尼泊尔境内）净饭王之子。所以佛教起源地也就是在尼泊尔。</p><h4 id="2、大昭寺"><a href="#2、大昭寺" class="headerlink" title="2、大昭寺"></a>2、大昭寺</h4><p>大昭寺位于拉萨老城区中心，是一座藏传佛教寺院，是藏王松赞干布于唐贞观21年建造，寺内主供的释迦牟尼12岁等身像(该佛像后从古印度流入中国，又经唐代文成公主带入西藏)。拉萨之所以有“圣地”之誉与这座佛像有关，寺庙最初称“惹萨”，后来惹萨又成为这座城市的名称，并演化成当下的“拉萨”。–所以是先有大昭寺后有拉萨城。大昭寺是西藏现存最辉煌的吐蕃时期的建筑，也是西藏最早的土木结构建筑。</p><p>转经：环大昭寺内中心的释迦牟尼佛殿一圈称为“囊廓”(内经)，环大昭寺外墙一圈称为“八廓”(中经)，大昭寺外辐射出的街道叫“八廓街”即八角街。以大昭寺为中心，将布达拉宫、药王山、小昭寺包括进来的一大圈称为“林廓”(外经)。这从内到外的3个环型，便是藏民们行转经仪式的路线。</p><h4 id="3、小昭寺"><a href="#3、小昭寺" class="headerlink" title="3、小昭寺"></a>3、小昭寺</h4><p>相传文成公主入藏时带了一尊释迦牟尼十二岁等身像，行至在小昭寺位置时，木车陷入沙地中。公主通过小昭寺历算，决定把释迦牟尼佛像安放此处供奉，遂建小昭寺。这座寺庙由文成公主主持修建，与大昭寺同时开工，同时告竣，同时开光；大门朝东，以寄托这位公主对家乡父母的思念。后以此为基建小昭寺。</p><p>传说：两位公主各自带来了一尊珍贵的释迦牟尼的佛像。作为最贵重的陪嫁，尼泊尔尺尊公主带来的是释迦牟尼八岁时的等身像；文成公主从内地的长安请来的是另一尊十二岁的释迦牟尼等身佛像。藏民公认这两尊佛像是最早进入雪域高原的佛像，然后为了供养这么神圣的佛像，松赞干布就开始修建了大昭寺(12岁等身像)和小昭寺(8岁等身像)。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;时间：4.5-4.7

路线：往返飞。深圳-&amp;gt;重庆-&amp;gt;拉萨，拉萨-&amp;gt;西安-&amp;gt;深圳。

行李：冲锋衣、羽绒服、保暖内衣、登山鞋、太阳镜、遮阳帽、防晒霜。

注意：进藏前最好提前一周喝红景天(泡水)；带上水杯，多喝热水、不要喝冷水。
&lt;/
      
    
    </summary>
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>如何修炼气质</title>
    <link href="http://hawkyAndroid.github.io/2019/01/30/summary-practice-temperament/"/>
    <id>http://hawkyAndroid.github.io/2019/01/30/summary-practice-temperament/</id>
    <published>2019-01-30T12:57:10.000Z</published>
    <updated>2019-01-30T13:47:33.606Z</updated>
    
    <content type="html"><![CDATA[<h3 id="沉稳"><a href="#沉稳" class="headerlink" title="沉稳"></a>沉稳</h3><p>1、不要随便显露你的情绪</p><p>2、不说脏话</p><p>3、说话语速适当，不要慌张、走路也一样</p><h3 id="大度"><a href="#大度" class="headerlink" title="大度"></a>大度</h3><p>1、金钱上要大方，但不能随意</p><p>2、对别人的小过失、小错误不要斤斤计较</p><p>3、不要有权利的傲慢和知识的偏见</p><h3 id="诚实"><a href="#诚实" class="headerlink" title="诚实"></a>诚实</h3><p>1、做不到的事情不要说</p><p>2、不要满嘴跑火车</p><p>3、答应朋友的事一定要兑现</p><h3 id="细心"><a href="#细心" class="headerlink" title="细心"></a>细心</h3><p>1、和小孩说话尽量弯腰和蹲下</p><p>2、点菜时尽量照顾到每个人的口味</p><p>3、做什么事情都要养成有条不紊的习惯</p><h3 id="胆识"><a href="#胆识" class="headerlink" title="胆识"></a>胆识</h3><p>1、不要经常使用缺乏自信的语言</p><p>2、不要常常反悔、秃露反帐</p><p>3、事件不顺时歇口气，重新寻找突破口，就算结束也要有始有终，干净利落。</p><h3 id="什么是自由？"><a href="#什么是自由？" class="headerlink" title="什么是自由？"></a>什么是自由？</h3><p>只有当你试着去发现、理解自己与他人之间的基本关系，并且诚心地去履行你的责任，而不管这个责任是否会让你感到舒适、轻松，你才有可能获得真正的自由。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;沉稳&quot;&gt;&lt;a href=&quot;#沉稳&quot; class=&quot;headerlink&quot; title=&quot;沉稳&quot;&gt;&lt;/a&gt;沉稳&lt;/h3&gt;&lt;p&gt;1、不要随便显露你的情绪&lt;/p&gt;
&lt;p&gt;2、不说脏话&lt;/p&gt;
&lt;p&gt;3、说话语速适当，不要慌张、走路也一样&lt;/p&gt;
&lt;h3 id=&quot;大度&quot;&gt;
      
    
    </summary>
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>Android View之Xfermode</title>
    <link href="http://hawkyAndroid.github.io/2019/01/04/summary-view-porterduffxfermode/"/>
    <id>http://hawkyAndroid.github.io/2019/01/04/summary-view-porterduffxfermode/</id>
    <published>2019-01-04T12:18:55.000Z</published>
    <updated>2019-01-16T14:04:09.413Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）-Xfermode-概述"><a href="#（一）-Xfermode-概述" class="headerlink" title="（一） Xfermode 概述"></a>（一） Xfermode 概述</h3><p>Xfermode图层混合模式：主要用于处理图形图像的绘制。最常用也是最核心的就是其子类PorterDuffXfermode，而PorterDuffXfermode使用的是 PorterDuff 模式创建一个图层混合模式，PorterDuff用于(2D)数字图像的合成。</p><h3 id="（二）-PorterDuff-Mode-枚举"><a href="#（二）-PorterDuff-Mode-枚举" class="headerlink" title="（二） PorterDuff.Mode 枚举"></a>（二） PorterDuff.Mode 枚举</h3><p><a href="https://developer.android.com/reference/android/graphics/PorterDuff.Mode" target="_blank" rel="noopener">PorterDuff.Mode</a> 定义了18种混合模式：</p><table><thead><tr><th>PorterDuff.Mode</th><th>Desc</th></tr></thead><tbody><tr><td>ADD</td><td>Saturate(S + D)</td></tr><tr><td>CLEAR</td><td>[0, 0]</td></tr><tr><td>DARKEN</td><td>[Sa + Da - Sa<em>Da, Sc</em>(1 - Da) + Dc*(1 - Sa) + min(Sc, Dc)]</td></tr><tr><td>DST</td><td>[Da, Dc]</td></tr><tr><td>DST_ATOP</td><td>[Sa, Sa <em> Dc + Sc </em> (1 - Da)]</td></tr><tr><td>DST_IN</td><td>[Sa <em> Da, Sa </em> Dc]</td></tr><tr><td>DST_OUT</td><td>[Da <em> (1 - Sa), Dc </em> (1 - Sa)]</td></tr><tr><td>DST_OVER</td><td>[Sa + (1 - Sa)<em>Da, Rc = Dc + (1 - Da)</em>Sc]</td></tr><tr><td>LIGHTEN</td><td>[Sa + Da - Sa<em>Da, Sc</em>(1 - Da) + Dc*(1 - Sa) + max(Sc, Dc)]</td></tr><tr><td>MULTIPLY</td><td>[Sa <em> Da, Sc </em> Dc]</td></tr><tr><td>OVERLAY</td><td></td></tr><tr><td>SCREEN</td><td>[Sa + Da - Sa <em> Da, Sc + Dc - Sc </em> Dc]</td></tr><tr><td>SRC</td><td>[Sa, Sc]</td></tr><tr><td>SRC_ATOP</td><td>[Da, Sc <em> Da + (1 - Sa) </em> Dc]</td></tr><tr><td>SRC_IN</td><td>[Sa <em> Da, Sc </em> Da]</td></tr><tr><td>SRC_OUT</td><td>[Sa <em> (1 - Da), Sc </em> (1 - Da)]</td></tr><tr><td>SRC_OVER</td><td>[Sa + (1 - Sa)<em>Da, Rc = Sc + (1 - Sa)</em>Dc]</td></tr><tr><td>XOR</td><td>[Sa + Da - 2 <em> Sa </em> Da, Sc <em> (1 - Da) + (1 - Sa) </em> Dc]</td></tr></tbody></table><p>其中： Sa 代表source alpha，Da 代表 Destination alpha ，Sc 代表 source color，Dc 代表 Destination color。</p><pre><code>1、 SRC       只保留源图像的 alpha 和 color2、 DST       只保留目标图像的 alpha 和 color3、 SRC_OVER  在目标图片顶部绘制源图像4、 DST_OVER  将目标图像绘制在上方5、 SRC_IN    在两者相交的地方绘制源图像，并且绘制的效果会受到目标图像对应地方透明度的影响；6、 DST_IN    在两者相交的地方绘制目标图像，并且绘制的效果会受到源图像对应地方透明度的影响；7、 SRC_OUT   在不相交的地方绘制源图像，相交处根据目标alpha进行过滤，目标色完全不透明时则完全过滤，完全透明则不过滤；8、 DST_OUT   在不相交的地方绘制目标图像，相交处根据源图像alpha进行过滤，完全不透明处则完全过滤，完全透明则不过滤；9、 SRC_ATOP  源图像和目标图像相交处绘制源图像，不相交的地方绘制目标图像，并且相交处的效果会受到源图像和目标图像alpha的影响；10、DST_ATOP  源图像和目标图像相交处绘制目标图像，不相交的地方绘制源图像，并且相交处的效果会受到源图像和目标图像alpha的影响；11、 XOR      在不相交的地方按原样绘制源图像和目标图像，相交的地方受到对应alpha和色值影响，按上面公式进行计算，如果都完全不透明则相交处完全不绘制；12、 DARKEN   该模式处理过后，会感觉效果变暗，即进行对应像素的比较，取较暗值，如果色值相同则进行混合；13、 LIGHTEN  如果在均完全不透明的情况下 ，色值取源色值和目标色值中的较大值，否则按上面算法进行计算；14、 MULTIPLY 正片叠底，即查看每个通道中的颜色信息，并将基色与混合色复合。结果色总是较暗的颜色。15、 SCREEN   滤色，滤色模式与我们所用的显示屏原理相同。16、 ADD     饱和度叠加17、 OVERLAY 像素是进行 Multiply （正片叠底）混合还是 Screen （屏幕）混合，取决于底层颜色，但底层颜色的高光与阴影部分的亮度细节会被保留；18、 CLEAR   所有点的像素的alpha 和color 都为 0。</code></pre><h4 id="图像合成效果图"><a href="#图像合成效果图" class="headerlink" title="图像合成效果图"></a>图像合成效果图</h4><p><img src="https://upload-images.jianshu.io/upload_images/2041548-d964105abf4be5d9.jpg?imageMogr2/auto-orient/" alt="图像合成效果图"></p><h3 id="（三）-PorterDuffXfermode-实例"><a href="#（三）-PorterDuffXfermode-实例" class="headerlink" title="（三） PorterDuffXfermode 实例"></a>（三） PorterDuffXfermode 实例</h3><p>1、基础效果<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   - Xfermode 图层混合模式的使用</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PorterDuffXfermodeView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图层混合模式</span></span><br><span class="line">    <span class="keyword">private</span> Xfermode mXfermode;</span><br><span class="line">    <span class="comment">// 控件大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mHeight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Bitmap mSourceBitmap;</span><br><span class="line">    <span class="keyword">private</span> Bitmap mDestBitmap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Rect mBottomSrcRect;</span><br><span class="line">    <span class="keyword">private</span> Rect mBottomDestRect;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Rect mTopSrcRect;</span><br><span class="line">    <span class="keyword">private</span> Rect mTopDestRect;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PorterDuffXfermodeView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PorterDuffXfermodeView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        mSourceBitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_src);</span><br><span class="line">        mDestBitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_dest);</span><br><span class="line"></span><br><span class="line">        mXfermode = <span class="keyword">new</span> PorterDuffXfermode(PorterDuff.Mode.SRC);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        mWidth = w;</span><br><span class="line">        mHeight = h;</span><br><span class="line">        mBottomSrcRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, mDestBitmap.getWidth(), mDestBitmap.getHeight());</span><br><span class="line">        mBottomDestRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, mWidth, mHeight / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        mTopSrcRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, mSourceBitmap.getWidth(), mSourceBitmap.getHeight());</span><br><span class="line">        mTopDestRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, mWidth, mHeight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        canvas.drawColor(Color.WHITE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里会生成了一个全新的bitmap，之后所有的绘图操作都是在这个bitmap上进行的</span></span><br><span class="line">        <span class="comment">// 目的是区分哪一步的图形,应该与合成模式的bitmap去合成 运算；</span></span><br><span class="line">        <span class="keyword">int</span> saveCount = canvas.saveLayer(<span class="number">0</span>, <span class="number">0</span>, mWidth, mHeight, mPaint, Canvas.ALL_SAVE_FLAG);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注意：先绘制目标图（底部）</span></span><br><span class="line">        canvas.drawBitmap(mDestBitmap, mBottomSrcRect, mBottomDestRect, mPaint);</span><br><span class="line">        <span class="comment">// 设置转换模式</span></span><br><span class="line">        mPaint.setXfermode(mXfermode);</span><br><span class="line">        <span class="comment">// 绘制源图 （顶部）</span></span><br><span class="line">        canvas.drawBitmap(mSourceBitmap, mTopSrcRect, mTopDestRect, mPaint);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清除转换模式</span></span><br><span class="line">        mPaint.setXfermode(<span class="keyword">null</span>);</span><br><span class="line">        canvas.restoreToCount(saveCount);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2、进度上色效果<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Xfermode 进度上色效果</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XfermodeLoadingColorView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="comment">// 控件大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mHeight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Xfermode mXfermode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 目标图</span></span><br><span class="line">    <span class="keyword">private</span> Bitmap mDestBitmap;</span><br><span class="line">    <span class="keyword">private</span> Rect mSrcRect;</span><br><span class="line">    <span class="keyword">private</span> Rect mDestRect;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 源图</span></span><br><span class="line">    <span class="keyword">private</span> Rect mDynamicRect;</span><br><span class="line">    <span class="comment">// 起点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mSrcStart;</span><br><span class="line">    <span class="comment">// 终点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mSrcEnd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XfermodeLoadingColorView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">XfermodeLoadingColorView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);<span class="comment">// 去锯齿</span></span><br><span class="line">        mPaint.setDither(<span class="keyword">true</span>);<span class="comment">// 防抖动</span></span><br><span class="line">        mPaint.setFilterBitmap(<span class="keyword">true</span>);</span><br><span class="line">        mPaint.setColor(Color.RED);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化Bitmap</span></span><br><span class="line">        BitmapFactory.Options options = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        options.inSampleSize = <span class="number">2</span>;<span class="comment">// 缩小2倍</span></span><br><span class="line">        mDestBitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_xfermode_dest, options);</span><br><span class="line">        mSrcRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, mDestBitmap.getWidth(), mDestBitmap.getHeight());</span><br><span class="line">        mDestRect = <span class="keyword">new</span> Rect();</span><br><span class="line">        mDynamicRect = <span class="keyword">new</span> Rect();</span><br><span class="line"></span><br><span class="line">        mXfermode = <span class="keyword">new</span> PorterDuffXfermode(PorterDuff.Mode.SRC_IN);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        mWidth = w;</span><br><span class="line">        mHeight = h;</span><br><span class="line"></span><br><span class="line">        mDestRect.set((w - mDestBitmap.getWidth()) / <span class="number">2</span>, (h - mDestBitmap.getHeight()) / <span class="number">2</span>, (w + mDestBitmap.getWidth()) / <span class="number">2</span>, (h + mDestBitmap.getHeight()) / <span class="number">2</span>);</span><br><span class="line">        mDynamicRect.set((w - mDestBitmap.getWidth()) / <span class="number">2</span>, (h + mDestBitmap.getHeight()) / <span class="number">2</span>, (w + mDestBitmap.getWidth()) / <span class="number">2</span>, (h + mDestBitmap.getHeight()) / <span class="number">2</span>);</span><br><span class="line">        mSrcStart = (h + mDestBitmap.getHeight()) / <span class="number">2</span>;</span><br><span class="line">        mSrcEnd = (h - mDestBitmap.getHeight()) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        <span class="keyword">int</span> saveCount = canvas.saveLayer(<span class="number">0</span>, <span class="number">0</span>, mWidth, mHeight, mPaint, Canvas.ALL_SAVE_FLAG);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先绘制目标图</span></span><br><span class="line">        canvas.drawBitmap(mDestBitmap, mSrcRect, mDestRect, mPaint);</span><br><span class="line">        <span class="comment">// 设置混合模式</span></span><br><span class="line">        mPaint.setXfermode(mXfermode);</span><br><span class="line">        <span class="comment">// 绘制源图</span></span><br><span class="line">        canvas.drawRect(mDynamicRect, mPaint);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清除混合模式</span></span><br><span class="line">        mPaint.setXfermode(<span class="keyword">null</span>);</span><br><span class="line">        canvas.restoreToCount(saveCount);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ValueAnimator animator = ValueAnimator.ofInt(mSrcStart, mSrcEnd);</span><br><span class="line">        animator.setInterpolator(<span class="keyword">new</span> LinearInterpolator());</span><br><span class="line">        animator.setRepeatCount(-<span class="number">1</span>);</span><br><span class="line">        animator.setDuration(<span class="number">3000</span>);</span><br><span class="line">        animator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</span><br><span class="line">                mDynamicRect.top = (<span class="keyword">int</span>) animation.getAnimatedValue();</span><br><span class="line">                invalidate();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        animator.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3、橡皮檫效果<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Xfermode 橡皮擦效果</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EraserView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 背景图</span></span><br><span class="line">    <span class="keyword">private</span> Bitmap mBgBitmap;</span><br><span class="line">    <span class="comment">// 前景图（目标图）</span></span><br><span class="line">    <span class="keyword">private</span> Bitmap mDestBitmap;</span><br><span class="line">    <span class="comment">// 手指轨迹（源图）</span></span><br><span class="line">    <span class="keyword">private</span> Path mSrcPath;</span><br><span class="line">    <span class="comment">// 轨迹画布</span></span><br><span class="line">    <span class="keyword">private</span> Canvas mTrackCanvas;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录最后一个点的坐标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mLastX;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mLastY;</span><br><span class="line">    <span class="comment">// 最小移动距离</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mMinMoveDst;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EraserView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EraserView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mPaint.setDither(<span class="keyword">true</span>);<span class="comment">// 防抖动</span></span><br><span class="line">        mPaint.setAlpha(<span class="number">0</span>);<span class="comment">// 让绘制的路径是透明的</span></span><br><span class="line">        mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        mPaint.setStrokeWidth(DensityUtils.dip2px(context, <span class="number">10</span>));</span><br><span class="line">        mPaint.setStrokeJoin(Paint.Join.ROUND);<span class="comment">// 拐角</span></span><br><span class="line">        mPaint.setStrokeCap(Paint.Cap.ROUND);<span class="comment">// 落笔</span></span><br><span class="line">        mSrcPath = <span class="keyword">new</span> Path();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] screenSize = ScreenUtil.getScreenSize(context);</span><br><span class="line">        mMinMoveDst = DensityUtils.dip2px(context, <span class="number">5</span>);</span><br><span class="line">        mBgBitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.img_bg);</span><br><span class="line">        mBgBitmap = Bitmap.createScaledBitmap(mBgBitmap, screenSize[<span class="number">0</span>], screenSize[<span class="number">1</span>], <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 要擦除的前景图（目标图）</span></span><br><span class="line">        mDestBitmap = Bitmap.createBitmap(mBgBitmap.getWidth(), mBgBitmap.getHeight(), Bitmap.Config.ARGB_8888);</span><br><span class="line">        <span class="comment">// 将手指轨迹关联到目标画布上</span></span><br><span class="line">        mTrackCanvas = <span class="keyword">new</span> Canvas(mDestBitmap);</span><br><span class="line">        <span class="comment">// 绘制画布背景为中性灰</span></span><br><span class="line">        mTrackCanvas.drawColor(Color.LTGRAY);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在两者相交的地方绘制目标图像</span></span><br><span class="line">        mPaint.setXfermode(<span class="keyword">new</span> PorterDuffXfermode(PorterDuff.Mode.DST_IN));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> x = event.getX();</span><br><span class="line">        <span class="keyword">float</span> y = event.getY();</span><br><span class="line">        <span class="keyword">switch</span> (event.getAction()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">                mSrcPath.reset();</span><br><span class="line">                mSrcPath.moveTo(x, y);</span><br><span class="line">                mLastX = x;</span><br><span class="line">                mLastY = y;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                <span class="keyword">float</span> dx = Math.abs(x - mLastX);</span><br><span class="line">                <span class="keyword">float</span> dy = Math.abs(y - mLastY);</span><br><span class="line">                <span class="keyword">if</span> (dx &gt; mMinMoveDst || dy &gt; mMinMoveDst) &#123;</span><br><span class="line">                    mSrcPath.quadTo(mLastX, mLastY, (x + mLastX) / <span class="number">2</span>, (y + mLastY) / <span class="number">2</span>);</span><br><span class="line">                    mLastX = x;</span><br><span class="line">                    mLastY = y;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">        canvas.drawBitmap(mBgBitmap, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);</span><br><span class="line">        canvas.drawBitmap(mDestBitmap, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制手指轨迹（源图）</span></span><br><span class="line">        mTrackCanvas.drawPath(mSrcPath, mPaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reset</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mTrackCanvas.drawColor(Color.LTGRAY);</span><br><span class="line">        mSrcPath.reset();</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）-Xfermode-概述&quot;&gt;&lt;a href=&quot;#（一）-Xfermode-概述&quot; class=&quot;headerlink&quot; title=&quot;（一） Xfermode 概述&quot;&gt;&lt;/a&gt;（一） Xfermode 概述&lt;/h3&gt;&lt;p&gt;Xfermode图层混合模式：主要用
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>Android View之扇形进度动画</title>
    <link href="http://hawkyAndroid.github.io/2019/01/03/summary-view-fanprogress/"/>
    <id>http://hawkyAndroid.github.io/2019/01/03/summary-view-fanprogress/</id>
    <published>2019-01-03T14:34:55.000Z</published>
    <updated>2019-01-03T16:23:28.898Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）扇形进度思路"><a href="#（一）扇形进度思路" class="headerlink" title="（一）扇形进度思路"></a>（一）扇形进度思路</h3><p>1、绘制边界</p><p>2、绘制左半圆<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据当前进度算出进度条的位置</span></span><br><span class="line"><span class="comment">// （思路：进度关联进度条位置，进而关联到圆心角）</span></span><br><span class="line">mCurrentProgressPosition = mProgress * mProgressWidth / TOTAL_PROGRESS;</span><br><span class="line"><span class="comment">// 算出圆心角</span></span><br><span class="line"><span class="keyword">float</span> angle = (<span class="keyword">float</span>) Math.toDegrees(Math.acos((mArcRadius - mCurrentProgressPosition) / mArcRadius));</span><br><span class="line"><span class="comment">// 再根据进度绘制扇形</span></span><br><span class="line">canvas.drawArc(mArcRectF, <span class="number">180</span> - angle, <span class="number">2</span> * angle, <span class="keyword">false</span>, mPaint);</span><br></pre></td></tr></table></figure></p><p>3、绘制右边矩形<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 绘制左边半圆</span></span><br><span class="line">canvas.drawArc(mArcRectF, <span class="number">90</span>, <span class="number">180</span>, <span class="keyword">false</span>, mPaint);</span><br><span class="line"><span class="comment">// 更新矩形右边坐标</span></span><br><span class="line">mRectF.right = mLeftMargin + mCurrentProgressPosition;</span><br><span class="line"><span class="comment">// 再绘制右边矩形</span></span><br><span class="line"><span class="comment">//（思路：通过关联的进度不断更新待绘制的矩形区域）</span></span><br><span class="line"> canvas.drawRect(mRectF, mPaint);</span><br></pre></td></tr></table></figure></p><p>4、暴露接口、更新数据及动画</p><h3 id="（二）扇形进度实现"><a href="#（二）扇形进度实现" class="headerlink" title="（二）扇形进度实现"></a>（二）扇形进度实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 带扇形的进度动画</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FanProgressView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TOTAL_PROGRESS = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前进度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mProgress;</span><br><span class="line">    <span class="comment">// 进度条宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mProgressWidth;</span><br><span class="line">    <span class="comment">// 当前进度条的位置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mCurrentProgressPosition;</span><br><span class="line">    <span class="comment">// 扇形半径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mArcRadius;</span><br><span class="line">    <span class="comment">// 左右边距</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mLeftMargin;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mRightMargin;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 扇形区域</span></span><br><span class="line">    <span class="keyword">private</span> RectF mArcRectF;</span><br><span class="line">    <span class="comment">// 矩形区域</span></span><br><span class="line">    <span class="keyword">private</span> RectF mRectF;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FanProgressView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FanProgressView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mArcRectF = <span class="keyword">new</span> RectF();</span><br><span class="line">        mRectF = <span class="keyword">new</span> RectF();</span><br><span class="line"></span><br><span class="line">        mLeftMargin = DensityUtils.dip2px(context, <span class="number">10</span>);</span><br><span class="line">        mRightMargin = DensityUtils.dip2px(context, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        mProgressWidth = w - mLeftMargin - mRightMargin;</span><br><span class="line">        mArcRadius = (h - <span class="number">2</span> * mLeftMargin) / <span class="number">2.0f</span>;</span><br><span class="line">        mArcRectF.set(mLeftMargin, mLeftMargin, <span class="number">2</span> * mArcRadius + mLeftMargin, <span class="number">2</span> * mArcRadius + mLeftMargin);</span><br><span class="line">        mRectF.set(mArcRadius + mLeftMargin, mLeftMargin, mLeftMargin + mCurrentProgressPosition, <span class="number">2</span> * mArcRadius + mLeftMargin);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        drawBoundary(canvas);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据当前进度算出进度条的位置</span></span><br><span class="line">        mCurrentProgressPosition = mProgress * mProgressWidth / TOTAL_PROGRESS;</span><br><span class="line">        mPaint.setStyle(Paint.Style.FILL);</span><br><span class="line">        <span class="keyword">if</span> (mCurrentProgressPosition &lt; mArcRadius) &#123; <span class="comment">// 左边：半圆弧</span></span><br><span class="line">            <span class="comment">// 圆心角</span></span><br><span class="line">            <span class="keyword">float</span> angle = (<span class="keyword">float</span>) Math.toDegrees(Math.acos((mArcRadius - mCurrentProgressPosition) / mArcRadius));</span><br><span class="line">            mPaint.setColor(Color.YELLOW);</span><br><span class="line">            canvas.drawArc(mArcRectF, <span class="number">180</span> - angle, <span class="number">2</span> * angle, <span class="keyword">false</span>, mPaint);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="comment">// 右边：矩形</span></span><br><span class="line">            <span class="comment">// 绘制左边半圆</span></span><br><span class="line">            mPaint.setColor(Color.YELLOW);</span><br><span class="line">            canvas.drawArc(mArcRectF, <span class="number">90</span>, <span class="number">180</span>, <span class="keyword">false</span>, mPaint);</span><br><span class="line">            mRectF.right = mLeftMargin + mCurrentProgressPosition;</span><br><span class="line">            <span class="comment">// 绘制右边矩形</span></span><br><span class="line">            mPaint.setColor(Color.GREEN);</span><br><span class="line">            canvas.drawRect(mRectF, mPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 绘制边界</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawBoundary</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        canvas.drawColor(Color.LTGRAY);</span><br><span class="line">        mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        mPaint.setStrokeWidth(<span class="number">5F</span>);</span><br><span class="line">        mPaint.setColor(Color.RED);</span><br><span class="line">        <span class="comment">// 绘制左半边弧形</span></span><br><span class="line">        canvas.drawArc(mArcRectF, <span class="number">90</span>, <span class="number">180</span>, <span class="keyword">false</span>, mPaint);</span><br><span class="line">        <span class="comment">// 绘制右边矩形</span></span><br><span class="line">        canvas.drawLine(mArcRadius + mLeftMargin, mLeftMargin, mProgressWidth + mLeftMargin, mLeftMargin, mPaint);</span><br><span class="line">        canvas.drawLine(mArcRadius + mLeftMargin, mLeftMargin + <span class="number">2</span> * mArcRadius, mProgressWidth + mLeftMargin, mLeftMargin + <span class="number">2</span> * mArcRadius, mPaint);</span><br><span class="line">        canvas.drawLine(mProgressWidth + mLeftMargin, mLeftMargin, mProgressWidth + mLeftMargin, mLeftMargin + <span class="number">2</span> * mArcRadius, mPaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新进度</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> progress 当前进度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProgress</span><span class="params">(<span class="keyword">int</span> progress)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mProgress = progress;</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方便属性动画更新属性progress的值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getProgress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mProgress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）扇形进度思路&quot;&gt;&lt;a href=&quot;#（一）扇形进度思路&quot; class=&quot;headerlink&quot; title=&quot;（一）扇形进度思路&quot;&gt;&lt;/a&gt;（一）扇形进度思路&lt;/h3&gt;&lt;p&gt;1、绘制边界&lt;/p&gt;
&lt;p&gt;2、绘制左半圆&lt;br&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>Android View之Shader</title>
    <link href="http://hawkyAndroid.github.io/2019/01/02/summery-view-shader/"/>
    <id>http://hawkyAndroid.github.io/2019/01/02/summery-view-shader/</id>
    <published>2019-01-02T11:34:55.000Z</published>
    <updated>2019-01-03T16:08:57.991Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）Shader概述"><a href="#（一）Shader概述" class="headerlink" title="（一）Shader概述"></a>（一）Shader概述</h3><p>Shader是着色器，其作用是给图像着色，配合画笔Paint使用。一般不直接使用，它有自己的子类：BitmapShader、LinearGradient、SweepGradient、RadialGradient、ComposeShader等。</p><h3 id="（二）TileMode平铺模式"><a href="#（二）TileMode平铺模式" class="headerlink" title="（二）TileMode平铺模式"></a>（二）TileMode平铺模式</h3><h4 id="1-gt-Shader-TileMode-CLAMP："><a href="#1-gt-Shader-TileMode-CLAMP：" class="headerlink" title="1&gt; Shader.TileMode.CLAMP："></a>1&gt; Shader.TileMode.CLAMP：</h4><p>边缘拉伸模式，边缘会往外拉伸的一个像素来填充区域。</p><h4 id="2-gt-Shader-TileMode-MIRROR："><a href="#2-gt-Shader-TileMode-MIRROR：" class="headerlink" title="2&gt; Shader.TileMode.MIRROR："></a>2&gt; Shader.TileMode.MIRROR：</h4><p>镜像模式，关于X轴/Y轴（镜面对称）翻转复制。</p><h4 id="3-gt-Shader-TileMode-REPEAT"><a href="#3-gt-Shader-TileMode-REPEAT" class="headerlink" title="3&gt; Shader.TileMode.REPEAT:"></a>3&gt; Shader.TileMode.REPEAT:</h4><p>重复模式，关于X轴/Y轴平移复制。</p><h3 id="（三）Shader实例"><a href="#（三）Shader实例" class="headerlink" title="（三）Shader实例"></a>（三）Shader实例</h3><h4 id="BitmapShader-的用法："><a href="#BitmapShader-的用法：" class="headerlink" title="BitmapShader 的用法："></a>BitmapShader 的用法：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 调用它来创建一个新的着色器，它将用位图绘制。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bitmap 在着色器内部使用的位图。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> tileX  在X轴绘制位图的平铺模式。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> tileY  在Y轴绘制位图的平铺模式。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">mBitmapShader = <span class="keyword">new</span> BitmapShader(mBitmap, Shader.TileMode.MIRROR, Shader.TileMode.MIRROR);</span><br><span class="line"><span class="comment">// 添加着色器</span></span><br><span class="line">mPaint.setShader(mBitmapShader);</span><br><span class="line">canvas.drawCircle(<span class="number">0</span>, <span class="number">0</span>, <span class="number">400</span>, mPaint);</span><br></pre></td></tr></table></figure><h4 id="LinearGradient-的用法"><a href="#LinearGradient-的用法" class="headerlink" title="LinearGradient 的用法:"></a>LinearGradient 的用法:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 线性渐变着色器。注意：起点和终点是相对于屏幕坐标系而言的。</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> (x0, y0) 渐变起点</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> (x1, y1) 渐变终点</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> color0 起点的颜色</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> color1 终点的颜色</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> title 平铺模式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">mShader = <span class="keyword">new</span> LinearGradient(<span class="keyword">float</span> x0, <span class="keyword">float</span> y0, <span class="keyword">float</span> x1, <span class="keyword">float</span> y1, <span class="keyword">int</span> color0, <span class="keyword">int</span> color1, Shader.TileMode tile);</span><br><span class="line">mPaint.setShader(mShader);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 线性渐变着色器。注意：渐变区域遵循(left, top, right, bottom)。</span></span><br><span class="line"><span class="comment">* (x0, y0) 渐变起点</span></span><br><span class="line"><span class="comment">* (x1, y1) 渐变终点</span></span><br><span class="line"><span class="comment">* colors 传入颜色数组</span></span><br><span class="line"><span class="comment">* positions 传入位置数组(可以为null)  取值范围[0, 1F]</span></span><br><span class="line"><span class="comment">* title 平铺模式</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">mShader = <span class="keyword">new</span> LinearGradient(-<span class="number">200</span>, -<span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;Color.RED, Color.YELLOW, Color.GREEN, Color.BLUE&#125;,</span><br><span class="line"><span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0</span>, <span class="number">0.3F</span>, <span class="number">0.6F</span>, <span class="number">0.8F</span>&#125;, Shader.TileMode.CLAMP);</span><br><span class="line">mPaint.setShader(mShader);</span><br></pre></td></tr></table></figure><h4 id="SweepGradient-的用法"><a href="#SweepGradient-的用法" class="headerlink" title="SweepGradient 的用法"></a>SweepGradient 的用法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 梯度渐变着色器，围绕中心点绘制扫描梯度。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> cx       The x-coordinate of the center</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> cy       The y-coordinate of the center</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> color0   The color to use at the start of the sweep</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> color1   The color to use at the end of the sweep</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">mShader = <span class="keyword">new</span> SweepGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">int</span> color0, <span class="keyword">int</span> color1);</span><br><span class="line">mPaint.setShader(mShader);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 梯度渐变着色器，围绕中心点绘制扫描梯度。</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> cx       The x-coordinate of the center</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> cy       The y-coordinate of the center</span></span><br><span class="line"><span class="comment">* colors 传入颜色数组</span></span><br><span class="line"><span class="comment">* positions 传入位置数组(可以为null)  取值范围[0, 1F]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">mShader = <span class="keyword">new</span> SweepGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;Color.RED, Color.YELLOW, Color.GREEN&#125;, <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0.2F</span>, <span class="number">0.5F</span>, <span class="number">0.8F</span>&#125;);</span><br><span class="line">mPaint.setShader(mShader);</span><br></pre></td></tr></table></figure><h4 id="RadialGradient-的用法"><a href="#RadialGradient-的用法" class="headerlink" title="RadialGradient 的用法"></a>RadialGradient 的用法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 径向渐变着色器，从圆形中心向四周渐变。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> centerX     The x-coordinate of the center of the radius</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> centerY     The y-coordinate of the center of the radius</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> radius      Must be positive. The radius of the circle for this gradient</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> centerColor The color at the center of the circle.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> edgeColor   The color at the edge of the circle.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> tileMode    The Shader tiling mode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">mShader = <span class="keyword">new</span> RadialGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, Color.RED, Color.YELLOW, Shader.TileMode.CLAMP);</span><br><span class="line">mPaint.setShader(mShader);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 径向渐变着色器，从圆形中心向四周渐变。</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> centerX     The x-coordinate of the center of the radius</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> centerY     The y-coordinate of the center of the radius</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> radius      Must be positive. The radius of the circle for this gradient</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> centerColor The color at the center of the circle.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> edgeColor   The color at the edge of the circle.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> tileMode    The Shader tiling mode</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">mShader = <span class="keyword">new</span> RadialGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;Color.RED, Color.YELLOW, Color.BLUE&#125;,</span><br><span class="line"> <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0.1F</span>, <span class="number">0.4F</span>, <span class="number">0.5F</span>&#125;, Shader.TileMode.CLAMP);</span><br><span class="line">mPaint.setShader(mShader);</span><br></pre></td></tr></table></figure><h4 id="ComposeShader-的用法"><a href="#ComposeShader-的用法" class="headerlink" title="ComposeShader 的用法"></a>ComposeShader 的用法</h4><p>两个Shader组合在一起作为一个新Shader<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Shader shader01 = <span class="keyword">new</span> BitmapShader(mBitmap, Shader.TileMode.MIRROR, Shader.TileMode.MIRROR);</span><br><span class="line">Shader shader02 = <span class="keyword">new</span> SweepGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;Color.RED, Color.YELLOW, Color.GREEN&#125;, <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0.2F</span>, <span class="number">0.5F</span>, <span class="number">0.8F</span>&#125;);</span><br><span class="line"></span><br><span class="line">mPaint.setShader(<span class="keyword">new</span> ComposeShader(shader01, shader02, PorterDuff.Mode.DARKEN));</span><br><span class="line">canvas.drawCircle(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, mPaint);</span><br></pre></td></tr></table></figure></p><h4 id="Shader的矩阵变换"><a href="#Shader的矩阵变换" class="headerlink" title="Shader的矩阵变换"></a>Shader的矩阵变换</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Matrix matrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">matrix.preTranslate(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">matrix.preRotate(<span class="number">20</span>);</span><br><span class="line">matrix.preScale(<span class="number">0.5f</span>, <span class="number">1</span>);</span><br><span class="line">matrix.preSkew(<span class="number">2f</span>, <span class="number">1f</span>);</span><br><span class="line"><span class="comment">// 设置Shader的变换矩阵</span></span><br><span class="line">mShader.setLocalMatrix(matrix);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）Shader概述&quot;&gt;&lt;a href=&quot;#（一）Shader概述&quot; class=&quot;headerlink&quot; title=&quot;（一）Shader概述&quot;&gt;&lt;/a&gt;（一）Shader概述&lt;/h3&gt;&lt;p&gt;Shader是着色器，其作用是给图像着色，配合画笔Paint使用。一
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>2019年度计划</title>
    <link href="http://hawkyAndroid.github.io/2019/01/01/annual-plan-for-2019/"/>
    <id>http://hawkyAndroid.github.io/2019/01/01/annual-plan-for-2019/</id>
    <published>2019-01-01T14:08:07.000Z</published>
    <updated>2019-08-04T12:26:18.149Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2018年度总结"><a href="#2018年度总结" class="headerlink" title="2018年度总结"></a>2018年度总结</h2><p>这年真的过得很快，很多事情感觉都没来得及准备或者开始就结束了。</p><pre><code>1. 技能：拿了驾照。2. 旅游：去了一趟日本旅游。3. 书籍：看来不少技术方面的纸质书籍及投资方面的电子书。4. 专业：熟悉了Android性能优化、基本掌握了自定义View。</code></pre><h2 id="2019年度计划"><a href="#2019年度计划" class="headerlink" title="2019年度计划"></a>2019年度计划</h2><p>2019关键词：改变。【思维、眼界、执行力、自信】</p><pre><code>1. 婚姻：找个女票结婚。2. 身体：练就2块腹肌。3. 证书：拿教师资格证。4. 学习：Kotlin语言。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;2018年度总结&quot;&gt;&lt;a href=&quot;#2018年度总结&quot; class=&quot;headerlink&quot; title=&quot;2018年度总结&quot;&gt;&lt;/a&gt;2018年度总结&lt;/h2&gt;&lt;p&gt;这年真的过得很快，很多事情感觉都没来得及准备或者开始就结束了。&lt;/p&gt;
&lt;pre&gt;&lt;code
      
    
    </summary>
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://hawkyAndroid.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>Android Animator之XML动画</title>
    <link href="http://hawkyAndroid.github.io/2018/12/26/summary-animation-xml/"/>
    <id>http://hawkyAndroid.github.io/2018/12/26/summary-animation-xml/</id>
    <published>2018-12-26T13:19:55.000Z</published>
    <updated>2018-12-26T13:21:54.056Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）-使用XML编写动画。"><a href="#（一）-使用XML编写动画。" class="headerlink" title="（一） 使用XML编写动画。"></a>（一） 使用XML编写动画。</h3><p>使用 XML 编写动画的优点是：方便重用、可读性较高。</p><h4 id="1、-ValueAnimator-动画：res-animator-value-animator-01-xml"><a href="#1、-ValueAnimator-动画：res-animator-value-animator-01-xml" class="headerlink" title="1、  ValueAnimator 动画：res/animator/value_animator_01.xml"></a>1、  ValueAnimator 动画：res/animator/value_animator_01.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">animator</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:duration</span>=<span class="string">"2000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:interpolator</span>=<span class="string">"@android:anim/accelerate_interpolator"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:repeatCount</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:repeatMode</span>=<span class="string">"reverse"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:startOffset</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueFrom</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueTo</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueType</span>=<span class="string">"intType"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>AnimatorInflater 加载动画并执行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载属性动画</span></span><br><span class="line"> ValueAnimator animator = (ValueAnimator) AnimatorInflater.loadAnimator(<span class="keyword">this</span>, R.animator.value_animator_01);</span><br><span class="line"><span class="comment">// 添加（值）数据更新监听</span></span><br><span class="line">animator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> value = (<span class="keyword">int</span>) animation.getAnimatedValue();</span><br><span class="line">       DebugLog.e(<span class="string">"value："</span> + value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">animator.start();</span><br></pre></td></tr></table></figure></p><h4 id="2、-ObjectAnimator-动画：res-animator-object-animator-01-xml"><a href="#2、-ObjectAnimator-动画：res-animator-object-animator-01-xml" class="headerlink" title="2、  ObjectAnimator 动画：res/animator/object_animator_01.xml"></a>2、  ObjectAnimator 动画：res/animator/object_animator_01.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">objectAnimator</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:duration</span>=<span class="string">"3000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:interpolator</span>=<span class="string">"@android:interpolator/linear"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:propertyName</span>=<span class="string">"alpha"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:repeatCount</span>=<span class="string">"2"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:repeatMode</span>=<span class="string">"reverse"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:startOffset</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueFrom</span>=<span class="string">"0.1F"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueTo</span>=<span class="string">"1F"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueType</span>=<span class="string">"floatType"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>AnimatorInflater 加载动画并执行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载属性动画</span></span><br><span class="line">ObjectAnimator animator = (ObjectAnimator) AnimatorInflater.loadAnimator(<span class="keyword">this</span>, R.animator.object_animator_01);</span><br><span class="line"><span class="comment">// 设置目标对象</span></span><br><span class="line">animator.setTarget(textView);</span><br><span class="line"><span class="comment">// 添加动画监听</span></span><br><span class="line">animator.addListener(<span class="keyword">new</span> AnimatorListenerAdapter() &#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationStart</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画开始"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画结束"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br><span class="line">animator.start();</span><br></pre></td></tr></table></figure></p><h4 id="3、-ValueAnimator-组合动画：res-animator-animator-set-01-xml"><a href="#3、-ValueAnimator-组合动画：res-animator-animator-set-01-xml" class="headerlink" title="3、  ValueAnimator 组合动画：res/animator/animator_set_01.xml"></a>3、  ValueAnimator 组合动画：res/animator/animator_set_01.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:ordering</span>=<span class="string">"together"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">objectAnimator</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">"3000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:propertyName</span>=<span class="string">"alpha"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:valueFrom</span>=<span class="string">"0.1F"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:valueTo</span>=<span class="string">"1F"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:valueType</span>=<span class="string">"floatType"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span> <span class="attr">android:ordering</span>=<span class="string">"sequentially"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">objectAnimator</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:duration</span>=<span class="string">"1500"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:propertyName</span>=<span class="string">"rotation"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueFrom</span>=<span class="string">"0F"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueTo</span>=<span class="string">"180F"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueType</span>=<span class="string">"floatType"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">objectAnimator</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:duration</span>=<span class="string">"1500"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:propertyName</span>=<span class="string">"rotation"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueFrom</span>=<span class="string">"180F"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueTo</span>=<span class="string">"0F"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueType</span>=<span class="string">"floatType"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><p>AnimatorInflater 加载组合动画并执行：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载组合属性动画</span></span><br><span class="line">Animator animator = AnimatorInflater.loadAnimator(<span class="keyword">this</span>, R.animator.animator_set_01);</span><br><span class="line"><span class="comment">// 设置目标对象</span></span><br><span class="line">animator.setTarget(textView);</span><br><span class="line">animator.start();</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）-使用XML编写动画。&quot;&gt;&lt;a href=&quot;#（一）-使用XML编写动画。&quot; class=&quot;headerlink&quot; title=&quot;（一） 使用XML编写动画。&quot;&gt;&lt;/a&gt;（一） 使用XML编写动画。&lt;/h3&gt;&lt;p&gt;使用 XML 编写动画的优点是：方便重用、可
      
    
    </summary>
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/categories/Animation/"/>
    
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/tags/Animation/"/>
    
  </entry>
  
  <entry>
    <title>Android Animator之ObjectAnimator</title>
    <link href="http://hawkyAndroid.github.io/2018/12/25/summary-animation-objectanimator/"/>
    <id>http://hawkyAndroid.github.io/2018/12/25/summary-animation-objectanimator/</id>
    <published>2018-12-25T14:14:26.000Z</published>
    <updated>2018-12-27T11:37:26.788Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）ObjectAnimation-概述"><a href="#（一）ObjectAnimation-概述" class="headerlink" title="（一）ObjectAnimation 概述"></a>（一）ObjectAnimation 概述</h3><p>ObjectAnimator：可以直接对任意对象的任意属性进行动画操作。其中控件的属性(必须有对应的get/set方法)可以通过控件本身或者父View的源码查询。</p><h3 id="（二）ObjectAnimation-用法"><a href="#（二）ObjectAnimation-用法" class="headerlink" title="（二）ObjectAnimation 用法"></a>（二）ObjectAnimation 用法</h3><p>1、一般动画 ObjectAnimation<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取当前控件Y轴缩放比</span></span><br><span class="line"><span class="keyword">float</span> currentScaleX = textView.getScaleX();</span><br><span class="line"><span class="comment">// 控件Y轴放大3倍。属性名scaleY对应 getScaleY()和setScaleY(float scaleY)方法。</span></span><br><span class="line">ObjectAnimator objectAnimator = ObjectAnimator.ofFloat(textView, <span class="string">"scaleY"</span>, <span class="number">1F</span>, <span class="number">3F</span>);</span><br><span class="line">objectAnimator.setDuration(<span class="number">1000L</span>);</span><br><span class="line">objectAnimator.start();</span><br></pre></td></tr></table></figure></p><p>2、组合动画 AnimatorSet<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">AnimatorSet animatorSet = <span class="keyword">new</span> AnimatorSet();</span><br><span class="line"></span><br><span class="line">ObjectAnimator alphaAnimator = ObjectAnimator.ofFloat(textView, <span class="string">"alpha"</span>, <span class="number">1F</span>, <span class="number">0.1F</span>);</span><br><span class="line">ObjectAnimator rotationAnimator = ObjectAnimator.ofFloat(textView, <span class="string">"rotation"</span>, <span class="number">0F</span>, <span class="number">360F</span>);</span><br><span class="line">ObjectAnimator scaleXAnimator = ObjectAnimator.ofFloat(textView, <span class="string">"scaleX"</span>, <span class="number">1F</span>, <span class="number">3F</span>);</span><br><span class="line">ObjectAnimator translationXAnimator = ObjectAnimator.ofFloat(textView, <span class="string">"translationX"</span>, <span class="number">0F</span>, -<span class="number">300F</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// with：alphaAnimator与rotationAnimator同时执行</span></span><br><span class="line">animatorSet.play(alphaAnimator).with(rotationAnimator);</span><br><span class="line"><span class="comment">// before：alphaAnimator在translationXAnimator之前执行</span></span><br><span class="line">animatorSet.play(alphaAnimator).before(translationXAnimator);</span><br><span class="line"><span class="comment">// after：alphaAnimator在scaleXAnimator之后执行</span></span><br><span class="line">animatorSet.play(alphaAnimator).after(scaleXAnimator);</span><br><span class="line"><span class="comment">// after：alphaAnimator在1s之后执行</span></span><br><span class="line">animatorSet.play(alphaAnimator).after(<span class="number">1000L</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// playTogether：同时执行多个动画</span></span><br><span class="line">animatorSet.playTogether(alphaAnimator, rotationAnimator, scaleXAnimator, translationXAnimator);</span><br><span class="line"><span class="comment">// playSequentially：多个动画按顺序执行</span></span><br><span class="line">animatorSet.playSequentially(alphaAnimator, rotationAnimator, scaleXAnimator, translationXAnimator);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 动画加速</span></span><br><span class="line">animatorSet.setInterpolator(<span class="keyword">new</span> AccelerateInterpolator());</span><br><span class="line"><span class="comment">// 动画监听</span></span><br><span class="line">animatorSet.addListener(<span class="keyword">new</span> AnimatorListenerAdapter() &#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationStart</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画开始"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationCancel</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画取消"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationRepeat</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画重复执行"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationPause</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画暂停"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationResume</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画继续"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">       DebugLog.e(<span class="string">"动画结束"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 执行时长。若同时执行则为 1s，反之累加。</span></span><br><span class="line">animatorSet.setDuration(<span class="number">1000L</span>);</span><br><span class="line"><span class="comment">// 延时 1s 执行</span></span><br><span class="line">animatorSet.setStartDelay(<span class="number">1000L</span>);</span><br><span class="line">animatorSet.start();</span><br></pre></td></tr></table></figure></p><h3 id="（三）Interpolator-用法"><a href="#（三）Interpolator-用法" class="headerlink" title="（三）Interpolator 用法"></a>（三）Interpolator 用法</h3><p>Interpolator插值器 定义动画的变化率。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义一个先减速后加速的Interpolator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DecelerateAccelerateInterpolator</span> <span class="keyword">implements</span> <span class="title">TimeInterpolator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> input 系统根据设定的动画时长匀速增加，变化范围是0到1。</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> fraction 斜率决定快慢  - +</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getInterpolation</span><span class="params">(<span class="keyword">float</span> input)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (input &lt; <span class="number">0.5f</span>) &#123;<span class="comment">// x ∈[0, 1/2)</span></span><br><span class="line">          <span class="keyword">return</span> (<span class="keyword">float</span>) (Math.sin(input * Math.PI) / <span class="number">2.0f</span>);<span class="comment">// y∈[0, 1/2] 【-】</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;<span class="comment">// x ∈[1/2, 1]</span></span><br><span class="line">          <span class="keyword">return</span> <span class="number">1</span> - (<span class="keyword">float</span>) (Math.sin(input * Math.PI) / <span class="number">2.0f</span>);<span class="comment">// y∈ 1 - [1/2, 0] 【+】</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（四）ObjectAnimation-实例"><a href="#（四）ObjectAnimation-实例" class="headerlink" title="（四）ObjectAnimation 实例"></a>（四）ObjectAnimation 实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ObjectAnimator 小球加速下落过程中颜色过渡动画</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ObjectAnimatorView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CIRCLE_RADIUS = <span class="number">100</span>;<span class="comment">// 圆的半径</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mWidth, mHeight;<span class="comment">// 控件大小</span></span><br><span class="line">    <span class="keyword">private</span> Point mCurrentPoint;<span class="comment">// 当前中心点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mColor;<span class="comment">// 颜色值</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ObjectAnimatorView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ObjectAnimatorView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mPaint.setColor(Color.RED);</span><br><span class="line"></span><br><span class="line">        mCurrentPoint = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        <span class="keyword">this</span>.mWidth = w;</span><br><span class="line">        <span class="keyword">this</span>.mHeight = h;</span><br><span class="line">        mCurrentPoint.set(mWidth / <span class="number">2</span>, CIRCLE_RADIUS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getColor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(<span class="keyword">int</span> color)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mColor = color;</span><br><span class="line">        mPaint.setColor(color);</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ObjectAnimator：本对象必须要有关于color属性的set/get方法。 Red -&gt; Green -&gt; Blue颜色变化</span></span><br><span class="line">        ObjectAnimator objectAnimator = ObjectAnimator.ofObject(<span class="keyword">this</span>, <span class="string">"color"</span>, <span class="keyword">new</span> ArgbEvaluator(), Color.RED, Color.GREEN, Color.BLUE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ValueAnimator：中心点的坐标位置过渡</span></span><br><span class="line">        Point startPoint = <span class="keyword">new</span> Point(mWidth / <span class="number">2</span>, CIRCLE_RADIUS);</span><br><span class="line">        Point endPoint = <span class="keyword">new</span> Point(mWidth / <span class="number">2</span>, mHeight / <span class="number">2</span>);</span><br><span class="line">        ValueAnimator valueAnimator = ValueAnimator.ofObject(<span class="keyword">new</span> PointEvaluator(), startPoint, endPoint);</span><br><span class="line">        valueAnimator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</span><br><span class="line">                mCurrentPoint = (Point) animation.getAnimatedValue();</span><br><span class="line">                invalidate();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        valueAnimator.addListener(<span class="keyword">new</span> AnimatorListenerAdapter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">                DebugLog.e(<span class="string">"动画结束"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 组合成一个动画</span></span><br><span class="line">        AnimatorSet animatorSet = <span class="keyword">new</span> AnimatorSet();</span><br><span class="line">        animatorSet.play(objectAnimator).with(valueAnimator);</span><br><span class="line">        animatorSet.setDuration(<span class="number">3000L</span>);</span><br><span class="line">        <span class="comment">// 设置插值器：加速变化（默认是AccelerateDecelerateInterpolator）</span></span><br><span class="line">        animatorSet.setInterpolator(<span class="keyword">new</span> AccelerateInterpolator(<span class="number">2F</span>));</span><br><span class="line">        animatorSet.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        mPaint.setStyle(Paint.Style.FILL);</span><br><span class="line">        canvas.drawCircle(mCurrentPoint.x, mCurrentPoint.y, CIRCLE_RADIUS, mPaint);</span><br><span class="line"></span><br><span class="line">        mPaint.reset();</span><br><span class="line">        canvas.drawLine(<span class="number">0</span>, mHeight / <span class="number">2</span> + CIRCLE_RADIUS, mWidth, mHeight / <span class="number">2</span> + CIRCLE_RADIUS, mPaint);</span><br><span class="line">        mPaint.setColor(Color.RED);</span><br><span class="line">        mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        mPaint.setStrokeWidth(<span class="number">15F</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> LIMIT_COUNT = <span class="number">19</span>;</span><br><span class="line">        <span class="keyword">int</span> pointDist = mWidth / LIMIT_COUNT;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; LIMIT_COUNT; i++) &#123;</span><br><span class="line">            canvas.drawPoint(pointDist * i, mHeight / <span class="number">2</span> + CIRCLE_RADIUS, mPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）ObjectAnimation-概述&quot;&gt;&lt;a href=&quot;#（一）ObjectAnimation-概述&quot; class=&quot;headerlink&quot; title=&quot;（一）ObjectAnimation 概述&quot;&gt;&lt;/a&gt;（一）ObjectAnimation 概述&lt;/
      
    
    </summary>
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/categories/Animation/"/>
    
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/tags/Animation/"/>
    
  </entry>
  
  <entry>
    <title>Android Animator之ValueAnimator</title>
    <link href="http://hawkyAndroid.github.io/2018/12/21/summary-animation-valueanimator/"/>
    <id>http://hawkyAndroid.github.io/2018/12/21/summary-animation-valueanimator/</id>
    <published>2018-12-21T12:34:55.000Z</published>
    <updated>2018-12-26T13:27:34.291Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）Android-动画概述"><a href="#（一）Android-动画概述" class="headerlink" title="（一）Android 动画概述"></a>（一）Android 动画概述</h3><pre><code>补间动画(Tweened Animation)：只会改变View的显示效果，不会改变View的真正属性（比如：按钮经补间动画平移后，点击平移后位置上按钮是无效的）。逐帧动画(Frame-by-Frame Animation)：只是将一个完整的动画拆分成一些单独的图片，然后再将它们按顺序连贯起来进行播放。ValueAnimator：只能用于计算在指定时间内，初始值到结束值之间(中间可能有多个过渡值)平滑的动画过渡。ObjectAnimator：可以直接对任意对象的任意属性进行动画操作。--功能强大View可以直接执行动画： view.animate().x(500).y(500).setDuration(5000);</code></pre><h3 id="（二）TypeEvaluator-用法"><a href="#（二）TypeEvaluator-用法" class="headerlink" title="（二）TypeEvaluator 用法"></a>（二）TypeEvaluator 用法</h3><p>TypeEvaluator：作用是告诉动画系统如何从初始值过渡到结束值。</p><p>自定义一个TypeEvaluator:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * PointEvaluator：告诉动画系统起始点到结束点的过渡机制</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PointEvaluator</span> <span class="keyword">implements</span> <span class="title">TypeEvaluator</span>&lt;<span class="title">Point</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算初始值到结束值的过渡</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fraction   动画完成进度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> startValue 初始值（对象）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> endValue   结束值（对象）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Point <span class="title">evaluate</span><span class="params">(<span class="keyword">float</span> fraction, Point startValue, Point endValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> floatX = startValue.x + fraction * (endValue.x - startValue.x);</span><br><span class="line">        <span class="keyword">float</span> floatY = startValue.y + fraction * (endValue.y - startValue.y);</span><br><span class="line">        DebugLog.e(<span class="string">"floatX："</span> + floatX + <span class="string">", floatY："</span> + floatY);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point((<span class="keyword">int</span>) floatX, (<span class="keyword">int</span>) floatY);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>执行两个点之间的动画过渡:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PointEvaluator evaluator = <span class="keyword">new</span> PointEvaluator();</span><br><span class="line">Point startPoint = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">Point endPoint = <span class="keyword">new</span> Point(<span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">ValueAnimator valueAnimator = ValueAnimator.ofObject(evaluator, startPoint, endPoint);</span><br><span class="line">valueAnimator.setDuration(<span class="number">10000L</span>);</span><br><span class="line">valueAnimator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</span><br><span class="line">        Point point = (Point) animation.getAnimatedValue();</span><br><span class="line">        DebugLog.e(<span class="string">"point："</span> + point.toString());<span class="comment">// 新的过渡点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">valueAnimator.start();</span><br></pre></td></tr></table></figure></p><h3 id="（三）ValueAnimator-实例"><a href="#（三）ValueAnimator-实例" class="headerlink" title="（三）ValueAnimator 实例"></a>（三）ValueAnimator 实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ValueAnimator之画圆动画过渡轨迹</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValueAnimatorView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> Path mDstPath;<span class="comment">// 目标路径</span></span><br><span class="line">    <span class="keyword">private</span> PathMeasure mPathMeasure;</span><br><span class="line">    <span class="keyword">private</span> ValueAnimator mValueAnimator;<span class="comment">// 值动画</span></span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mWidth, mHeight;<span class="comment">// 控件大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mCirclePerimeter;<span class="comment">// 圆的周长</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mStopD;<span class="comment">// 截取的结束位置距离Path起点的路径(轨迹)长度</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ValueAnimatorView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ValueAnimatorView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        <span class="keyword">this</span>.mContext = context;</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mPaint.setColor(Color.RED);</span><br><span class="line">        mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        mPaint.setStrokeWidth(DensityUtils.dip2px(mContext, <span class="number">15</span>));</span><br><span class="line"></span><br><span class="line">        Path path = <span class="keyword">new</span> Path();</span><br><span class="line">        path.addCircle(<span class="number">0</span>, <span class="number">0</span>, DensityUtils.dip2px(mContext, <span class="number">100</span>), Path.Direction.CW);</span><br><span class="line">        mPathMeasure = <span class="keyword">new</span> PathMeasure(path, <span class="keyword">false</span>);</span><br><span class="line">        mCirclePerimeter = mPathMeasure.getLength();</span><br><span class="line"></span><br><span class="line">        mDstPath = <span class="keyword">new</span> Path();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// super.onMeasure(widthMeasureSpec, heightMeasureSpec);</span></span><br><span class="line">        <span class="keyword">int</span> width = measureDimension(DensityUtils.dip2px(mContext, <span class="number">250</span>), widthMeasureSpec);</span><br><span class="line">        <span class="keyword">int</span> height = measureDimension(DensityUtils.dip2px(mContext, <span class="number">250</span>), heightMeasureSpec);</span><br><span class="line">        setMeasuredDimension(width, height);<span class="comment">// 保存最终测量的宽高</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">measureDimension</span><span class="params">(<span class="keyword">int</span> defaultSize, <span class="keyword">int</span> measureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result;</span><br><span class="line">        <span class="keyword">int</span> specMode = MeasureSpec.getMode(measureSpec);</span><br><span class="line">        <span class="keyword">int</span> specSize = MeasureSpec.getSize(measureSpec);</span><br><span class="line">        <span class="keyword">if</span> (specMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">            result = specSize;<span class="comment">// 指定大小</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = defaultSize;<span class="comment">// 默认大小</span></span><br><span class="line">            <span class="keyword">if</span> (specMode == MeasureSpec.AT_MOST) &#123;</span><br><span class="line">                result = Math.min(result, specSize);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        <span class="keyword">this</span>.mWidth = w;</span><br><span class="line">        <span class="keyword">this</span>.mHeight = h;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开始动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mValueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mValueAnimator.isRunning()) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            mValueAnimator = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mValueAnimator = ValueAnimator.ofFloat(<span class="number">0</span>, <span class="number">1F</span>);<span class="comment">// ValueAnimator.ofFloat(0, 0.8F, 1F);// 后面20%变慢</span></span><br><span class="line">        mValueAnimator.setDuration(<span class="number">3000L</span>);<span class="comment">// 每次持续3s（默认300ms）</span></span><br><span class="line">        mValueAnimator.setRepeatCount(<span class="number">2</span>);<span class="comment">// 重复 2+1 次； 总时间：mValueAnimator.getTotalDuration()</span></span><br><span class="line">        mValueAnimator.setRepeatMode(ValueAnimator.REVERSE);<span class="comment">// 反向重复</span></span><br><span class="line">        mValueAnimator.setInterpolator(<span class="keyword">new</span> AccelerateInterpolator());<span class="comment">// 动画插入器：Interpolator插值器定义动画的变化率。</span></span><br><span class="line">        mValueAnimator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator animation)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">float</span> value = (<span class="keyword">float</span>) animation.getAnimatedValue();<span class="comment">// [0.0f, 1.0f]</span></span><br><span class="line">                mStopD = mCirclePerimeter * value;</span><br><span class="line">                invalidate();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        mValueAnimator.setStartDelay(<span class="number">1000L</span>);<span class="comment">// 延时1s执行动画</span></span><br><span class="line">        <span class="comment">//  mValueAnimator.reverse();// 反向执行</span></span><br><span class="line">        mValueAnimator.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 暂停动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pauseAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mValueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mValueAnimator.isRunning()) &#123;</span><br><span class="line">                mValueAnimator.pause();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 继续动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">resumeAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mValueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mValueAnimator.isRunning()) &#123;</span><br><span class="line">                mValueAnimator.resume();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 结束动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mValueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mValueAnimator.isRunning()) &#123;</span><br><span class="line">                mValueAnimator.end();</span><br><span class="line">            &#125;</span><br><span class="line">            mValueAnimator = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重启动画</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">restartAnimation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mValueAnimator != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mValueAnimator.isRunning()) &#123;</span><br><span class="line">                mValueAnimator.cancel();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        startAnimation();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDetachedFromWindow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDetachedFromWindow();</span><br><span class="line">        endAnimation();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        canvas.translate(mWidth / <span class="number">2</span>, mHeight / <span class="number">2</span>);</span><br><span class="line">        canvas.drawColor(Color.CYAN);</span><br><span class="line"></span><br><span class="line">        mDstPath.reset();</span><br><span class="line">        <span class="keyword">if</span> (mPathMeasure.getSegment(<span class="number">0</span>, mStopD, mDstPath, <span class="keyword">true</span>)) &#123;</span><br><span class="line">            canvas.drawPath(mDstPath, mPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）Android-动画概述&quot;&gt;&lt;a href=&quot;#（一）Android-动画概述&quot; class=&quot;headerlink&quot; title=&quot;（一）Android 动画概述&quot;&gt;&lt;/a&gt;（一）Android 动画概述&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;补间动画(Tween
      
    
    </summary>
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/categories/Animation/"/>
    
    
      <category term="Animation" scheme="http://hawkyAndroid.github.io/tags/Animation/"/>
    
  </entry>
  
  <entry>
    <title>Android View之GestureDetector</title>
    <link href="http://hawkyAndroid.github.io/2018/12/17/summary-view-gesturedetector/"/>
    <id>http://hawkyAndroid.github.io/2018/12/17/summary-view-gesturedetector/</id>
    <published>2018-12-17T11:34:15.000Z</published>
    <updated>2018-12-21T14:23:45.927Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）GestureDetector-概述"><a href="#（一）GestureDetector-概述" class="headerlink" title="（一）GestureDetector 概述"></a>（一）GestureDetector 概述</h3><p>GestureDetector：主要用来结合MotionEvent检测并识别各种手势事件，注意它只能用来识别并接管触摸事件的MotionEvent。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/********  常用步骤  **********/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1、创建GestureDetector实例并实现监听。注意：这里只会有一种事件类型的回调触发。</span></span><br><span class="line">GestureDetector gestureDetector = <span class="keyword">new</span> GestureDetector(<span class="keyword">this</span>, <span class="keyword">new</span> GestureDetector.SimpleOnGestureListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onSingleTapConfirmed</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"单击确认（事件），双击发生时不会触发"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDoubleTap</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"双击事件"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onDoubleTap(e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLongPress</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onLongPress(e);</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"长按事件"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDoubleTapEvent</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (e.getActionMasked()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"双击事件（手指抬起）"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onDoubleTapEvent(e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2、为指定控件设置触摸监听并让GestureDetector接管onTouchEvent事件。注意：view1需要是可点击的</span></span><br><span class="line">view1.setOnTouchListener(<span class="keyword">new</span> View.OnTouchListener() &#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> mGestureDetector.onTouchEvent(event);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="（二）GestureDetector-方法"><a href="#（二）GestureDetector-方法" class="headerlink" title="（二）GestureDetector 方法"></a>（二）GestureDetector 方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置是否禁用长按事件</span></span><br><span class="line">mGestureDetector.setIsLongpressEnabled(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否允许长按事件</span></span><br><span class="line">mGestureDetector.isLongpressEnabled();</span><br></pre></td></tr></table></figure><h3 id="（三）GestureDetector-实例"><a href="#（三）GestureDetector-实例" class="headerlink" title="（三）GestureDetector 实例"></a>（三）GestureDetector 实例</h3><p>1、GestureDetector 手势检测<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认监听OnGestureListener。常用的是SimpleOnGestureListener</span></span><br><span class="line"><span class="keyword">private</span> GestureDetector.OnGestureListener mDefaultGestureListener = <span class="keyword">new</span> GestureDetector.OnGestureListener() &#123;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 当View为文本、图片默认不可点击时，为保证事件被唯一的 View 消费，</span></span><br><span class="line"><span class="comment">      * 要么声明它们的 clickable 为 true，要么onDown回 true。</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@return</span> true则被唯一的View消费，反之被可被多个View消费</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onDown</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"按下"</span>);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 按下超过100ms触发，若小于100ms或事件被立即拦截则不会被触发。</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onShowPress</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"onShowPress"</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 单击抬起（在双击的第一次抬起时触发）</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onSingleTapUp</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"onSingleTapUp"</span>);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 监听滚动</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e1 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e2 手指移动时的MotionEvent</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> distanceX 在 X 轴上滚动的距离</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> distanceY 在 Y 轴上滚动的距离</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onScroll</span><span class="params">(MotionEvent e1, MotionEvent e2, <span class="keyword">float</span> distanceX, <span class="keyword">float</span> distanceY)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"onScroll#distanceX："</span> + distanceX + <span class="string">",distanceY："</span> + distanceY);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 长按超过500ms触发</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLongPress</span><span class="params">(MotionEvent e)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"onLongPress"</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * 抛(投掷)。通过 e1 和 e2 获取到手指按下和抬起时的坐标、时间等。</span></span><br><span class="line"><span class="comment">      * 通过 velocityX 和 velocityY 获取到在这段时间内的运动速度，单位是像素(距离)／秒。</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e1 手指按下时的MotionEvent</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> e2 手指移动时的MotionEvent</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> velocityX 在 X 轴上的运动速度(像素／秒)。</span></span><br><span class="line"><span class="comment">      * <span class="doctag">@param</span> velocityY 在 Y 轴上的运动速度(像素／秒)。</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onFling</span><span class="params">(MotionEvent e1, MotionEvent e2, <span class="keyword">float</span> velocityX, <span class="keyword">float</span> velocityY)</span> </span>&#123;</span><br><span class="line">         DebugLog.e(<span class="string">"onScroll#velocityX："</span> + velocityX + <span class="string">",velocityY："</span> + velocityY);</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure></p><p>2、ScaleGestureDetector 缩放手势检测<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * View之ScaleGestureDetector - 缩放手指检测（至少2根手指）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScaleGestureDetectorView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ScaleGestureDetector mScaleGestureDetector;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mPointCount;<span class="comment">// 手指数量</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ScaleGestureDetectorView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ScaleGestureDetectorView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mScaleGestureDetector = <span class="keyword">new</span> ScaleGestureDetector(context, <span class="keyword">new</span> ScaleGestureDetector.OnScaleGestureListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 缩放手势被触发</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> detector 缩放手势</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@return</span> true：表示当前缩放事件已被处理，会重新积累缩放因子；false 则会继续积累缩放因子。</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onScale</span><span class="params">(ScaleGestureDetector detector)</span> </span>&#123;</span><br><span class="line">                DebugLog.e(<span class="string">"focus("</span> + detector.getFocusX() + <span class="string">","</span> + detector.getFocusY() + <span class="string">")"</span>); <span class="comment">// 缩放中心(x,y)坐标 -- 焦点</span></span><br><span class="line">                DebugLog.e(<span class="string">"scale = "</span> + detector.getScaleFactor());  <span class="comment">// 缩放因子 -- 比例</span></span><br><span class="line">                DebugLog.e(<span class="string">"mPointCount："</span> + mPointCount);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 缩放手势开始</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> detector 缩放手势</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@return</span> 只有返回true才可使用缩放手势</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onScaleBegin</span><span class="params">(ScaleGestureDetector detector)</span> </span>&#123;</span><br><span class="line">                DebugLog.e(<span class="string">"-----缩放手势开始-----"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 缩放手势结束 MotionEvent.ACTION_POINTER_UP时触发</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> detector 缩放手势</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScaleEnd</span><span class="params">(ScaleGestureDetector detector)</span> </span>&#123;</span><br><span class="line">                DebugLog.e(<span class="string">"-----缩放手势结束-----"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        mPointCount = event.getPointerCount();</span><br><span class="line">        <span class="keyword">return</span> mScaleGestureDetector.onTouchEvent(event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）GestureDetector-概述&quot;&gt;&lt;a href=&quot;#（一）GestureDetector-概述&quot; class=&quot;headerlink&quot; title=&quot;（一）GestureDetector 概述&quot;&gt;&lt;/a&gt;（一）GestureDetector 概述&lt;/
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>Android View之Region</title>
    <link href="http://hawkyAndroid.github.io/2018/12/13/summary-view-region/"/>
    <id>http://hawkyAndroid.github.io/2018/12/13/summary-view-region/</id>
    <published>2018-12-13T11:08:55.000Z</published>
    <updated>2018-12-14T15:32:48.374Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）Region概述"><a href="#（一）Region概述" class="headerlink" title="（一）Region概述"></a>（一）Region概述</h3><p>Region（区域）是封闭的，可通过关联Path（不封闭图形）来判断特殊形状图形的点击区域（范围）。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  区域是否包含指定的点(x, y)</span></span><br><span class="line">region.contains(<span class="keyword">int</span> x, <span class="keyword">int</span> y);</span><br></pre></td></tr></table></figure></p><h3 id="（二）Region实例"><a href="#（二）Region实例" class="headerlink" title="（二）Region实例"></a>（二）Region实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * View - Region 判断点击范围是否在目标图形区域内</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegionView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> Path mPath;</span><br><span class="line">    <span class="keyword">private</span> RectF mBigRectF;</span><br><span class="line">    <span class="keyword">private</span> RectF mSmallRectF;</span><br><span class="line">    <span class="comment">// 目标图形区域</span></span><br><span class="line">    <span class="keyword">private</span> Region targetGraphRegion;</span><br><span class="line">    <span class="comment">// 模板边界区域（范围更大）</span></span><br><span class="line">    <span class="keyword">private</span> Region templateRegion;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按下时的区域标识</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> touchFlag = -<span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 当前的区域标识</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> currentFlag = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RegionView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RegionView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        mPath = <span class="keyword">new</span> Path();</span><br><span class="line">        targetGraphRegion = <span class="keyword">new</span> Region();</span><br><span class="line">        DebugLog.e(<span class="string">"初始化的目标图形区域#targetGraphRegion："</span> + targetGraphRegion.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        <span class="comment">// 创建模板边界区域</span></span><br><span class="line">        templateRegion = <span class="keyword">new</span> Region(<span class="number">0</span>, <span class="number">0</span>, w, h);</span><br><span class="line">        mBigRectF = <span class="keyword">new</span> RectF(w / <span class="number">2</span> - <span class="number">400</span>, h / <span class="number">2</span> - <span class="number">400</span>, w / <span class="number">2</span> + <span class="number">400</span>, h / <span class="number">2</span> + <span class="number">400</span>);</span><br><span class="line">        mSmallRectF = <span class="keyword">new</span> RectF(w / <span class="number">2</span> - <span class="number">200</span>, h / <span class="number">2</span> - <span class="number">200</span>, w / <span class="number">2</span> + <span class="number">200</span>, h / <span class="number">2</span> + <span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事件处理</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> px = (<span class="keyword">int</span>) event.getX();</span><br><span class="line">        <span class="keyword">int</span> py = (<span class="keyword">int</span>) event.getY();</span><br><span class="line">        <span class="keyword">switch</span> (event.getAction()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">                currentFlag = touchFlag = containsPoint(px, py);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                currentFlag = containsPoint(px, py);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:<span class="comment">// 释放手指时复位</span></span><br><span class="line">                currentFlag = containsPoint(px, py);</span><br><span class="line">                <span class="comment">// 如果按下的点和释放的点在同一区域而且是目标区域，则认为是点击事件（目标区域被点击）</span></span><br><span class="line">                <span class="keyword">if</span> (currentFlag == touchFlag &amp;&amp; currentFlag != -<span class="number">1</span>) &#123;</span><br><span class="line">                    DebugLog.e(<span class="string">"--在目标图形区域内被点击--"</span>);</span><br><span class="line">                    <span class="keyword">if</span> (mListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        mListener.onRegionClickListener(px, py);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                currentFlag = touchFlag = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_CANCEL:<span class="comment">// 被上层控件拦截时复位</span></span><br><span class="line">                currentFlag = touchFlag = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 目标图形区域是否包含指定的点</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">containsPoint</span><span class="params">(<span class="keyword">int</span> px, <span class="keyword">int</span> py)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> targetGraphRegion.contains(px, py) ? <span class="number">1</span> : -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图形绘制</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制扇形</span></span><br><span class="line">        mPath.reset();</span><br><span class="line">        <span class="comment">// 添加一个大圆弧到path</span></span><br><span class="line">        mPath.addArc(mBigRectF, <span class="number">230</span>, <span class="number">82</span>);</span><br><span class="line">        <span class="comment">// 添加一个小圆弧到path( 起点与上次最后一个坐标点连接) 310-230=80</span></span><br><span class="line">        mPath.arcTo(mSmallRectF, <span class="number">310</span>, -<span class="number">82</span>);</span><br><span class="line">        <span class="comment">// 连接成闭合曲线</span></span><br><span class="line">        mPath.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这将在templateRegion模板区域上裁剪出一个与路径mPath所绘制的目标图形相同的区域, 然后赋给targetGraphRegion。</span></span><br><span class="line">        <span class="comment">// 如果结果区域targetGraphRegion非空，则返回true。</span></span><br><span class="line">        <span class="comment">// 注意：不管mPath所绘制的目标图形是否闭合，生成的目标区域targetGraphRegion始终是闭合的。</span></span><br><span class="line">        <span class="keyword">boolean</span> success = targetGraphRegion.setPath(mPath, templateRegion);</span><br><span class="line">        DebugLog.e(<span class="string">"success："</span> + success);</span><br><span class="line">        DebugLog.e(<span class="string">"生成后的目标图形区域#targetGraphRegion："</span> + targetGraphRegion.toString());</span><br><span class="line">        <span class="keyword">if</span> (!targetGraphRegion.isEmpty()) &#123;</span><br><span class="line">            DebugLog.e(<span class="string">"targetGraphRegion.getBounds()："</span> + targetGraphRegion.getBounds().toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绘制Path图形</span></span><br><span class="line">        <span class="comment">// 添加触摸变色效果</span></span><br><span class="line">        <span class="keyword">if</span> (currentFlag == touchFlag &amp;&amp; currentFlag != -<span class="number">1</span>) &#123;</span><br><span class="line">            mPaint.setColor(Color.YELLOW);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mPaint.setColor(Color.RED);</span><br><span class="line">        &#125;</span><br><span class="line">        mPaint.setStyle(Paint.Style.FILL);</span><br><span class="line"><span class="comment">//        mPaint.setStyle(Paint.Style.STROKE);</span></span><br><span class="line"><span class="comment">//        mPaint.setStrokeWidth(20);</span></span><br><span class="line">        canvas.drawPath(mPath, mPaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RegionListener mListener;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setListener</span><span class="params">(RegionListener listener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mListener = listener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RegionListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onRegionClickListener</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）Region概述&quot;&gt;&lt;a href=&quot;#（一）Region概述&quot; class=&quot;headerlink&quot; title=&quot;（一）Region概述&quot;&gt;&lt;/a&gt;（一）Region概述&lt;/h3&gt;&lt;p&gt;Region（区域）是封闭的，可通过关联Path（不封闭图形）来判断
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>Android View之MotionEvent</title>
    <link href="http://hawkyAndroid.github.io/2018/12/11/summary-view-motionevent/"/>
    <id>http://hawkyAndroid.github.io/2018/12/11/summary-view-motionevent/</id>
    <published>2018-12-11T14:26:35.000Z</published>
    <updated>2018-12-15T17:30:42.024Z</updated>
    
    <content type="html"><![CDATA[<h3 id="（一）MotionEvent-单点触控"><a href="#（一）MotionEvent-单点触控" class="headerlink" title="（一）MotionEvent 单点触控"></a>（一）MotionEvent 单点触控</h3><p>event.getAction()：获取事件类型。</p><table><thead><tr><th>事件类型</th><th>说明</th></tr></thead><tbody><tr><td>ACTION_DOWN</td><td>手指按下时触发</td></tr><tr><td>ACTION_MOVE</td><td>手指在屏幕上滑动时(多次)触发</td></tr><tr><td>ACTION_UP</td><td>手指离开屏幕时触发</td></tr><tr><td>ACTION_CANCEL</td><td>手指被上层控件拦截时触发</td></tr></tbody></table><h3 id="（二）MotionEvent-多点触控"><a href="#（二）MotionEvent-多点触控" class="headerlink" title="（二）MotionEvent 多点触控"></a>（二）MotionEvent 多点触控</h3><p>几个名词解释：</p><pre><code>Action：具体的事件类型pointerIndex：指针（手指）的索引，用于获取具体事件（如：手指的坐标位置）。注意：落下手指时前面有空缺会优先填补空缺; 而手指抬起时后面的也会向前补位。pointerId：指针（手指）的唯一标识ID，用于识别是哪个手指。--推荐注意：pointerId在手指按下和抬起之间ID始终不变。举例说明：0x 00 00 01 0501 表示pointerIndex，05 表示Action</code></pre><p>event.getActionMasked()：获取事件类型。</p><table><thead><tr><th>事件类型</th><th>说明</th></tr></thead><tbody><tr><td>ACTION_DOWN</td><td>第一根手指首次按下时触发</td></tr><tr><td>ACTION_POINTER_DOWN</td><td>其他手指按下时触发</td></tr><tr><td>ACTION_MOVE</td><td>手指在屏幕上滑动时(多次)触发</td></tr><tr><td>ACTION_POINTER_UP</td><td>其他手指抬起时触发</td></tr><tr><td>ACTION_UP</td><td>最后一根手指离开屏幕时触发</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多点触控时获取事件类型（单点触控也可用）</span></span><br><span class="line">event.getActionMasked();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取该事件是哪个指针(手指)产生的（该方法只对DOWN、UP有效）。</span></span><br><span class="line">event.getActionIndex();</span><br><span class="line"><span class="comment">// 获取一个指针(手指)的唯一标识符ID，拿到PointerId用于追踪事件流--推荐。</span></span><br><span class="line"><span class="comment">// 在手指按下和抬起之间ID始终不变</span></span><br><span class="line"><span class="comment">// 参数：这里的pointerIndex就是actionIndex</span></span><br><span class="line">event.getPointerId(<span class="keyword">int</span> pointerIndex);</span><br><span class="line"><span class="comment">// 通过PointerId获取到当前状态下PointIndex，之后通过PointerIndex获取其他内容。</span></span><br><span class="line">event.findPointerIndex(<span class="keyword">int</span> pointerId);</span><br><span class="line"><span class="comment">// 获取在屏幕上指针(手指)的个数。</span></span><br><span class="line">event.getPointerCount();</span><br><span class="line"><span class="comment">// 获取某一个指针(手指)的X坐标</span></span><br><span class="line">event.getX(<span class="keyword">int</span> pointerIndex);</span><br><span class="line"><span class="comment">// 获取某一个指针(手指)的Y坐标</span></span><br><span class="line">event.getY(<span class="keyword">int</span> pointerIndex);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取历史事件集合大小（只记录 ACTION_MOVE 事件，所以单点触控也可以用）</span></span><br><span class="line">event.getHistorySize();</span><br><span class="line"><span class="comment">// 获取第index个手指的第pos个历史事件X坐标</span></span><br><span class="line">event.getHistoricalX(<span class="keyword">int</span> index, <span class="keyword">int</span> pos);</span><br><span class="line"><span class="comment">// 获取第index个手指的第pos个历史事件Y坐标</span></span><br><span class="line">event.getHistoricalY(<span class="keyword">int</span> index, <span class="keyword">int</span> pos);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手指按下时的时间</span></span><br><span class="line">event.getDownTime();</span><br><span class="line"><span class="comment">// 当前事件发生时的时间</span></span><br><span class="line">event.getEventTime();</span><br><span class="line"><span class="comment">// 获取历史事件发生的时间。注意：pos &lt; getHistorySize()</span></span><br><span class="line">event.getHistoricalEventTime(<span class="keyword">int</span> pos);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取第index手指与屏幕的接触面积大小</span></span><br><span class="line">event.getSize(<span class="keyword">int</span> index);</span><br><span class="line"><span class="comment">// 获取历史数据中第index个手指在第pos次事件中的接触面积</span></span><br><span class="line">event.getHistoricalSize(<span class="keyword">int</span> index, <span class="keyword">int</span> pos);</span><br><span class="line"><span class="comment">// 获取第index个手指的压力大小（可能无效）</span></span><br><span class="line">event.getPressure(<span class="keyword">int</span> index);</span><br><span class="line"><span class="comment">// 获取历史数据中第index个手指在第pos次事件中的压力大小（可能无效）</span></span><br><span class="line">event.getHistoricalPressure(<span class="keyword">int</span> index, <span class="keyword">int</span> pos);</span><br></pre></td></tr></table></figure><h3 id="（三）MotionEvent-多点触控实例"><a href="#（三）MotionEvent-多点触控实例" class="headerlink" title="（三）MotionEvent 多点触控实例"></a>（三）MotionEvent 多点触控实例</h3><p>实例1：追踪手指的轨迹<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * View - MultiTouch 追踪手指的轨迹</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 主要通过 event.getPointerId(event.getActionIndex())来识别是哪根手指（注意：从0开始）</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TrackFingerView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录第二根手指的位置</span></span><br><span class="line">    <span class="keyword">private</span> PointF pointF;</span><br><span class="line">    <span class="comment">// 是否存在第二根手指</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isPointer2 = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TrackFingerView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TrackFingerView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        pointF = <span class="keyword">new</span> PointF(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> index = event.getActionIndex();</span><br><span class="line">        <span class="keyword">switch</span> (event.getActionMasked()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_POINTER_DOWN:<span class="comment">// 第N根手指按下（N&gt;1）</span></span><br><span class="line">                <span class="keyword">if</span> (event.getPointerId(index) == <span class="number">1</span>) &#123;<span class="comment">// pointerId从0开始</span></span><br><span class="line">                    isPointer2 = <span class="keyword">true</span>;</span><br><span class="line">                    pointF.set(event.getX(), event.getY());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_POINTER_UP:<span class="comment">// 第N根手指抬起（N&gt;1）</span></span><br><span class="line">                <span class="keyword">if</span> (event.getPointerId(index) == <span class="number">1</span>) &#123;</span><br><span class="line">                    isPointer2 = <span class="keyword">false</span>;</span><br><span class="line">                    pointF.set(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                <span class="keyword">if</span> (event.getPointerId(index) == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="comment">// 获取第二根手指的索引</span></span><br><span class="line">                    <span class="keyword">int</span> pointerIndex = event.findPointerIndex(<span class="number">1</span>);</span><br><span class="line">                    <span class="comment">// 通过索引来获取第二根手指的坐标</span></span><br><span class="line">                    pointF.set(event.getX(pointerIndex), event.getY(pointerIndex));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:<span class="comment">// 最后一根手指抬起</span></span><br><span class="line">                isPointer2 = <span class="keyword">false</span>;</span><br><span class="line">                pointF.set(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        postInvalidateDelayed(<span class="number">20L</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isPointer2) &#123;</span><br><span class="line">            mPaint.setColor(Color.RED);</span><br><span class="line">            mPaint.setStyle(Paint.Style.FILL);</span><br><span class="line">            canvas.drawCircle(pointF.x, pointF.y, <span class="number">300</span>, mPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>实例2：可拖动的图片<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * View - MultiTouch 可拖动的图片(这里只处理第一根手指)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> [*昨日重现*] lhy_ycu@163.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> version 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DragBitmapView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Bitmap mBitmap;</span><br><span class="line">    <span class="comment">// 图片所在区域</span></span><br><span class="line">    <span class="keyword">private</span> RectF mRectF;</span><br><span class="line">    <span class="comment">// 记录最后一个点</span></span><br><span class="line">    <span class="keyword">private</span> PointF mLastPoint;</span><br><span class="line">    <span class="comment">// 用于数值转换</span></span><br><span class="line">    <span class="keyword">private</span> Matrix mMatrix;</span><br><span class="line">    <span class="comment">// 是否可以拖动</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> enableDrag;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DragBitmapView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DragBitmapView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        BitmapFactory.Options options = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">        options.inSampleSize = <span class="number">2</span>;<span class="comment">// 缩小2倍</span></span><br><span class="line">        mBitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_logo, options);</span><br><span class="line"></span><br><span class="line">        mRectF = <span class="keyword">new</span> RectF(<span class="number">0</span>, <span class="number">0</span>, mBitmap.getWidth(), mBitmap.getHeight());</span><br><span class="line">        mLastPoint = <span class="keyword">new</span> PointF();</span><br><span class="line">        mMatrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> index = event.getActionIndex();</span><br><span class="line">        <span class="keyword">switch</span> (event.getActionMasked()) &#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_POINTER_DOWN:</span><br><span class="line">                <span class="comment">// 第一根手指 在图片区域内 按下</span></span><br><span class="line">                <span class="keyword">if</span> (event.getPointerId(index) == <span class="number">0</span> &amp;&amp; mRectF.contains(event.getX(), event.getY())) &#123;</span><br><span class="line">                    enableDrag = <span class="keyword">true</span>;</span><br><span class="line">                    mLastPoint.set(event.getX(), event.getY());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                <span class="keyword">if</span> (enableDrag) &#123;</span><br><span class="line">                    <span class="keyword">int</span> pointerIndex = event.findPointerIndex(<span class="number">0</span>);</span><br><span class="line">                    <span class="comment">// 图片平移后第一根手指最后一个点的坐标</span></span><br><span class="line">                    mMatrix.postTranslate(event.getX(pointerIndex) - mLastPoint.x, event.getY(pointerIndex) - mLastPoint.y);</span><br><span class="line">                    mLastPoint.set(event.getX(pointerIndex), event.getY(pointerIndex));</span><br><span class="line">                    <span class="comment">// 更新图片区域</span></span><br><span class="line">                    mRectF.set(<span class="number">0</span>, <span class="number">0</span>, mBitmap.getWidth(), mBitmap.getHeight());</span><br><span class="line">                    mMatrix.mapRect(mRectF);</span><br><span class="line">                    invalidate();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_POINTER_UP:</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                <span class="comment">// 第一根手指 释放时复位</span></span><br><span class="line">                <span class="keyword">if</span> (event.getPointerId(index) == <span class="number">0</span>) &#123;</span><br><span class="line">                    enableDrag = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        canvas.drawBitmap(mBitmap, mMatrix, mPaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;（一）MotionEvent-单点触控&quot;&gt;&lt;a href=&quot;#（一）MotionEvent-单点触控&quot; class=&quot;headerlink&quot; title=&quot;（一）MotionEvent 单点触控&quot;&gt;&lt;/a&gt;（一）MotionEvent 单点触控&lt;/h3&gt;&lt;p&gt;ev
      
    
    </summary>
    
      <category term="View" scheme="http://hawkyAndroid.github.io/categories/View/"/>
    
    
      <category term="View" scheme="http://hawkyAndroid.github.io/tags/View/"/>
    
  </entry>
  
</feed>
